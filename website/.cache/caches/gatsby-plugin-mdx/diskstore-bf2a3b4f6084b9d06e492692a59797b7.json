{"expireTime":9007200846028969000,"key":"gatsby-plugin-mdx-entire-payload-6c208a35d241baa9c8e432523a58109d-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"Global vs Local","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":20,"offset":20},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you prefer, you can install Nexus globally and then use the global CLI to work with local Nexus projects. This is safe because the global CLI will hands off execution to the locally installed version of Nexus. For example:","position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":226,"offset":247},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":226,"offset":247},"indent":[]}},{"type":"jsx","value":"<div class=\"TightRow\">","position":{"start":{"line":6,"column":1,"offset":249},"end":{"line":6,"column":23,"offset":271},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"npm install --global nexus","position":{"start":{"line":8,"column":1,"offset":273},"end":{"line":10,"column":4,"offset":310},"indent":[1,1]}},{"type":"code","lang":"cli","meta":null,"value":"yarn global add nexus","position":{"start":{"line":12,"column":1,"offset":312},"end":{"line":14,"column":4,"offset":344},"indent":[1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":16,"column":1,"offset":346},"end":{"line":16,"column":7,"offset":352},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"cd my-project","position":{"start":{"line":18,"column":1,"offset":354},"end":{"line":20,"column":4,"offset":378},"indent":[1,1]}},{"type":"code","lang":"cli","meta":null,"value":"nexus dev","position":{"start":{"line":22,"column":1,"offset":380},"end":{"line":24,"column":4,"offset":400},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is just a convenience. It is equivilant to:","position":{"start":{"line":26,"column":1,"offset":402},"end":{"line":26,"column":49,"offset":450},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":402},"end":{"line":26,"column":49,"offset":450},"indent":[]}},{"type":"jsx","value":"<div class=\"TightRow\">","position":{"start":{"line":28,"column":1,"offset":452},"end":{"line":28,"column":23,"offset":474},"indent":[]}},{"type":"jsx","value":"<div>","position":{"start":{"line":30,"column":1,"offset":476},"end":{"line":30,"column":6,"offset":481},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"scripts\": {\n  \"nexus:dev\": \"nexus dev\"\n}","position":{"start":{"line":32,"column":1,"offset":483},"end":{"line":36,"column":4,"offset":536},"indent":[1,1,1,1]}},{"type":"code","lang":"cli","meta":null,"value":"npm run nexus:dev","position":{"start":{"line":38,"column":1,"offset":538},"end":{"line":40,"column":4,"offset":566},"indent":[1,1]}},{"type":"jsx","value":"</div>\n<div>","position":{"start":{"line":42,"column":1,"offset":568},"end":{"line":43,"column":6,"offset":580},"indent":[1]}},{"type":"code","lang":"cli","meta":null,"value":"yarn nexus dev","position":{"start":{"line":45,"column":1,"offset":582},"end":{"line":47,"column":4,"offset":607},"indent":[1,1]}},{"type":"jsx","value":"</div>\n</div>","position":{"start":{"line":49,"column":1,"offset":609},"end":{"line":50,"column":7,"offset":622},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If you have not installed your project dependencies then the handoff will fail and tell you to do so. In other words a globally installed Nexus will never allow its version to be what is actually running your project. This protects you from unwittingly running a project with a different version of Nexus than you have installed in that project.","position":{"start":{"line":52,"column":1,"offset":624},"end":{"line":52,"column":346,"offset":969},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":624},"end":{"line":52,"column":346,"offset":969},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"CLI\",\"metaTitle\":\"CLI\",\"metaDescription\":\"TODO\"}","position":{"start":{"line":55,"column":1,"offset":972},"end":{"line":55,"column":87,"offset":1058},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":55,"column":87,"offset":1058}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CLI\",\n  \"metaTitle\": \"CLI\",\n  \"metaDescription\": \"TODO\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"global-vs-local\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#global-vs-local\",\n    \"aria-label\": \"global vs local permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Global vs Local\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you prefer, you can install Nexus globally and then use the global CLI to work with local Nexus projects. This is safe because the global CLI will hands off execution to the locally installed version of Nexus. For example:\"), mdx(\"div\", {\n    className: \"TightRow\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"npm install --global nexus\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"yarn global add nexus\\n\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"cd my-project\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"nexus dev\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This is just a convenience. It is equivilant to:\"), mdx(\"div\", {\n    className: \"TightRow\"\n  }, mdx(\"div\", null, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"scripts\\\": {\\n  \\\"nexus:dev\\\": \\\"nexus dev\\\"\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"npm run nexus:dev\\n\"))), mdx(\"div\", null, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"yarn nexus dev\\n\")))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you have not installed your project dependencies then the handoff will fail and tell you to do so. In other words a globally installed Nexus will never allow its version to be what is actually running your project. This protects you from unwittingly running a project with a different version of Nexus than you have installed in that project.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"CLI\",\n  \"metaTitle\": \"CLI\",\n  \"metaDescription\": \"TODO\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h3 parentName=\"section\" {...{\n        \"id\": \"global-vs-local\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h3\" {...{\n          \"href\": \"#global-vs-local\",\n          \"aria-label\": \"global vs local permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Global vs Local`}</h3><p parentName=\"section\">{`If you prefer, you can install Nexus globally and then use the global CLI to work with local Nexus projects. This is safe because the global CLI will hands off execution to the locally installed version of Nexus. For example:`}</p><div class=\"TightRow\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n            \"className\": \"language-cli\"\n          }}>{`npm install --global nexus\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n            \"className\": \"language-cli\"\n          }}>{`yarn global add nexus\n`}</code></pre></div><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-cli\"\n        }}>{`cd my-project\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-cli\"\n        }}>{`nexus dev\n`}</code></pre><p parentName=\"section\">{`This is just a convenience. It is equivilant to:`}</p><div class=\"TightRow\"><div><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-json\"\n            }}>{`\"scripts\": {\n  \"nexus:dev\": \"nexus dev\"\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-cli\"\n            }}>{`npm run nexus:dev\n`}</code></pre></div>\n        <div><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-cli\"\n            }}>{`yarn nexus dev\n`}</code></pre></div>\n      </div><p parentName=\"section\">{`If you have not installed your project dependencies then the handoff will fail and tell you to do so. In other words a globally installed Nexus will never allow its version to be what is actually running your project. This protects you from unwittingly running a project with a different version of Nexus than you have installed in that project.`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}