{"expireTime":9007200846064571000,"key":"gatsby-plugin-mdx-entire-payload-fec115bdbb533c9ce9601fa27f57b98a-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Global","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":10,"offset":10},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":10,"offset":10},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus provides last-resort error handling for your app. It handles both of Node's ","position":{"start":{"line":4,"column":1,"offset":12},"end":{"line":4,"column":83,"offset":94},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/process.html#process_event_uncaughtexception","children":[{"type":"inlineCode","value":"uncaughtException","position":{"start":{"line":4,"column":84,"offset":95},"end":{"line":4,"column":103,"offset":114},"indent":[]}}],"position":{"start":{"line":4,"column":83,"offset":94},"end":{"line":4,"column":173,"offset":184},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":4,"column":173,"offset":184},"end":{"line":4,"column":178,"offset":189},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/process.html#process_event_unhandledrejection","children":[{"type":"inlineCode","value":"unhandledRejection","position":{"start":{"line":4,"column":179,"offset":190},"end":{"line":4,"column":199,"offset":210},"indent":[]}}],"position":{"start":{"line":4,"column":178,"offset":189},"end":{"line":4,"column":270,"offset":281},"indent":[]}},{"type":"text","value":" process events. The error will be logged and then your app process will be terminated with exit code 1.","position":{"start":{"line":4,"column":270,"offset":281},"end":{"line":4,"column":374,"offset":385},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":12},"end":{"line":4,"column":374,"offset":385},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Error Handling\",\"metaTitle\":\"Error Handling\"}","position":{"start":{"line":7,"column":1,"offset":388},"end":{"line":7,"column":84,"offset":471},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":84,"offset":471}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Error Handling\",\n  \"metaTitle\": \"Error Handling\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"global\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#global\",\n    \"aria-label\": \"global permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Global\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus provides last-resort error handling for your app. It handles both of Node's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nodejs.org/api/process.html#process_event_uncaughtexception\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"uncaughtException\")), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nodejs.org/api/process.html#process_event_unhandledrejection\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"unhandledRejection\")), \" process events. The error will be logged and then your app process will be terminated with exit code 1.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Error Handling\",\n  \"metaTitle\": \"Error Handling\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"global\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#global\",\n          \"aria-label\": \"global permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Global`}</h2><p parentName=\"section\">{`Nexus provides last-resort error handling for your app. It handles both of Node's `}<a parentName=\"p\" {...{\n          \"href\": \"https://nodejs.org/api/process.html#process_event_uncaughtexception\"\n        }}><inlineCode parentName=\"a\">{`uncaughtException`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n          \"href\": \"https://nodejs.org/api/process.html#process_event_unhandledrejection\"\n        }}><inlineCode parentName=\"a\">{`unhandledRejection`}</inlineCode></a>{` process events. The error will be logged and then your app process will be terminated with exit code 1.`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}