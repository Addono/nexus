{"expireTime":9007200846028967000,"key":"gatsby-plugin-mdx-entire-payload-550ede60ae09421a968078a32750693f-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Work, Run, Test","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":19,"offset":19},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":19,"offset":19},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus is a powerful tool built of multiple components that broadly fall into three categories: runtime, worktime, testtime.","position":{"start":{"line":4,"column":1,"offset":21},"end":{"line":4,"column":124,"offset":144},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":21},"end":{"line":4,"column":124,"offset":144},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"worktime","position":{"start":{"line":6,"column":2,"offset":147},"end":{"line":6,"column":10,"offset":155},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":146},"end":{"line":6,"column":11,"offset":156},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":146},"end":{"line":6,"column":11,"offset":156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The worktime component is a command line interface (CLI). It abstracts away numerous details like how to setup TypeScript. You develop your app with zero configuration using ","position":{"start":{"line":8,"column":1,"offset":158},"end":{"line":8,"column":175,"offset":332},"indent":[]}},{"type":"inlineCode","value":"nexus dev","position":{"start":{"line":8,"column":175,"offset":332},"end":{"line":8,"column":186,"offset":343},"indent":[]}},{"type":"text","value":", and then when you are ready, build it for production using ","position":{"start":{"line":8,"column":186,"offset":343},"end":{"line":8,"column":247,"offset":404},"indent":[]}},{"type":"inlineCode","value":"nexus build","position":{"start":{"line":8,"column":247,"offset":404},"end":{"line":8,"column":260,"offset":417},"indent":[]}},{"type":"text","value":". Once built, you run it in production like any other vanilla Node app.","position":{"start":{"line":8,"column":260,"offset":417},"end":{"line":8,"column":331,"offset":488},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":158},"end":{"line":8,"column":331,"offset":488},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"runtime","position":{"start":{"line":10,"column":2,"offset":491},"end":{"line":10,"column":9,"offset":498},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":490},"end":{"line":10,"column":10,"offset":499},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":490},"end":{"line":10,"column":10,"offset":499},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are a few runtime components. The one you'll deal with the most is the schema. It gives you powerful abstractions for implementing the GraphQL part of your API. Other runtime components include a JSON logger and HTTP server. It is possible to have a useful Nexus app that only ever touches the schema component, though most non-trivial apps will leverage all components.","position":{"start":{"line":12,"column":1,"offset":501},"end":{"line":12,"column":377,"offset":877},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":501},"end":{"line":12,"column":377,"offset":877},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"testtime","position":{"start":{"line":14,"column":2,"offset":880},"end":{"line":14,"column":10,"offset":888},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":879},"end":{"line":14,"column":11,"offset":889},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":879},"end":{"line":14,"column":11,"offset":889},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus pushes the boundaries of static typing as far as it can, but recognizes an unsatisfactory limit will be reached. Thus it embraces testing and ships with testtime components that are designed to pick up where static types drop off. While testtime components are the least developed so far, we think they will be a huge part of the value proposition, bringing levels of safety typically associated with other ","position":{"start":{"line":16,"column":1,"offset":891},"end":{"line":16,"column":414,"offset":1304},"indent":[]}},{"type":"link","title":null,"url":"https://www.idris-lang.org/","children":[{"type":"text","value":"languages","position":{"start":{"line":16,"column":415,"offset":1305},"end":{"line":16,"column":424,"offset":1314},"indent":[]}}],"position":{"start":{"line":16,"column":414,"offset":1304},"end":{"line":16,"column":454,"offset":1344},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":16,"column":454,"offset":1344},"end":{"line":16,"column":455,"offset":1345},"indent":[]}},{"type":"link","title":null,"url":"https://www.haskell.org/","children":[{"type":"text","value":"and","position":{"start":{"line":16,"column":456,"offset":1346},"end":{"line":16,"column":459,"offset":1349},"indent":[]}}],"position":{"start":{"line":16,"column":455,"offset":1345},"end":{"line":16,"column":486,"offset":1376},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":16,"column":486,"offset":1376},"end":{"line":16,"column":487,"offset":1377},"indent":[]}},{"type":"link","title":null,"url":"https://www.servant.dev/","children":[{"type":"text","value":"tools","position":{"start":{"line":16,"column":488,"offset":1378},"end":{"line":16,"column":493,"offset":1383},"indent":[]}}],"position":{"start":{"line":16,"column":487,"offset":1377},"end":{"line":16,"column":520,"offset":1410},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":16,"column":520,"offset":1410},"end":{"line":16,"column":521,"offset":1411},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":891},"end":{"line":16,"column":521,"offset":1411},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Concepts\",\"metaTitle\":\"Concepts\",\"metaDescription\":\"TODO\"}","position":{"start":{"line":19,"column":1,"offset":1414},"end":{"line":19,"column":97,"offset":1510},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":19,"column":97,"offset":1510}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Concepts\",\n  \"metaTitle\": \"Concepts\",\n  \"metaDescription\": \"TODO\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"work-run-test\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#work-run-test\",\n    \"aria-label\": \"work run test permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Work, Run, Test\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus is a powerful tool built of multiple components that broadly fall into three categories: runtime, worktime, testtime.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"worktime\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The worktime component is a command line interface (CLI). It abstracts away numerous details like how to setup TypeScript. You develop your app with zero configuration using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus dev\"), \", and then when you are ready, build it for production using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus build\"), \". Once built, you run it in production like any other vanilla Node app.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"runtime\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There are a few runtime components. The one you'll deal with the most is the schema. It gives you powerful abstractions for implementing the GraphQL part of your API. Other runtime components include a JSON logger and HTTP server. It is possible to have a useful Nexus app that only ever touches the schema component, though most non-trivial apps will leverage all components.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"testtime\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus pushes the boundaries of static typing as far as it can, but recognizes an unsatisfactory limit will be reached. Thus it embraces testing and ships with testtime components that are designed to pick up where static types drop off. While testtime components are the least developed so far, we think they will be a huge part of the value proposition, bringing levels of safety typically associated with other \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.idris-lang.org/\"\n  }), \"languages\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.haskell.org/\"\n  }), \"and\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.servant.dev/\"\n  }), \"tools\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Concepts\",\n  \"metaTitle\": \"Concepts\",\n  \"metaDescription\": \"TODO\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"work-run-test\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#work-run-test\",\n          \"aria-label\": \"work run test permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Work, Run, Test`}</h2><p parentName=\"section\">{`Nexus is a powerful tool built of multiple components that broadly fall into three categories: runtime, worktime, testtime.`}</p><p parentName=\"section\"><em parentName=\"p\">{`worktime`}</em></p><p parentName=\"section\">{`The worktime component is a command line interface (CLI). It abstracts away numerous details like how to setup TypeScript. You develop your app with zero configuration using `}<inlineCode parentName=\"p\">{`nexus dev`}</inlineCode>{`, and then when you are ready, build it for production using `}<inlineCode parentName=\"p\">{`nexus build`}</inlineCode>{`. Once built, you run it in production like any other vanilla Node app.`}</p><p parentName=\"section\"><em parentName=\"p\">{`runtime`}</em></p><p parentName=\"section\">{`There are a few runtime components. The one you'll deal with the most is the schema. It gives you powerful abstractions for implementing the GraphQL part of your API. Other runtime components include a JSON logger and HTTP server. It is possible to have a useful Nexus app that only ever touches the schema component, though most non-trivial apps will leverage all components.`}</p><p parentName=\"section\"><em parentName=\"p\">{`testtime`}</em></p><p parentName=\"section\">{`Nexus pushes the boundaries of static typing as far as it can, but recognizes an unsatisfactory limit will be reached. Thus it embraces testing and ships with testtime components that are designed to pick up where static types drop off. While testtime components are the least developed so far, we think they will be a huge part of the value proposition, bringing levels of safety typically associated with other `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.idris-lang.org/\"\n        }}>{`languages`}</a>{` `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.haskell.org/\"\n        }}>{`and`}</a>{` `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.servant.dev/\"\n        }}>{`tools`}</a>{`.`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}