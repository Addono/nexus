{"expireTime":9007200846064530000,"key":"gatsby-plugin-mdx-entire-payload-2b690e7f815a192d94e78ac8636d15a5-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The main module exports an application singleton. It is available as the default export. For convenience you can import the app components as named exports too.","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":161,"offset":160},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":161,"offset":160},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example of importing default export","position":{"start":{"line":3,"column":3,"offset":164},"end":{"line":3,"column":38,"offset":199},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":162},"end":{"line":3,"column":40,"offset":201},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":162},"end":{"line":3,"column":40,"offset":201},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import app from 'nexus'\n\napp.log.info('hello world')\n\napp.settings.change({\n  server: {\n    port: 5689,\n  },\n})\n\napp.schema.queryType({\n  definition(t) {\n    t.field('foo', { type: 'String' })\n  },\n})","position":{"start":{"line":5,"column":1,"offset":203},"end":{"line":21,"column":4,"offset":413},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example of imporrting named exports","position":{"start":{"line":23,"column":3,"offset":417},"end":{"line":23,"column":38,"offset":452},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":415},"end":{"line":23,"column":40,"offset":454},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":415},"end":{"line":23,"column":40,"offset":454},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { schema, settings, log } from 'nexus'\n\nlog.info('hello world')\n\nsettings.change({\n  server: {\n    port: 5689,\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.field('foo', { type: 'String' })\n  },\n})","position":{"start":{"line":25,"column":1,"offset":456},"end":{"line":41,"column":4,"offset":676},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"`nexus`\",\"metaTitle\":\"nexus\"}","position":{"start":{"line":44,"column":1,"offset":679},"end":{"line":44,"column":68,"offset":746},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":68,"offset":746}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"`nexus`\",\n  \"metaTitle\": \"nexus\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The main module exports an application singleton. It is available as the default export. For convenience you can import the app components as named exports too.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example of importing default export\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import app from 'nexus'\\n\\napp.log.info('hello world')\\n\\napp.settings.change({\\n  server: {\\n    port: 5689,\\n  },\\n})\\n\\napp.schema.queryType({\\n  definition(t) {\\n    t.field('foo', { type: 'String' })\\n  },\\n})\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example of imporrting named exports\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { schema, settings, log } from 'nexus'\\n\\nlog.info('hello world')\\n\\nsettings.change({\\n  server: {\\n    port: 5689,\\n  },\\n})\\n\\nschema.queryType({\\n  definition(t) {\\n    t.field('foo', { type: 'String' })\\n  },\\n})\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"`nexus`\",\n  \"metaTitle\": \"nexus\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`The main module exports an application singleton. It is available as the default export. For convenience you can import the app components as named exports too.`}</p>\n    <p><strong parentName=\"p\">{`Example of importing default export`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import app from 'nexus'\n\napp.log.info('hello world')\n\napp.settings.change({\n  server: {\n    port: 5689,\n  },\n})\n\napp.schema.queryType({\n  definition(t) {\n    t.field('foo', { type: 'String' })\n  },\n})\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example of imporrting named exports`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { schema, settings, log } from 'nexus'\n\nlog.info('hello world')\n\nsettings.change({\n  server: {\n    port: 5689,\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.field('foo', { type: 'String' })\n  },\n})\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}