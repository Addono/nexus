{"expireTime":9007200846028968000,"key":"gatsby-plugin-mdx-entire-payload-c5b4b7e6f079a51a4b0e5fffc44ce62c-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Prisma","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":9,"offset":9},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":9,"offset":9},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma","children":[{"type":"inlineCode","value":"issues","position":{"start":{"line":4,"column":2,"offset":12},"end":{"line":4,"column":10,"offset":20},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":11},"end":{"line":4,"column":125,"offset":135},"indent":[]}},{"type":"text","value":" – ","position":{"start":{"line":4,"column":125,"offset":135},"end":{"line":4,"column":128,"offset":138},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma+label%3Atype%2Ffeat","children":[{"type":"text","value":"features","position":{"start":{"line":4,"column":129,"offset":139},"end":{"line":4,"column":137,"offset":147},"indent":[]}}],"position":{"start":{"line":4,"column":128,"offset":138},"end":{"line":4,"column":272,"offset":282},"indent":[]}},{"type":"text","value":" ⬝ ","position":{"start":{"line":4,"column":272,"offset":282},"end":{"line":4,"column":275,"offset":285},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma+label%3Atype%2Fbug","children":[{"type":"text","value":"bugs","position":{"start":{"line":4,"column":276,"offset":286},"end":{"line":4,"column":280,"offset":290},"indent":[]}}],"position":{"start":{"line":4,"column":275,"offset":285},"end":{"line":4,"column":414,"offset":424},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":11},"end":{"line":4,"column":414,"offset":424},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Prisma is a next-generation developer-centric toolkit focused on making the data layer easy. This plugin gives you:","position":{"start":{"line":6,"column":1,"offset":426},"end":{"line":6,"column":116,"offset":541},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":426},"end":{"line":6,"column":116,"offset":541},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Workflow Integration","position":{"start":{"line":8,"column":6,"offset":548},"end":{"line":8,"column":26,"offset":568},"indent":[]}}],"position":{"start":{"line":8,"column":4,"offset":546},"end":{"line":8,"column":28,"offset":570},"indent":[]}},{"type":"break","position":{"start":{"line":8,"column":28,"offset":570},"end":{"line":9,"column":4,"offset":576},"indent":[4]}},{"type":"text","value":"Nexus ","position":{"start":{"line":9,"column":4,"offset":576},"end":{"line":9,"column":10,"offset":582},"indent":[]}},{"type":"inlineCode","value":"build","position":{"start":{"line":9,"column":10,"offset":582},"end":{"line":9,"column":17,"offset":589},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":9,"column":17,"offset":589},"end":{"line":9,"column":22,"offset":594},"indent":[]}},{"type":"inlineCode","value":"dev","position":{"start":{"line":9,"column":22,"offset":594},"end":{"line":9,"column":27,"offset":599},"indent":[]}},{"type":"text","value":" workflows are enhanced to run your Prisma generators.","position":{"start":{"line":9,"column":27,"offset":599},"end":{"line":9,"column":81,"offset":653},"indent":[]}}],"position":{"start":{"line":8,"column":4,"offset":546},"end":{"line":9,"column":81,"offset":653},"indent":[4]}}],"position":{"start":{"line":8,"column":1,"offset":543},"end":{"line":10,"column":1,"offset":654},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Runtime Integration","position":{"start":{"line":11,"column":6,"offset":660},"end":{"line":11,"column":25,"offset":679},"indent":[]}}],"position":{"start":{"line":11,"column":4,"offset":658},"end":{"line":11,"column":27,"offset":681},"indent":[]}},{"type":"break","position":{"start":{"line":11,"column":27,"offset":681},"end":{"line":12,"column":4,"offset":687},"indent":[4]}},{"type":"text","value":"Nexus schema component ","position":{"start":{"line":12,"column":4,"offset":687},"end":{"line":12,"column":27,"offset":710},"indent":[]}},{"type":"link","title":null,"url":"/guides/schema#graphql-type-builders","children":[{"type":"text","value":"GraphQL type builders","position":{"start":{"line":12,"column":28,"offset":711},"end":{"line":12,"column":49,"offset":732},"indent":[]}}],"position":{"start":{"line":12,"column":27,"offset":710},"end":{"line":12,"column":88,"offset":771},"indent":[]}},{"type":"text","value":" are augmented with ","position":{"start":{"line":12,"column":88,"offset":771},"end":{"line":12,"column":108,"offset":791},"indent":[]}},{"type":"inlineCode","value":".model","position":{"start":{"line":12,"column":108,"offset":791},"end":{"line":12,"column":116,"offset":799},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":12,"column":116,"offset":799},"end":{"line":12,"column":121,"offset":804},"indent":[]}},{"type":"inlineCode","value":".crud","position":{"start":{"line":12,"column":121,"offset":804},"end":{"line":12,"column":128,"offset":811},"indent":[]}},{"type":"text","value":" methods. These make it easy for you to project your Prisma models and expose operations against them in your GraphQL API. Resolvers are dynamically created for you removing the need for traditional ORMs/query builders like TypeORM, Sequelize, or Knex. Out-of-box features include pagination, filtering, and ordering. And when you do need to drop down to custom resolvers a ","position":{"start":{"line":12,"column":128,"offset":811},"end":{"line":12,"column":502,"offset":1185},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js","children":[{"type":"inlineCode","value":"Prisma Client","position":{"start":{"line":12,"column":503,"offset":1186},"end":{"line":12,"column":518,"offset":1201},"indent":[]}}],"position":{"start":{"line":12,"column":502,"offset":1185},"end":{"line":12,"column":563,"offset":1246},"indent":[]}},{"type":"text","value":" instance on ","position":{"start":{"line":12,"column":563,"offset":1246},"end":{"line":12,"column":576,"offset":1259},"indent":[]}},{"type":"inlineCode","value":"context","position":{"start":{"line":12,"column":576,"offset":1259},"end":{"line":12,"column":585,"offset":1268},"indent":[]}},{"type":"text","value":" is ready to go.","position":{"start":{"line":12,"column":585,"offset":1268},"end":{"line":12,"column":601,"offset":1284},"indent":[]}}],"position":{"start":{"line":11,"column":4,"offset":658},"end":{"line":12,"column":601,"offset":1284},"indent":[4]}}],"position":{"start":{"line":11,"column":1,"offset":655},"end":{"line":13,"column":1,"offset":1285},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Testtime Integration","position":{"start":{"line":14,"column":6,"offset":1291},"end":{"line":14,"column":26,"offset":1311},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":1289},"end":{"line":14,"column":28,"offset":1313},"indent":[]}},{"type":"break","position":{"start":{"line":14,"column":28,"offset":1313},"end":{"line":15,"column":4,"offset":1319},"indent":[4]}},{"type":"text","value":"Nexus testing component is augmented with an instance of the ","position":{"start":{"line":15,"column":4,"offset":1319},"end":{"line":15,"column":65,"offset":1380},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js","children":[{"type":"inlineCode","value":"Prisma Client","position":{"start":{"line":15,"column":66,"offset":1381},"end":{"line":15,"column":81,"offset":1396},"indent":[]}}],"position":{"start":{"line":15,"column":65,"offset":1380},"end":{"line":15,"column":126,"offset":1441},"indent":[]}},{"type":"text","value":", to help you easily seed your database for your tests.","position":{"start":{"line":15,"column":126,"offset":1441},"end":{"line":15,"column":181,"offset":1496},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":1289},"end":{"line":15,"column":181,"offset":1496},"indent":[4]}}],"position":{"start":{"line":14,"column":1,"offset":1286},"end":{"line":15,"column":181,"offset":1496},"indent":[1]}}],"position":{"start":{"line":8,"column":1,"offset":543},"end":{"line":15,"column":181,"offset":1496},"indent":[1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!-- START doctoc generated TOC please keep comment here to allow auto update -->","position":{"start":{"line":17,"column":1,"offset":1498},"end":{"line":17,"column":82,"offset":1579},"indent":[]}},{"type":"jsx","value":"<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->","position":{"start":{"line":18,"column":1,"offset":1580},"end":{"line":18,"column":66,"offset":1645},"indent":[]}},{"type":"jsx","value":"<!-- END doctoc generated TOC please keep comment here to allow auto update -->","position":{"start":{"line":19,"column":1,"offset":1646},"end":{"line":19,"column":80,"offset":1725},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":21,"column":4,"offset":1730},"end":{"line":21,"column":16,"offset":1742},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1727},"end":{"line":21,"column":16,"offset":1742},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"1. Install the plugin","position":{"start":{"line":23,"column":3,"offset":1746},"end":{"line":23,"column":24,"offset":1767},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1744},"end":{"line":23,"column":26,"offset":1769},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1744},"end":{"line":23,"column":26,"offset":1769},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"npm install nexus-plugin-prisma","position":{"start":{"line":25,"column":1,"offset":1771},"end":{"line":27,"column":4,"offset":1813},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note: ","position":{"start":{"line":29,"column":3,"offset":1817},"end":{"line":29,"column":9,"offset":1823},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-prisma","position":{"start":{"line":29,"column":9,"offset":1823},"end":{"line":29,"column":30,"offset":1844},"indent":[]}},{"type":"text","value":" bundles the Prisma CLI. You can invoke it using ","position":{"start":{"line":29,"column":30,"offset":1844},"end":{"line":29,"column":79,"offset":1893},"indent":[]}},{"type":"inlineCode","value":"npm run prisma","position":{"start":{"line":29,"column":79,"offset":1893},"end":{"line":29,"column":95,"offset":1909},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":29,"column":95,"offset":1909},"end":{"line":29,"column":99,"offset":1913},"indent":[]}},{"type":"inlineCode","value":"yarn prisma","position":{"start":{"line":29,"column":99,"offset":1913},"end":{"line":29,"column":112,"offset":1926},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":29,"column":112,"offset":1926},"end":{"line":29,"column":113,"offset":1927},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":1817},"end":{"line":29,"column":113,"offset":1927},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1815},"end":{"line":29,"column":113,"offset":1927},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2. Enable the plugin","position":{"start":{"line":31,"column":3,"offset":1931},"end":{"line":31,"column":23,"offset":1951},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1929},"end":{"line":31,"column":25,"offset":1953},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1929},"end":{"line":31,"column":25,"offset":1953},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\n\nuse(prisma())","position":{"start":{"line":33,"column":1,"offset":1955},"end":{"line":38,"column":4,"offset":2052},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Getting started","position":{"start":{"line":40,"column":4,"offset":2057},"end":{"line":40,"column":19,"offset":2072},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2054},"end":{"line":40,"column":19,"offset":2072},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways you can start with the Prisma plugin. Either from scratch, or using an existing database.","position":{"start":{"line":42,"column":1,"offset":2074},"end":{"line":42,"column":109,"offset":2182},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2074},"end":{"line":42,"column":109,"offset":2182},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"From scratch","position":{"start":{"line":44,"column":5,"offset":2188},"end":{"line":44,"column":17,"offset":2200},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2184},"end":{"line":44,"column":17,"offset":2200},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"1. Create a ","position":{"start":{"line":46,"column":3,"offset":2204},"end":{"line":46,"column":15,"offset":2216},"indent":[]}},{"type":"inlineCode","value":"schema.prisma","position":{"start":{"line":46,"column":15,"offset":2216},"end":{"line":46,"column":30,"offset":2231},"indent":[]}},{"type":"text","value":" file","position":{"start":{"line":46,"column":30,"offset":2231},"end":{"line":46,"column":35,"offset":2236},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2202},"end":{"line":46,"column":37,"offset":2238},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2202},"end":{"line":46,"column":37,"offset":2238},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"//schema.prisma\n\ngenerator prisma_client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  id   Int @id @default(autoincrement())\n  name String\n}","position":{"start":{"line":48,"column":1,"offset":2240},"end":{"line":59,"column":4,"offset":2401},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2. Add a datasource to your schema","position":{"start":{"line":61,"column":3,"offset":2405},"end":{"line":61,"column":37,"offset":2439},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2403},"end":{"line":61,"column":39,"offset":2441},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2403},"end":{"line":61,"column":39,"offset":2441},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We recommend you use Postgres but MySQL and SQLite are also supported.","position":{"start":{"line":63,"column":1,"offset":2443},"end":{"line":63,"column":71,"offset":2513},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2443},"end":{"line":63,"column":71,"offset":2513},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To add your datasource, simply copy/paste one of the block below at the top of your ","position":{"start":{"line":65,"column":1,"offset":2515},"end":{"line":65,"column":85,"offset":2599},"indent":[]}},{"type":"inlineCode","value":"schema.prisma","position":{"start":{"line":65,"column":85,"offset":2599},"end":{"line":65,"column":100,"offset":2614},"indent":[]}},{"type":"text","value":" file","position":{"start":{"line":65,"column":100,"offset":2614},"end":{"line":65,"column":105,"offset":2619},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2515},"end":{"line":65,"column":105,"offset":2619},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note: You can also pass the database credentials via a ","position":{"start":{"line":67,"column":3,"offset":2623},"end":{"line":67,"column":58,"offset":2678},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":67,"column":58,"offset":2678},"end":{"line":67,"column":64,"offset":2684},"indent":[]}},{"type":"text","value":" file. ","position":{"start":{"line":67,"column":64,"offset":2684},"end":{"line":67,"column":71,"offset":2691},"indent":[]}},{"type":"link","title":null,"url":"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file#using-environment-variables","children":[{"type":"text","value":"Read more about it here","position":{"start":{"line":67,"column":72,"offset":2692},"end":{"line":67,"column":95,"offset":2715},"indent":[]}}],"position":{"start":{"line":67,"column":71,"offset":2691},"end":{"line":67,"column":216,"offset":2836},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":2623},"end":{"line":67,"column":216,"offset":2836},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2621},"end":{"line":67,"column":216,"offset":2836},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Using Postgres","position":{"start":{"line":69,"column":3,"offset":2840},"end":{"line":69,"column":17,"offset":2854},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2838},"end":{"line":69,"column":19,"offset":2856},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2838},"end":{"line":69,"column":19,"offset":2856},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"//schema.prisma\n\ndatasource db {\n  provider = \"postgres\"\n  url = \"postgresql://USER:PASSWORD@localhost:5432/DATABASE\"\n}","position":{"start":{"line":71,"column":1,"offset":2858},"end":{"line":78,"column":4,"offset":2991},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Using MySQL","position":{"start":{"line":80,"column":3,"offset":2995},"end":{"line":80,"column":14,"offset":3006},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2993},"end":{"line":80,"column":16,"offset":3008},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2993},"end":{"line":80,"column":16,"offset":3008},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"//schema.prisma\n\ndatasource db {\n  provider = \"mysql\"\n  url = \"mysql://USER:PASSWORD@localhost:3306/DATABASE\"\n}","position":{"start":{"line":82,"column":1,"offset":3010},"end":{"line":89,"column":4,"offset":3135},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Using SQLite","position":{"start":{"line":91,"column":3,"offset":3139},"end":{"line":91,"column":15,"offset":3151},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3137},"end":{"line":91,"column":17,"offset":3153},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3137},"end":{"line":91,"column":17,"offset":3153},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"//schema.prisma\n\ndatasource db {\n  provider = \"sqlite\"\n  url = \"file:./dev.db\"\n}","position":{"start":{"line":93,"column":1,"offset":3155},"end":{"line":100,"column":4,"offset":3249},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"3. Create a migration file","position":{"start":{"line":102,"column":3,"offset":3253},"end":{"line":102,"column":29,"offset":3279},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3251},"end":{"line":102,"column":31,"offset":3281},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3251},"end":{"line":102,"column":31,"offset":3281},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"npm run prisma migrate save --experimental","position":{"start":{"line":104,"column":1,"offset":3283},"end":{"line":106,"column":4,"offset":3335},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"4. Migrate your database","position":{"start":{"line":108,"column":3,"offset":3339},"end":{"line":108,"column":27,"offset":3363},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3337},"end":{"line":108,"column":29,"offset":3365},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3337},"end":{"line":108,"column":29,"offset":3365},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"npm run prisma migrate up --experimental","position":{"start":{"line":110,"column":1,"offset":3367},"end":{"line":112,"column":4,"offset":3417},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"5. You're all set","position":{"start":{"line":114,"column":3,"offset":3421},"end":{"line":114,"column":20,"offset":3438},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3419},"end":{"line":114,"column":22,"offset":3440},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3419},"end":{"line":114,"column":22,"offset":3440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You're ready to start working!","position":{"start":{"line":116,"column":1,"offset":3442},"end":{"line":116,"column":31,"offset":3472},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3442},"end":{"line":116,"column":31,"offset":3472},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"From an existing database","position":{"start":{"line":118,"column":5,"offset":3478},"end":{"line":118,"column":30,"offset":3503},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3474},"end":{"line":118,"column":30,"offset":3503},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When starting from an existing database, you should use ","position":{"start":{"line":120,"column":1,"offset":3505},"end":{"line":120,"column":57,"offset":3561},"indent":[]}},{"type":"link","title":null,"url":"https://www.prisma.io/docs/reference/tools-and-interfaces/introspection","children":[{"type":"text","value":"Prisma's instrospection","position":{"start":{"line":120,"column":58,"offset":3562},"end":{"line":120,"column":81,"offset":3585},"indent":[]}}],"position":{"start":{"line":120,"column":57,"offset":3561},"end":{"line":120,"column":155,"offset":3659},"indent":[]}},{"type":"text","value":" feature.","position":{"start":{"line":120,"column":155,"offset":3659},"end":{"line":120,"column":164,"offset":3668},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3505},"end":{"line":120,"column":164,"offset":3668},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"1. Create a ","position":{"start":{"line":122,"column":3,"offset":3672},"end":{"line":122,"column":15,"offset":3684},"indent":[]}},{"type":"inlineCode","value":"schema.prisma","position":{"start":{"line":122,"column":15,"offset":3684},"end":{"line":122,"column":30,"offset":3699},"indent":[]}},{"type":"text","value":" file","position":{"start":{"line":122,"column":30,"offset":3699},"end":{"line":122,"column":35,"offset":3704},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3670},"end":{"line":122,"column":37,"offset":3706},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3670},"end":{"line":122,"column":37,"offset":3706},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create a ","position":{"start":{"line":124,"column":1,"offset":3708},"end":{"line":124,"column":10,"offset":3717},"indent":[]}},{"type":"inlineCode","value":"schema.prisma","position":{"start":{"line":124,"column":10,"offset":3717},"end":{"line":124,"column":25,"offset":3732},"indent":[]}},{"type":"text","value":" file and add your database credentials in it so that Prisma can introspect your database schema.","position":{"start":{"line":124,"column":25,"offset":3732},"end":{"line":124,"column":122,"offset":3829},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3708},"end":{"line":124,"column":122,"offset":3829},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note: You can also pass the database credentials via a ","position":{"start":{"line":126,"column":3,"offset":3833},"end":{"line":126,"column":58,"offset":3888},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":126,"column":58,"offset":3888},"end":{"line":126,"column":64,"offset":3894},"indent":[]}},{"type":"text","value":" file. ","position":{"start":{"line":126,"column":64,"offset":3894},"end":{"line":126,"column":71,"offset":3901},"indent":[]}},{"type":"link","title":null,"url":"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file#using-environment-variables","children":[{"type":"text","value":"Read more about it here","position":{"start":{"line":126,"column":72,"offset":3902},"end":{"line":126,"column":95,"offset":3925},"indent":[]}}],"position":{"start":{"line":126,"column":71,"offset":3901},"end":{"line":126,"column":216,"offset":4046},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":3833},"end":{"line":126,"column":216,"offset":4046},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3831},"end":{"line":126,"column":216,"offset":4046},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Using Postgres","position":{"start":{"line":128,"column":3,"offset":4050},"end":{"line":128,"column":17,"offset":4064},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4048},"end":{"line":128,"column":19,"offset":4066},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4048},"end":{"line":128,"column":19,"offset":4066},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"//schema.prisma\n\ndatasource db {\n  provider = \"postgres\"\n  url = \"postgresql://USER:PASSWORD@localhost:5432/DATABASE\"\n}","position":{"start":{"line":130,"column":1,"offset":4068},"end":{"line":137,"column":4,"offset":4201},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Using MySQL","position":{"start":{"line":139,"column":3,"offset":4205},"end":{"line":139,"column":14,"offset":4216},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4203},"end":{"line":139,"column":16,"offset":4218},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4203},"end":{"line":139,"column":16,"offset":4218},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"//schema.prisma\n\ndatasource db {\n  provider = \"mysql\"\n  url = \"mysql://USER:PASSWORD@localhost:3306/DATABASE\"\n}","position":{"start":{"line":141,"column":1,"offset":4220},"end":{"line":148,"column":4,"offset":4345},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Using SQLite","position":{"start":{"line":150,"column":3,"offset":4349},"end":{"line":150,"column":15,"offset":4361},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4347},"end":{"line":150,"column":17,"offset":4363},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4347},"end":{"line":150,"column":17,"offset":4363},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"//schema.prisma\n\ndatasource db {\n  provider = \"sqlite\"\n  url = \"file:./dev.db\"\n}","position":{"start":{"line":152,"column":1,"offset":4365},"end":{"line":159,"column":4,"offset":4459},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2. Introspect your database","position":{"start":{"line":161,"column":3,"offset":4463},"end":{"line":161,"column":30,"offset":4490},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4461},"end":{"line":161,"column":32,"offset":4492},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4461},"end":{"line":161,"column":32,"offset":4492},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"npm run prisma introspect","position":{"start":{"line":163,"column":1,"offset":4494},"end":{"line":165,"column":4,"offset":4527},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"3. Generate the Prisma Client","position":{"start":{"line":167,"column":3,"offset":4531},"end":{"line":167,"column":32,"offset":4560},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":4529},"end":{"line":167,"column":34,"offset":4562},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":4529},"end":{"line":167,"column":34,"offset":4562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add the following block at the top of your ","position":{"start":{"line":169,"column":1,"offset":4564},"end":{"line":169,"column":44,"offset":4607},"indent":[]}},{"type":"inlineCode","value":"schema.prisma","position":{"start":{"line":169,"column":44,"offset":4607},"end":{"line":169,"column":59,"offset":4622},"indent":[]}},{"type":"text","value":" file:","position":{"start":{"line":169,"column":59,"offset":4622},"end":{"line":169,"column":65,"offset":4628},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":4564},"end":{"line":169,"column":65,"offset":4628},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"generator prisma_client {\n  provider = \"prisma-client-js\"\n}","position":{"start":{"line":171,"column":1,"offset":4630},"end":{"line":175,"column":4,"offset":4697},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The plugin will take care of generating the Prisma Client for you after that.","position":{"start":{"line":177,"column":1,"offset":4699},"end":{"line":177,"column":78,"offset":4776},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":4699},"end":{"line":177,"column":78,"offset":4776},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"4. You're all set","position":{"start":{"line":179,"column":3,"offset":4780},"end":{"line":179,"column":20,"offset":4797},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":4778},"end":{"line":179,"column":22,"offset":4799},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":4778},"end":{"line":179,"column":22,"offset":4799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You're ready to start working!","position":{"start":{"line":181,"column":1,"offset":4801},"end":{"line":181,"column":31,"offset":4831},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":4801},"end":{"line":181,"column":31,"offset":4831},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Example","position":{"start":{"line":183,"column":4,"offset":4836},"end":{"line":183,"column":11,"offset":4843},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":4833},"end":{"line":183,"column":11,"offset":4843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a ","position":{"start":{"line":185,"column":1,"offset":4845},"end":{"line":185,"column":9,"offset":4853},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-schema-file.md","children":[{"type":"text","value":"Prisma schema","position":{"start":{"line":185,"column":10,"offset":4854},"end":{"line":185,"column":23,"offset":4867},"indent":[]}}],"position":{"start":{"line":185,"column":9,"offset":4853},"end":{"line":185,"column":98,"offset":4942},"indent":[]}},{"type":"text","value":" (left), you will be able to project these Prisma models onto your API and expose operations against them (middle) resulting in the GraphQL Schema (right).","position":{"start":{"line":185,"column":98,"offset":4942},"end":{"line":185,"column":253,"offset":5097},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":4845},"end":{"line":185,"column":253,"offset":5097},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":187,"column":1,"offset":5099},"end":{"line":187,"column":30,"offset":5128},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"generator prisma_client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  birthDate DateTime\n}\n\nmodel Post {\n  id     String   @id @default(cuid())\n  author User[]\n}\n","position":{"start":{"line":189,"column":1,"offset":5130},"end":{"line":205,"column":4,"offset":5383},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"import { schema } from 'nexus'\n\nschema.queryType({\n  definition(t) {\n    t.crud.user()\n    t.crud.users({\n      ordering: true,\n    })\n    t.crud.post()\n    t.crud.posts({\n      filtering: true,\n    })\n  },\n})\n\nschema.mutationType({\n  definition(t) {\n    t.crud.createOneUser()\n    t.crud.createOnePost()\n    t.crud.deleteOneUser()\n    t.crud.deleteOnePost()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.birthDate()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.author()\n  },\n})","position":{"start":{"line":207,"column":1,"offset":5385},"end":{"line":249,"column":4,"offset":6006},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"scalar DateTime\n\ninput DateTimeFilter {\n  equals: DateTime\n  gt: DateTime\n  gte: DateTime\n  in: [DateTime!]\n  lt: DateTime\n  lte: DateTime\n  not: DateTime\n  notIn: [DateTime!]\n}\n\ntype Mutation {\n  createOnePost(\n    data: PostCreateInput!\n  ): Post!\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n  deleteOnePost(\n    where: PostWhereUniqueInput!\n  ): Post\n  deleteOneUser(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\nenum OrderByArg {\n  asc\n  desc\n}\n\ntype Post {\n  author(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n  ): [User!]!\n  id: ID!\n}\n\ninput PostCreateInput {\n  author: UserCreateManyWithoutAuthorInput\n  id: ID\n}\n\ninput PostCreateManyWithoutPostsInput {\n  connect: [PostWhereUniqueInput!]\n  create: [PostCreateWithoutAuthorInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  id: ID\n}\n\ninput PostFilter {\n  every: PostWhereInput\n  none: PostWhereInput\n  some: PostWhereInput\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  author: UserFilter\n  id: StringFilter\n  NOT: [PostWhereInput!]\n  OR: [PostWhereInput!]\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  post(\n    where: PostWhereUniqueInput!\n  ): Post\n  posts(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n    where: PostWhereInput\n  ): [Post!]!\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n  users(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    orderBy: UserOrderByInput\n    skip: Int\n  ): [User!]!\n}\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ntype User {\n  birthDate: DateTime!\n  email: String!\n  id: ID!\n  posts(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n  ): [Post!]!\n}\n\ninput UserCreateInput {\n  birthDate: DateTime!\n  email: String!\n  id: ID\n  posts: PostCreateManyWithoutPostsInput\n}\n\ninput UserCreateManyWithoutAuthorInput {\n  connect: [UserWhereUniqueInput!]\n  create: [UserCreateWithoutPostsInput!]\n}\n\ninput UserCreateWithoutPostsInput {\n  birthDate: DateTime!\n  email: String!\n  id: ID\n}\n\ninput UserFilter {\n  every: UserWhereInput\n  none: UserWhereInput\n  some: UserWhereInput\n}\n\ninput UserOrderByInput {\n  birthDate: OrderByArg\n  email: OrderByArg\n  id: OrderByArg\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  birthDate: DateTimeFilter\n  email: StringFilter\n  id: StringFilter\n  NOT: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  posts: PostFilter\n}\n\ninput UserWhereUniqueInput {\n  email: String\n  id: ID\n}","position":{"start":{"line":251,"column":1,"offset":6008},"end":{"line":424,"column":4,"offset":8636},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":426,"column":1,"offset":8638},"end":{"line":426,"column":7,"offset":8644},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Plugin settings","position":{"start":{"line":428,"column":4,"offset":8649},"end":{"line":428,"column":19,"offset":8664},"indent":[]}}],"position":{"start":{"line":428,"column":1,"offset":8646},"end":{"line":428,"column":19,"offset":8664},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can ","position":{"start":{"line":430,"column":1,"offset":8666},"end":{"line":430,"column":9,"offset":8674},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"optionally","position":{"start":{"line":430,"column":10,"offset":8675},"end":{"line":430,"column":20,"offset":8685},"indent":[]}}],"position":{"start":{"line":430,"column":9,"offset":8674},"end":{"line":430,"column":21,"offset":8686},"indent":[]}},{"type":"text","value":" pass some settings to the plugin.","position":{"start":{"line":430,"column":21,"offset":8686},"end":{"line":430,"column":55,"offset":8720},"indent":[]}}],"position":{"start":{"line":430,"column":1,"offset":8666},"end":{"line":430,"column":55,"offset":8720},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Type definition","position":{"start":{"line":432,"column":5,"offset":8726},"end":{"line":432,"column":20,"offset":8741},"indent":[]}}],"position":{"start":{"line":432,"column":1,"offset":8722},"end":{"line":432,"column":20,"offset":8741},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"export type PrismaClientOptions = {\n  /**\n   * Options to pass to the Prisma Client instantiated by the plugin.\n   * If you want to instantiate your own Prisma Client, use `instance` instead.\n   */\n  options: ClientOptions\n}\n\nexport type PrismaClientInstance = {\n  /**\n   * Instance of your own Prisma Client. You can import it from 'nexus-plugin-prisma/client'.\n   * If you just want to pass some settings to the Prisma Client, use `options` instead.\n   */\n  instance: PrismaClient\n}\n\nexport type Settings = {\n  /**\n   * Use this to pass some settings to the Prisma Client instantiated by the plugin or to pass your own Prisma Client\n   */\n  client?: PrismaClientOptions | PrismaClientInstance\n}","position":{"start":{"line":434,"column":1,"offset":8743},"end":{"line":457,"column":4,"offset":9449},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Examples","position":{"start":{"line":459,"column":5,"offset":9455},"end":{"line":459,"column":13,"offset":9463},"indent":[]}}],"position":{"start":{"line":459,"column":1,"offset":9451},"end":{"line":459,"column":13,"offset":9463},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Configuring the Prisma Client","position":{"start":{"line":461,"column":6,"offset":9470},"end":{"line":461,"column":35,"offset":9499},"indent":[]}}],"position":{"start":{"line":461,"column":1,"offset":9465},"end":{"line":461,"column":35,"offset":9499},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\n\nuse(prisma({\n  client: { options: { log: ['query'] } }\n}))","position":{"start":{"line":463,"column":1,"offset":9501},"end":{"line":470,"column":4,"offset":9643},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Using a custom instance of the Prisma Client","position":{"start":{"line":472,"column":6,"offset":9650},"end":{"line":472,"column":50,"offset":9694},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":9645},"end":{"line":472,"column":50,"offset":9694},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\nimport { PrismaClient } from 'nexus-plugin-prisma/client'\n\nuse(prisma({\n  client: { instance: new PrismaClient() }\n}))","position":{"start":{"line":474,"column":1,"offset":9696},"end":{"line":482,"column":4,"offset":9897},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Recipes","position":{"start":{"line":484,"column":4,"offset":9902},"end":{"line":484,"column":11,"offset":9909},"indent":[]}}],"position":{"start":{"line":484,"column":1,"offset":9899},"end":{"line":484,"column":11,"offset":9909},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Projecting Prisma Model Fields {docsify-ignore}","position":{"start":{"line":486,"column":5,"offset":9915},"end":{"line":486,"column":52,"offset":9962},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":9911},"end":{"line":486,"column":52,"offset":9962},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Exposing one of your Prisma models in your GraphQL API","position":{"start":{"line":488,"column":1,"offset":9964},"end":{"line":488,"column":55,"offset":10018},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":9964},"end":{"line":488,"column":55,"offset":10018},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.content()\n  },\n})","position":{"start":{"line":490,"column":1,"offset":10020},"end":{"line":499,"column":4,"offset":10150},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Simple Computed GraphQL Fields {docsify-ignore}","position":{"start":{"line":501,"column":5,"offset":10156},"end":{"line":501,"column":52,"offset":10203},"indent":[]}}],"position":{"start":{"line":501,"column":1,"offset":10152},"end":{"line":501,"column":52,"offset":10203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can add computed fields to a GraphQL object using the standard GraphQL Nexus API.","position":{"start":{"line":503,"column":1,"offset":10205},"end":{"line":503,"column":86,"offset":10290},"indent":[]}}],"position":{"start":{"line":503,"column":1,"offset":10205},"end":{"line":503,"column":86,"offset":10290},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: \"Post\",\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.content()\n    t.string(\"uppercaseTitle\", {\n      resolve({ title }, args, ctx) {\n        return title.toUpperCase(),\n      }\n    })\n  },\n})","position":{"start":{"line":505,"column":1,"offset":10292},"end":{"line":519,"column":4,"offset":10544},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Complex Computed GraphQL Fields {docsify-ignore}","position":{"start":{"line":521,"column":5,"offset":10550},"end":{"line":521,"column":53,"offset":10598},"indent":[]}}],"position":{"start":{"line":521,"column":1,"offset":10546},"end":{"line":521,"column":53,"offset":10598},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need more complicated logic for your computed field (e.g. have access to some information from the database), you can use the ","position":{"start":{"line":523,"column":1,"offset":10600},"end":{"line":523,"column":134,"offset":10733},"indent":[]}},{"type":"inlineCode","value":"prisma","position":{"start":{"line":523,"column":134,"offset":10733},"end":{"line":523,"column":142,"offset":10741},"indent":[]}},{"type":"text","value":" instance that's attached to the context and implement your resolver based on that.","position":{"start":{"line":523,"column":142,"offset":10741},"end":{"line":523,"column":225,"offset":10824},"indent":[]}}],"position":{"start":{"line":523,"column":1,"offset":10600},"end":{"line":523,"column":225,"offset":10824},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.content()\n    t.string('anotherComputedField', {\n      async resolve(_parent, _args, ctx) {\n        const databaseInfo = await ctx.prisma.someModel.someOperation(...)\n        const result = doSomething(databaseInfo)\n        return result\n      }\n    })\n  }\n})","position":{"start":{"line":525,"column":1,"offset":10826},"end":{"line":540,"column":4,"offset":11178},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Project a Prisma Field to a Differently Named GraphQL Field {docsify-ignore}","position":{"start":{"line":542,"column":5,"offset":11184},"end":{"line":542,"column":81,"offset":11260},"indent":[]}}],"position":{"start":{"line":542,"column":1,"offset":11180},"end":{"line":542,"column":81,"offset":11260},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.content({\n      alias: 'body',\n    })\n  },\n})","position":{"start":{"line":544,"column":1,"offset":11262},"end":{"line":554,"column":4,"offset":11400},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Publish Full-Featured Reads on a Prisma Model {docsify-ignore}","position":{"start":{"line":556,"column":5,"offset":11406},"end":{"line":556,"column":67,"offset":11468},"indent":[]}}],"position":{"start":{"line":556,"column":1,"offset":11402},"end":{"line":556,"column":67,"offset":11468},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t) {\n    t.crud.post()\n    t.crud.posts({\n      ordering: true,\n      filtering: true,\n    })\n  },\n})","position":{"start":{"line":558,"column":1,"offset":11470},"end":{"line":568,"column":4,"offset":11613},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Publish Writes on a Prisma Model {docsify-ignore}","position":{"start":{"line":570,"column":5,"offset":11619},"end":{"line":570,"column":54,"offset":11668},"indent":[]}}],"position":{"start":{"line":570,"column":1,"offset":11615},"end":{"line":570,"column":54,"offset":11668},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.mutationType({\n  definition(t) {\n    t.crud.createPost()\n    t.crud.updatePost()\n    t.crud.updateManyPost()\n    t.crud.upsertPost()\n    t.crud.deletePost()\n    t.crud.deleteManyPost()\n  },\n})","position":{"start":{"line":572,"column":1,"offset":11670},"end":{"line":583,"column":4,"offset":11879},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Publish Customized Reads on a Prisma Model {docsify-ignore}","position":{"start":{"line":585,"column":5,"offset":11885},"end":{"line":585,"column":64,"offset":11944},"indent":[]}}],"position":{"start":{"line":585,"column":1,"offset":11881},"end":{"line":585,"column":64,"offset":11944},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t) {\n    t.crud.posts({\n      filtering: {\n        id: true,\n        title: true,\n      },\n      ordering: { title: true },\n    })\n  },\n})","position":{"start":{"line":587,"column":1,"offset":11946},"end":{"line":599,"column":4,"offset":12126},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Publish Autogenerated Mutations with Computed Input Values {docsify-ignore}","position":{"start":{"line":601,"column":5,"offset":12132},"end":{"line":601,"column":80,"offset":12207},"indent":[]}}],"position":{"start":{"line":601,"column":1,"offset":12128},"end":{"line":601,"column":80,"offset":12207},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.mutationType({\n  definition(t) {\n    /* \n    Assuming our prisma model for User has a createdByBrowser field,\n    this removes it from the input type but ensures the value is\n    inferred from context and passed to Prisma Client.\n    */\n    t.crud.createOneUser({\n      computedInputs: {\n        createdByBrowser: ({\n          args,\n          ctx,\n          info,\n        }) => ctx.session.browser,\n      },\n    })\n  },\n})","position":{"start":{"line":603,"column":1,"offset":12209},"end":{"line":622,"column":4,"offset":12648},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Globally Remove a Field from Input Types and Infer its Value {docsify-ignore}","position":{"start":{"line":624,"column":5,"offset":12654},"end":{"line":624,"column":82,"offset":12731},"indent":[]}}],"position":{"start":{"line":624,"column":1,"offset":12650},"end":{"line":624,"column":82,"offset":12731},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"todo (this is not possible in the framework yet)","position":{"start":{"line":626,"column":1,"offset":12733},"end":{"line":626,"column":49,"offset":12781},"indent":[]}}],"position":{"start":{"line":626,"column":1,"offset":12733},"end":{"line":626,"column":49,"offset":12781},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"nexusPrismaPlugin({\n  ...other config...\n  /*\n  Remove fields named \"user\" from all input types. When resolving\n  a request whose data contains any of these types, the value is inferred\n  from context and passed to Prisma Client, even if it's nested. This is great for\n  creating data associated with one user's account.\n  */\n  computedInputs: {\n    user: ({ args, ctx, info }) => ({\n      connect: {\n        id: ctx.userId,\n      },\n    }),\n  },\n})","position":{"start":{"line":628,"column":1,"offset":12783},"end":{"line":645,"column":4,"offset":13242},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.mutationType({\n  definition(t) {\n    t.crud.createOnePost()\n  },\n})","position":{"start":{"line":647,"column":1,"offset":13244},"end":{"line":653,"column":4,"offset":13328},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Without computedInputs:","position":{"start":{"line":655,"column":1,"offset":13330},"end":{"line":655,"column":24,"offset":13353},"indent":[]}}],"position":{"start":{"line":655,"column":1,"offset":13330},"end":{"line":655,"column":24,"offset":13353},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation createOnePost {\n  createOnePost(\n    data: {\n      title: \"Automatically generate clean APIs!\"\n      image: {\n        url: \"https://example.com/images/prancing-unicorns\"\n        user: {\n          connect: { id: 1 }\n        }\n      }\n      user: { connect: { id: 1 } }\n    }\n  )\n}","position":{"start":{"line":657,"column":1,"offset":13355},"end":{"line":672,"column":4,"offset":13658},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With computedInputs:","position":{"start":{"line":674,"column":1,"offset":13660},"end":{"line":674,"column":21,"offset":13680},"indent":[]}}],"position":{"start":{"line":674,"column":1,"offset":13660},"end":{"line":674,"column":21,"offset":13680},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation createOnePost {\n  createOnePost(\n    data: {\n      title: \"Automatically generate clean APIs!\"\n      image: {\n        url: \"https://example.com/images/prancing-unicorns\"\n      }\n    }\n  )\n}","position":{"start":{"line":676,"column":1,"offset":13682},"end":{"line":687,"column":4,"offset":13895},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Publish Model Writes Along Side Prisma Client-Resolved Fields {docsify-ignore}","position":{"start":{"line":689,"column":5,"offset":13901},"end":{"line":689,"column":83,"offset":13979},"indent":[]}}],"position":{"start":{"line":689,"column":1,"offset":13897},"end":{"line":689,"column":83,"offset":13979},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"schema.mutationType({\n  definition(t) {\n    t.crud.createUser()\n    t.crud.updateUser()\n    t.crud.deleteUser()\n    t.crud.deletePost()\n\n    t.field('createDraft', {\n      type: 'Post',\n      args: {\n        title: stringArg(),\n        content: stringArg({\n          nullable: true,\n        }),\n      },\n      resolve: (\n        parent,\n        { title, content },\n        ctx\n      ) => {\n        return ctx.prisma.posts.createPost(\n          { title, content }\n        )\n      },\n    })\n\n    t.field('publish', {\n      type: 'Post',\n      nullable: true,\n      args: {\n        id: idArg(),\n      },\n      resolve(\n        parent,\n        { id },\n        ctx\n      ) {\n        return ctx.prisma.posts.updatePost(\n          {\n            where: { id },\n            data: {\n              published: true,\n            },\n          }\n        )\n      },\n    })\n  },\n})","position":{"start":{"line":691,"column":1,"offset":13981},"end":{"line":741,"column":4,"offset":14855},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Worktime Integration","position":{"start":{"line":743,"column":4,"offset":14860},"end":{"line":743,"column":24,"offset":14880},"indent":[]}}],"position":{"start":{"line":743,"column":1,"offset":14857},"end":{"line":743,"column":24,"offset":14880},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"nexus dev","position":{"start":{"line":745,"column":5,"offset":14886},"end":{"line":745,"column":16,"offset":14897},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":14882},"end":{"line":745,"column":16,"offset":14897},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When running ","position":{"start":{"line":747,"column":1,"offset":14899},"end":{"line":747,"column":14,"offset":14912},"indent":[]}},{"type":"inlineCode","value":"nexus dev","position":{"start":{"line":747,"column":14,"offset":14912},"end":{"line":747,"column":25,"offset":14923},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":747,"column":25,"offset":14923},"end":{"line":747,"column":27,"offset":14925},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-prisma","position":{"start":{"line":747,"column":27,"offset":14925},"end":{"line":747,"column":48,"offset":14946},"indent":[]}},{"type":"text","value":" will make sure your ","position":{"start":{"line":747,"column":48,"offset":14946},"end":{"line":747,"column":69,"offset":14967},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js","children":[{"type":"inlineCode","value":"Prisma Client","position":{"start":{"line":747,"column":70,"offset":14968},"end":{"line":747,"column":85,"offset":14983},"indent":[]}}],"position":{"start":{"line":747,"column":69,"offset":14967},"end":{"line":747,"column":130,"offset":15028},"indent":[]}},{"type":"text","value":" is up-to-date with your Prisma Schema by running your Prisma generators for you.","position":{"start":{"line":747,"column":130,"offset":15028},"end":{"line":747,"column":211,"offset":15109},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":14899},"end":{"line":747,"column":211,"offset":15109},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Updates to your ","position":{"start":{"line":749,"column":1,"offset":15111},"end":{"line":749,"column":17,"offset":15127},"indent":[]}},{"type":"inlineCode","value":"schema.prisma","position":{"start":{"line":749,"column":17,"offset":15127},"end":{"line":749,"column":32,"offset":15142},"indent":[]}},{"type":"text","value":" file will also be detected and will give you hints about the next steps to properly migrate your database.","position":{"start":{"line":749,"column":32,"offset":15142},"end":{"line":749,"column":139,"offset":15249},"indent":[]}}],"position":{"start":{"line":749,"column":1,"offset":15111},"end":{"line":749,"column":139,"offset":15249},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"nexus build","position":{"start":{"line":751,"column":5,"offset":15255},"end":{"line":751,"column":18,"offset":15268},"indent":[]}}],"position":{"start":{"line":751,"column":1,"offset":15251},"end":{"line":751,"column":18,"offset":15268},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When running ","position":{"start":{"line":753,"column":1,"offset":15270},"end":{"line":753,"column":14,"offset":15283},"indent":[]}},{"type":"inlineCode","value":"nexus build","position":{"start":{"line":753,"column":14,"offset":15283},"end":{"line":753,"column":27,"offset":15296},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":753,"column":27,"offset":15296},"end":{"line":753,"column":29,"offset":15298},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-prisma","position":{"start":{"line":753,"column":29,"offset":15298},"end":{"line":753,"column":50,"offset":15319},"indent":[]}},{"type":"text","value":" will make sure your ","position":{"start":{"line":753,"column":50,"offset":15319},"end":{"line":753,"column":71,"offset":15340},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js","children":[{"type":"inlineCode","value":"Prisma Client","position":{"start":{"line":753,"column":72,"offset":15341},"end":{"line":753,"column":87,"offset":15356},"indent":[]}}],"position":{"start":{"line":753,"column":71,"offset":15340},"end":{"line":753,"column":132,"offset":15401},"indent":[]}},{"type":"text","value":" is up-to-date with your Prisma Schema, thus making sure your application is safely accessing your database.","position":{"start":{"line":753,"column":132,"offset":15401},"end":{"line":753,"column":240,"offset":15509},"indent":[]}}],"position":{"start":{"line":753,"column":1,"offset":15270},"end":{"line":753,"column":240,"offset":15509},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Testtime Integration","position":{"start":{"line":755,"column":4,"offset":15514},"end":{"line":755,"column":24,"offset":15534},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":15511},"end":{"line":755,"column":24,"offset":15534},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"nexus-plugin-prisma","position":{"start":{"line":757,"column":1,"offset":15536},"end":{"line":757,"column":22,"offset":15557},"indent":[]}},{"type":"text","value":" augments the testing component of Nexus with an instance of the ","position":{"start":{"line":757,"column":22,"offset":15557},"end":{"line":757,"column":87,"offset":15622},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js","children":[{"type":"inlineCode","value":"Prisma Client","position":{"start":{"line":757,"column":88,"offset":15623},"end":{"line":757,"column":103,"offset":15638},"indent":[]}}],"position":{"start":{"line":757,"column":87,"offset":15622},"end":{"line":757,"column":148,"offset":15683},"indent":[]}},{"type":"text","value":", to help you easily seed your database for your tests.","position":{"start":{"line":757,"column":148,"offset":15683},"end":{"line":757,"column":203,"offset":15738},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":15536},"end":{"line":757,"column":203,"offset":15738},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To learn more about its usage, ","position":{"start":{"line":759,"column":1,"offset":15740},"end":{"line":759,"column":32,"offset":15771},"indent":[]}},{"type":"link","title":null,"url":"/guides/testing?id=with-a-database","children":[{"type":"text","value":"head to the Testing section","position":{"start":{"line":759,"column":33,"offset":15772},"end":{"line":759,"column":60,"offset":15799},"indent":[]}}],"position":{"start":{"line":759,"column":32,"offset":15771},"end":{"line":759,"column":97,"offset":15836},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":759,"column":97,"offset":15836},"end":{"line":759,"column":98,"offset":15837},"indent":[]}}],"position":{"start":{"line":759,"column":1,"offset":15740},"end":{"line":759,"column":98,"offset":15837},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Runtime Integration","position":{"start":{"line":761,"column":4,"offset":15842},"end":{"line":761,"column":23,"offset":15861},"indent":[]}}],"position":{"start":{"line":761,"column":1,"offset":15839},"end":{"line":761,"column":23,"offset":15861},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Access to the Prisma Client","position":{"start":{"line":763,"column":5,"offset":15867},"end":{"line":763,"column":32,"offset":15894},"indent":[]}}],"position":{"start":{"line":763,"column":1,"offset":15863},"end":{"line":763,"column":32,"offset":15894},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At runtime, ","position":{"start":{"line":765,"column":1,"offset":15896},"end":{"line":765,"column":13,"offset":15908},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-prisma","position":{"start":{"line":765,"column":13,"offset":15908},"end":{"line":765,"column":34,"offset":15929},"indent":[]}},{"type":"text","value":" will add a ","position":{"start":{"line":765,"column":34,"offset":15929},"end":{"line":765,"column":46,"offset":15941},"indent":[]}},{"type":"inlineCode","value":"db","position":{"start":{"line":765,"column":46,"offset":15941},"end":{"line":765,"column":50,"offset":15945},"indent":[]}},{"type":"text","value":" property containing an instance of the ","position":{"start":{"line":765,"column":50,"offset":15945},"end":{"line":765,"column":90,"offset":15985},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js","children":[{"type":"inlineCode","value":"Prisma Client","position":{"start":{"line":765,"column":91,"offset":15986},"end":{"line":765,"column":106,"offset":16001},"indent":[]}}],"position":{"start":{"line":765,"column":90,"offset":15985},"end":{"line":765,"column":151,"offset":16046},"indent":[]}},{"type":"text","value":" to your GraphQL resolvers context.","position":{"start":{"line":765,"column":151,"offset":16046},"end":{"line":765,"column":186,"offset":16081},"indent":[]}}],"position":{"start":{"line":765,"column":1,"offset":15896},"end":{"line":765,"column":186,"offset":16081},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":767,"column":7,"offset":16089},"end":{"line":767,"column":14,"offset":16096},"indent":[]}}],"position":{"start":{"line":767,"column":1,"offset":16083},"end":{"line":767,"column":14,"offset":16096},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { schema } from 'nexus'\n\nschema.objectType({\n  name: 'Query',\n  definition(t) {\n    t.list.field('users', {\n      type: 'User',\n      resolve(parent, args, ctx) {\n        return ctx.db.user.findMany() // <== `ctx.db` is your Prisma Client instance\n      },\n    })\n  },\n})","position":{"start":{"line":769,"column":1,"offset":16098},"end":{"line":783,"column":4,"offset":16386},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"t.model","position":{"start":{"line":785,"column":5,"offset":16392},"end":{"line":785,"column":14,"offset":16401},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":16388},"end":{"line":785,"column":14,"offset":16401},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only available within ","position":{"start":{"line":787,"column":1,"offset":16403},"end":{"line":787,"column":23,"offset":16425},"indent":[]}},{"type":"link","title":null,"url":"/api/modules/main/exports/schema?id=objecttype","children":[{"type":"inlineCode","value":"schema.objectType","position":{"start":{"line":787,"column":24,"offset":16426},"end":{"line":787,"column":43,"offset":16445},"indent":[]}}],"position":{"start":{"line":787,"column":23,"offset":16425},"end":{"line":787,"column":92,"offset":16494},"indent":[]}},{"type":"text","value":" definitions.","position":{"start":{"line":787,"column":92,"offset":16494},"end":{"line":787,"column":105,"offset":16507},"indent":[]}}],"position":{"start":{"line":787,"column":1,"offset":16403},"end":{"line":787,"column":105,"offset":16507},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"t.model","position":{"start":{"line":789,"column":1,"offset":16509},"end":{"line":789,"column":10,"offset":16518},"indent":[]}},{"type":"text","value":" contains configurable ","position":{"start":{"line":789,"column":10,"offset":16518},"end":{"line":789,"column":33,"offset":16541},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"field projectors","position":{"start":{"line":789,"column":34,"offset":16542},"end":{"line":789,"column":50,"offset":16558},"indent":[]}}],"position":{"start":{"line":789,"column":33,"offset":16541},"end":{"line":789,"column":51,"offset":16559},"indent":[]}},{"type":"text","value":" that you use for projecting fields of your ","position":{"start":{"line":789,"column":51,"offset":16559},"end":{"line":789,"column":95,"offset":16603},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/data-modeling.md#models","children":[{"type":"text","value":"Prisma models","position":{"start":{"line":789,"column":96,"offset":16604},"end":{"line":789,"column":109,"offset":16617},"indent":[]}}],"position":{"start":{"line":789,"column":95,"offset":16603},"end":{"line":789,"column":186,"offset":16694},"indent":[]}},{"type":"text","value":" onto your ","position":{"start":{"line":789,"column":186,"offset":16694},"end":{"line":789,"column":197,"offset":16705},"indent":[]}},{"type":"link","title":null,"url":"https://graphql.github.io/graphql-spec/June2018/#sec-Objects","children":[{"type":"text","value":"GraphQL Objects","position":{"start":{"line":789,"column":198,"offset":16706},"end":{"line":789,"column":213,"offset":16721},"indent":[]}}],"position":{"start":{"line":789,"column":197,"offset":16705},"end":{"line":789,"column":276,"offset":16784},"indent":[]}},{"type":"text","value":". The precise behaviour of field projectors vary by the Prisma type being projected. Refer to the respective sub-sections for details.","position":{"start":{"line":789,"column":276,"offset":16784},"end":{"line":789,"column":410,"offset":16918},"indent":[]}}],"position":{"start":{"line":789,"column":1,"offset":16509},"end":{"line":789,"column":410,"offset":16918},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Model-Object Mapping","position":{"start":{"line":791,"column":6,"offset":16925},"end":{"line":791,"column":26,"offset":16945},"indent":[]}}],"position":{"start":{"line":791,"column":1,"offset":16920},"end":{"line":791,"column":26,"offset":16945},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"t.model","position":{"start":{"line":793,"column":1,"offset":16947},"end":{"line":793,"column":10,"offset":16956},"indent":[]}},{"type":"text","value":" will either have field projectors for the Prisma model whose name matches that of the GraphQL ","position":{"start":{"line":793,"column":10,"offset":16956},"end":{"line":793,"column":105,"offset":17051},"indent":[]}},{"type":"inlineCode","value":"Object","position":{"start":{"line":793,"column":105,"offset":17051},"end":{"line":793,"column":113,"offset":17059},"indent":[]}},{"type":"text","value":", or if the GraphQL ","position":{"start":{"line":793,"column":113,"offset":17059},"end":{"line":793,"column":133,"offset":17079},"indent":[]}},{"type":"inlineCode","value":"Object","position":{"start":{"line":793,"column":133,"offset":17079},"end":{"line":793,"column":141,"offset":17087},"indent":[]}},{"type":"text","value":" is of a name that does not match any of your Prisma models then ","position":{"start":{"line":793,"column":141,"offset":17087},"end":{"line":793,"column":206,"offset":17152},"indent":[]}},{"type":"inlineCode","value":"t.model","position":{"start":{"line":793,"column":206,"offset":17152},"end":{"line":793,"column":215,"offset":17161},"indent":[]}},{"type":"text","value":" becomes a function allowing you to specify the mapping, after which the field projectors become available.","position":{"start":{"line":793,"column":215,"offset":17161},"end":{"line":793,"column":322,"offset":17268},"indent":[]}}],"position":{"start":{"line":793,"column":1,"offset":16947},"end":{"line":793,"column":322,"offset":17268},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":795,"column":7,"offset":17276},"end":{"line":795,"column":14,"offset":17283},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":17270},"end":{"line":795,"column":14,"offset":17283},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":797,"column":1,"offset":17285},"end":{"line":797,"column":30,"offset":17314},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id String @id @default(cuid())\n}","position":{"start":{"line":799,"column":1,"offset":17316},"end":{"line":803,"column":4,"offset":17377},"indent":[1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n  },\n})\n\nschema.objectType({\n  name: 'Person',\n  definition(t) {\n    t.model('User').id()\n  },\n})","position":{"start":{"line":805,"column":1,"offset":17379},"end":{"line":819,"column":4,"offset":17557},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type User {\n  id: ID!\n}\n\ntype Person {\n  id: ID!\n}","position":{"start":{"line":821,"column":1,"offset":17559},"end":{"line":829,"column":4,"offset":17624},"indent":[1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":831,"column":1,"offset":17626},"end":{"line":831,"column":7,"offset":17632},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Enum","position":{"start":{"line":833,"column":6,"offset":17639},"end":{"line":833,"column":10,"offset":17643},"indent":[]}}],"position":{"start":{"line":833,"column":1,"offset":17634},"end":{"line":833,"column":10,"offset":17643},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Auto-Projection","position":{"start":{"line":835,"column":2,"offset":17646},"end":{"line":835,"column":17,"offset":17661},"indent":[]}}],"position":{"start":{"line":835,"column":1,"offset":17645},"end":{"line":835,"column":18,"offset":17662},"indent":[]}}],"position":{"start":{"line":835,"column":1,"offset":17645},"end":{"line":835,"column":18,"offset":17662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a Prisma enum field is projected, the corresponding enum type will be automatically projected too (added to the GraphQL schema).","position":{"start":{"line":837,"column":1,"offset":17664},"end":{"line":837,"column":134,"offset":17797},"indent":[]}}],"position":{"start":{"line":837,"column":1,"offset":17664},"end":{"line":837,"column":134,"offset":17797},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Member Customization","position":{"start":{"line":839,"column":2,"offset":17800},"end":{"line":839,"column":22,"offset":17820},"indent":[]}}],"position":{"start":{"line":839,"column":1,"offset":17799},"end":{"line":839,"column":23,"offset":17821},"indent":[]}}],"position":{"start":{"line":839,"column":1,"offset":17799},"end":{"line":839,"column":23,"offset":17821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can customize the projected enum members by defining the enum yourself in Nexus. ","position":{"start":{"line":841,"column":1,"offset":17823},"end":{"line":841,"column":86,"offset":17908},"indent":[]}},{"type":"inlineCode","value":"nexus-prisma","position":{"start":{"line":841,"column":86,"offset":17908},"end":{"line":841,"column":100,"offset":17922},"indent":[]}},{"type":"text","value":" will treat the name collision as an intent to override and so disable auto-projection.","position":{"start":{"line":841,"column":100,"offset":17922},"end":{"line":841,"column":187,"offset":18009},"indent":[]}}],"position":{"start":{"line":841,"column":1,"offset":17823},"end":{"line":841,"column":187,"offset":18009},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Option Notes","position":{"start":{"line":843,"column":2,"offset":18012},"end":{"line":843,"column":14,"offset":18024},"indent":[]}}],"position":{"start":{"line":843,"column":1,"offset":18011},"end":{"line":843,"column":15,"offset":18025},"indent":[]}}],"position":{"start":{"line":843,"column":1,"offset":18011},"end":{"line":843,"column":15,"offset":18025},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Currently Prisma enums cannot be ","position":{"start":{"line":845,"column":1,"offset":18027},"end":{"line":845,"column":34,"offset":18060},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"text","value":"aliased","position":{"start":{"line":845,"column":35,"offset":18061},"end":{"line":845,"column":42,"offset":18068},"indent":[]}}],"position":{"start":{"line":845,"column":34,"offset":18060},"end":{"line":845,"column":51,"offset":18077},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":845,"column":51,"offset":18077},"end":{"line":845,"column":53,"offset":18079},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/474","children":[{"type":"text","value":"issue","position":{"start":{"line":845,"column":54,"offset":18080},"end":{"line":845,"column":59,"offset":18085},"indent":[]}}],"position":{"start":{"line":845,"column":53,"offset":18079},"end":{"line":845,"column":116,"offset":18142},"indent":[]}},{"type":"text","value":"). They also cannot be ","position":{"start":{"line":845,"column":116,"offset":18142},"end":{"line":845,"column":139,"offset":18165},"indent":[]}},{"type":"link","title":null,"url":"#type","children":[{"type":"text","value":"type mapped","position":{"start":{"line":845,"column":140,"offset":18166},"end":{"line":845,"column":151,"offset":18177},"indent":[]}}],"position":{"start":{"line":845,"column":139,"offset":18165},"end":{"line":845,"column":159,"offset":18185},"indent":[]}},{"type":"text","value":" since enum types cannot be mapped yet (","position":{"start":{"line":845,"column":159,"offset":18185},"end":{"line":845,"column":199,"offset":18225},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/473","children":[{"type":"text","value":"issue","position":{"start":{"line":845,"column":200,"offset":18226},"end":{"line":845,"column":205,"offset":18231},"indent":[]}}],"position":{"start":{"line":845,"column":199,"offset":18225},"end":{"line":845,"column":262,"offset":18288},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":845,"column":262,"offset":18288},"end":{"line":845,"column":264,"offset":18290},"indent":[]}}],"position":{"start":{"line":845,"column":1,"offset":18027},"end":{"line":845,"column":264,"offset":18290},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":847,"column":7,"offset":18298},"end":{"line":847,"column":14,"offset":18305},"indent":[]}}],"position":{"start":{"line":847,"column":1,"offset":18292},"end":{"line":847,"column":14,"offset":18305},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"n/a","position":{"start":{"line":849,"column":1,"offset":18307},"end":{"line":849,"column":4,"offset":18310},"indent":[]}}],"position":{"start":{"line":849,"column":1,"offset":18307},"end":{"line":849,"column":4,"offset":18310},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":851,"column":7,"offset":18318},"end":{"line":851,"column":36,"offset":18347},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":851,"column":37,"offset":18348},"end":{"line":851,"column":40,"offset":18351},"indent":[]}}],"position":{"start":{"line":851,"column":36,"offset":18347},"end":{"line":851,"column":91,"offset":18402},"indent":[]}}],"position":{"start":{"line":851,"column":1,"offset":18312},"end":{"line":851,"column":91,"offset":18402},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type M {\n  MEF: E # ! <-- if not ? or @default\n}\n\n# if not defined by user\nenum E {\n  EV\n}","position":{"start":{"line":853,"column":1,"offset":18404},"end":{"line":862,"column":4,"offset":18509},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":864,"column":7,"offset":18517},"end":{"line":864,"column":14,"offset":18524},"indent":[]}}],"position":{"start":{"line":864,"column":1,"offset":18511},"end":{"line":864,"column":14,"offset":18524},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":866,"column":1,"offset":18526},"end":{"line":866,"column":30,"offset":18555},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  role Role\n  mood Mood\n}\n\nenum Mood {\n  HAPPY\n  SAD\n  COMFUSED\n}\n\nenum Role {\n  MEMBER\n  EDITOR\n  ADMIN\n}","position":{"start":{"line":868,"column":1,"offset":18557},"end":{"line":885,"column":4,"offset":18690},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"enumType({\n  name: 'Role',\n  members: ['MEMBER', 'EDITOR'],\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.role()\n    t.model.mood()\n  },\n})","position":{"start":{"line":887,"column":1,"offset":18692},"end":{"line":900,"column":4,"offset":18865},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"enum Mood {\n  HAPPY\n  SAD\n  CONFUSED\n}\n\nenum Role {\n  MEMBER\n  EDITOR\n}\n\ntype User {\n  role: Role\n  mood: Mood\n}","position":{"start":{"line":902,"column":1,"offset":18867},"end":{"line":918,"column":4,"offset":18994},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":920,"column":1,"offset":18996},"end":{"line":920,"column":7,"offset":19002},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Scalar","position":{"start":{"line":922,"column":6,"offset":19009},"end":{"line":922,"column":12,"offset":19015},"indent":[]}}],"position":{"start":{"line":922,"column":1,"offset":19004},"end":{"line":922,"column":12,"offset":19015},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Scalar Mapping","position":{"start":{"line":924,"column":2,"offset":19018},"end":{"line":924,"column":16,"offset":19032},"indent":[]}}],"position":{"start":{"line":924,"column":1,"offset":19017},"end":{"line":924,"column":17,"offset":19033},"indent":[]}}],"position":{"start":{"line":924,"column":1,"offset":19017},"end":{"line":924,"column":17,"offset":19033},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/data-modeling.md#scalar-types","children":[{"type":"text","value":"Prisma scalars","position":{"start":{"line":926,"column":2,"offset":19036},"end":{"line":926,"column":16,"offset":19050},"indent":[]}}],"position":{"start":{"line":926,"column":1,"offset":19035},"end":{"line":926,"column":99,"offset":19133},"indent":[]}},{"type":"text","value":" are mapped to ","position":{"start":{"line":926,"column":99,"offset":19133},"end":{"line":926,"column":114,"offset":19148},"indent":[]}},{"type":"link","title":null,"url":"https://graphql.org/learn/schema/#scalar-types","children":[{"type":"text","value":"GraphQL scalars","position":{"start":{"line":926,"column":115,"offset":19149},"end":{"line":926,"column":130,"offset":19164},"indent":[]}}],"position":{"start":{"line":926,"column":114,"offset":19148},"end":{"line":926,"column":179,"offset":19213},"indent":[]}},{"type":"text","value":" as follows:","position":{"start":{"line":926,"column":179,"offset":19213},"end":{"line":926,"column":191,"offset":19225},"indent":[]}}],"position":{"start":{"line":926,"column":1,"offset":19035},"end":{"line":926,"column":191,"offset":19225},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Prisma       GraphQL\n------       -------\nBoolean   <>  Boolean\nString    <>  String\nInt       <>  Int\nFloat     <>  Float\ncuid()    <>  ID\nDateTime  <>  DateTime (custom scalar)\nuuid()    <>  UUID (custom scalar)","position":{"start":{"line":928,"column":1,"offset":19227},"end":{"line":938,"column":4,"offset":19448},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Auto-Projection","position":{"start":{"line":940,"column":2,"offset":19451},"end":{"line":940,"column":17,"offset":19466},"indent":[]}}],"position":{"start":{"line":940,"column":1,"offset":19450},"end":{"line":940,"column":18,"offset":19467},"indent":[]}}],"position":{"start":{"line":940,"column":1,"offset":19450},"end":{"line":940,"column":18,"offset":19467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a Prisma scalar is encountered that does not map to the standard GraphQL scalar types, it will be automatically projected (custom scalar added to the GraphQL schema). Examples include ","position":{"start":{"line":942,"column":1,"offset":19469},"end":{"line":942,"column":190,"offset":19658},"indent":[]}},{"type":"inlineCode","value":"DateTime","position":{"start":{"line":942,"column":190,"offset":19658},"end":{"line":942,"column":200,"offset":19668},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":942,"column":200,"offset":19668},"end":{"line":942,"column":205,"offset":19673},"indent":[]}},{"type":"inlineCode","value":"UUID","position":{"start":{"line":942,"column":205,"offset":19673},"end":{"line":942,"column":211,"offset":19679},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":942,"column":211,"offset":19679},"end":{"line":942,"column":212,"offset":19680},"indent":[]}}],"position":{"start":{"line":942,"column":1,"offset":19469},"end":{"line":942,"column":212,"offset":19680},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Option Notes","position":{"start":{"line":944,"column":2,"offset":19683},"end":{"line":944,"column":14,"offset":19695},"indent":[]}}],"position":{"start":{"line":944,"column":1,"offset":19682},"end":{"line":944,"column":15,"offset":19696},"indent":[]}}],"position":{"start":{"line":944,"column":1,"offset":19682},"end":{"line":944,"column":15,"offset":19696},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is not possible to use ","position":{"start":{"line":946,"column":1,"offset":19698},"end":{"line":946,"column":27,"offset":19724},"indent":[]}},{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":946,"column":28,"offset":19725},"end":{"line":946,"column":34,"offset":19731},"indent":[]}}],"position":{"start":{"line":946,"column":27,"offset":19724},"end":{"line":946,"column":42,"offset":19739},"indent":[]}},{"type":"text","value":" because there is currently no way for a Prisma scalar to map to a differently named GraphQL scalar.","position":{"start":{"line":946,"column":42,"offset":19739},"end":{"line":946,"column":142,"offset":19839},"indent":[]}}],"position":{"start":{"line":946,"column":1,"offset":19698},"end":{"line":946,"column":142,"offset":19839},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":948,"column":7,"offset":19847},"end":{"line":948,"column":36,"offset":19876},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":948,"column":37,"offset":19877},"end":{"line":948,"column":40,"offset":19880},"indent":[]}}],"position":{"start":{"line":948,"column":36,"offset":19876},"end":{"line":948,"column":91,"offset":19931},"indent":[]}}],"position":{"start":{"line":948,"column":1,"offset":19841},"end":{"line":948,"column":91,"offset":19931},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type M {\n  MSF: S # ! <-- if not ? or @default\n}\n\n# if not matching a standard GQL scalar\nscalar S","position":{"start":{"line":950,"column":1,"offset":19933},"end":{"line":957,"column":4,"offset":20046},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":959,"column":7,"offset":20054},"end":{"line":959,"column":14,"offset":20061},"indent":[]}}],"position":{"start":{"line":959,"column":1,"offset":20048},"end":{"line":959,"column":14,"offset":20061},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":961,"column":2,"offset":20064},"end":{"line":961,"column":9,"offset":20071},"indent":[]}}],"position":{"start":{"line":961,"column":1,"offset":20063},"end":{"line":961,"column":18,"offset":20080},"indent":[]}}],"position":{"start":{"line":961,"column":1,"offset":20063},"end":{"line":961,"column":18,"offset":20080},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":963,"column":7,"offset":20088},"end":{"line":963,"column":14,"offset":20095},"indent":[]}}],"position":{"start":{"line":963,"column":1,"offset":20082},"end":{"line":963,"column":14,"offset":20095},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":965,"column":1,"offset":20097},"end":{"line":965,"column":30,"offset":20126},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type Post {\n  id: Int!\n  email: String!\n  scheduledPublish: DateTime\n  rating: Float!\n  active: Boolean!\n}\n\nscalar DateTime","position":{"start":{"line":967,"column":1,"offset":20128},"end":{"line":977,"column":4,"offset":20266},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.scheduledPublish()\n    t.model.rating()\n    t.model.active()\n  },\n})","position":{"start":{"line":979,"column":1,"offset":20268},"end":{"line":990,"column":4,"offset":20449},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"prisma","meta":null,"value":"\nmodel User {\n  id               String     @id @default(cuid())\n  email            String\n  scheduledPublish DateTime?\n  rating           Float\n  active           Boolean\n}","position":{"start":{"line":992,"column":1,"offset":20451},"end":{"line":1001,"column":4,"offset":20638},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1003,"column":1,"offset":20640},"end":{"line":1003,"column":7,"offset":20646},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Relation","position":{"start":{"line":1005,"column":6,"offset":20653},"end":{"line":1005,"column":14,"offset":20661},"indent":[]}}],"position":{"start":{"line":1005,"column":1,"offset":20648},"end":{"line":1005,"column":14,"offset":20661},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Projecting relational fields only affects the current GraphQL object being defined. That is, the model that the field relates to is not auto-projected. This is a design choice intended to keep the ","position":{"start":{"line":1007,"column":1,"offset":20663},"end":{"line":1007,"column":198,"offset":20860},"indent":[]}},{"type":"inlineCode","value":"nexus-prisma","position":{"start":{"line":1007,"column":198,"offset":20860},"end":{"line":1007,"column":212,"offset":20874},"indent":[]}},{"type":"text","value":" system predictable for you. If you forget to project a relation you will receive feedback at build/boot time letting you know.","position":{"start":{"line":1007,"column":212,"offset":20874},"end":{"line":1007,"column":339,"offset":21001},"indent":[]}}],"position":{"start":{"line":1007,"column":1,"offset":20663},"end":{"line":1007,"column":339,"offset":21001},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1009,"column":7,"offset":21009},"end":{"line":1009,"column":14,"offset":21016},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":21003},"end":{"line":1009,"column":14,"offset":21016},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1011,"column":2,"offset":21019},"end":{"line":1011,"column":8,"offset":21025},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":21018},"end":{"line":1011,"column":16,"offset":21033},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1011,"column":16,"offset":21033},"end":{"line":1011,"column":17,"offset":21034},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1011,"column":18,"offset":21035},"end":{"line":1011,"column":25,"offset":21042},"indent":[]}}],"position":{"start":{"line":1011,"column":17,"offset":21034},"end":{"line":1011,"column":34,"offset":21051},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":21018},"end":{"line":1011,"column":34,"offset":21051},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1013,"column":7,"offset":21059},"end":{"line":1013,"column":36,"offset":21088},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1013,"column":37,"offset":21089},"end":{"line":1013,"column":40,"offset":21092},"indent":[]}}],"position":{"start":{"line":1013,"column":36,"offset":21088},"end":{"line":1013,"column":91,"offset":21143},"indent":[]}}],"position":{"start":{"line":1013,"column":1,"offset":21053},"end":{"line":1013,"column":91,"offset":21143},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type M {\n  MRF: RM # ! <-- if not ?\n}","position":{"start":{"line":1015,"column":1,"offset":21145},"end":{"line":1019,"column":4,"offset":21197},"indent":[1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1021,"column":7,"offset":21205},"end":{"line":1021,"column":14,"offset":21212},"indent":[]}}],"position":{"start":{"line":1021,"column":1,"offset":21199},"end":{"line":1021,"column":14,"offset":21212},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1023,"column":1,"offset":21214},"end":{"line":1023,"column":30,"offset":21243},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  latestPost Post?\n}\n\nmodel Post {\n  title String\n  body String\n}","position":{"start":{"line":1025,"column":1,"offset":21245},"end":{"line":1034,"column":4,"offset":21337},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.latestPost()\n  },\n})","position":{"start":{"line":1036,"column":1,"offset":21339},"end":{"line":1043,"column":4,"offset":21435},"indent":[1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type User {\n  latestPost: Post\n}","position":{"start":{"line":1045,"column":1,"offset":21437},"end":{"line":1049,"column":4,"offset":21484},"indent":[1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1051,"column":1,"offset":21486},"end":{"line":1051,"column":7,"offset":21492},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"List Enum","position":{"start":{"line":1053,"column":6,"offset":21499},"end":{"line":1053,"column":15,"offset":21508},"indent":[]}}],"position":{"start":{"line":1053,"column":1,"offset":21494},"end":{"line":1053,"column":15,"offset":21508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Like ","position":{"start":{"line":1055,"column":1,"offset":21510},"end":{"line":1055,"column":6,"offset":21515},"indent":[]}},{"type":"link","title":null,"url":"#enum","children":[{"type":"text","value":"enums","position":{"start":{"line":1055,"column":7,"offset":21516},"end":{"line":1055,"column":12,"offset":21521},"indent":[]}}],"position":{"start":{"line":1055,"column":6,"offset":21515},"end":{"line":1055,"column":20,"offset":21529},"indent":[]}},{"type":"text","value":". It is not possible to order (","position":{"start":{"line":1055,"column":20,"offset":21529},"end":{"line":1055,"column":51,"offset":21560},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/466","children":[{"type":"text","value":"issue","position":{"start":{"line":1055,"column":52,"offset":21561},"end":{"line":1055,"column":57,"offset":21566},"indent":[]}}],"position":{"start":{"line":1055,"column":51,"offset":21560},"end":{"line":1055,"column":114,"offset":21623},"indent":[]}},{"type":"text","value":") paginate (","position":{"start":{"line":1055,"column":114,"offset":21623},"end":{"line":1055,"column":126,"offset":21635},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/468","children":[{"type":"text","value":"issue","position":{"start":{"line":1055,"column":127,"offset":21636},"end":{"line":1055,"column":132,"offset":21641},"indent":[]}}],"position":{"start":{"line":1055,"column":126,"offset":21635},"end":{"line":1055,"column":189,"offset":21698},"indent":[]}},{"type":"text","value":") or filter (","position":{"start":{"line":1055,"column":189,"offset":21698},"end":{"line":1055,"column":202,"offset":21711},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/467","children":[{"type":"text","value":"issue","position":{"start":{"line":1055,"column":203,"offset":21712},"end":{"line":1055,"column":208,"offset":21717},"indent":[]}}],"position":{"start":{"line":1055,"column":202,"offset":21711},"end":{"line":1055,"column":265,"offset":21774},"indent":[]}},{"type":"text","value":") enum lists.","position":{"start":{"line":1055,"column":265,"offset":21774},"end":{"line":1055,"column":278,"offset":21787},"indent":[]}}],"position":{"start":{"line":1055,"column":1,"offset":21510},"end":{"line":1055,"column":278,"offset":21787},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1057,"column":7,"offset":21795},"end":{"line":1057,"column":36,"offset":21824},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1057,"column":37,"offset":21825},"end":{"line":1057,"column":40,"offset":21828},"indent":[]}}],"position":{"start":{"line":1057,"column":36,"offset":21824},"end":{"line":1057,"column":91,"offset":21879},"indent":[]}}],"position":{"start":{"line":1057,"column":1,"offset":21789},"end":{"line":1057,"column":91,"offset":21879},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type M {\n  MLEF: [E!]!\n}\n\n# if not defined by user\nenum E {\n  EV\n}","position":{"start":{"line":1059,"column":1,"offset":21881},"end":{"line":1068,"column":4,"offset":21962},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"List Scalar","position":{"start":{"line":1070,"column":6,"offset":21969},"end":{"line":1070,"column":17,"offset":21980},"indent":[]}}],"position":{"start":{"line":1070,"column":1,"offset":21964},"end":{"line":1070,"column":17,"offset":21980},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Like ","position":{"start":{"line":1072,"column":1,"offset":21982},"end":{"line":1072,"column":6,"offset":21987},"indent":[]}},{"type":"link","title":null,"url":"#scalar","children":[{"type":"text","value":"scalars","position":{"start":{"line":1072,"column":7,"offset":21988},"end":{"line":1072,"column":14,"offset":21995},"indent":[]}}],"position":{"start":{"line":1072,"column":6,"offset":21987},"end":{"line":1072,"column":24,"offset":22005},"indent":[]}},{"type":"text","value":". It is not possible to order (","position":{"start":{"line":1072,"column":24,"offset":22005},"end":{"line":1072,"column":55,"offset":22036},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/470","children":[{"type":"text","value":"issue","position":{"start":{"line":1072,"column":56,"offset":22037},"end":{"line":1072,"column":61,"offset":22042},"indent":[]}}],"position":{"start":{"line":1072,"column":55,"offset":22036},"end":{"line":1072,"column":118,"offset":22099},"indent":[]}},{"type":"text","value":") paginate (","position":{"start":{"line":1072,"column":118,"offset":22099},"end":{"line":1072,"column":130,"offset":22111},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/471","children":[{"type":"text","value":"issue","position":{"start":{"line":1072,"column":131,"offset":22112},"end":{"line":1072,"column":136,"offset":22117},"indent":[]}}],"position":{"start":{"line":1072,"column":130,"offset":22111},"end":{"line":1072,"column":193,"offset":22174},"indent":[]}},{"type":"text","value":") or filter (","position":{"start":{"line":1072,"column":193,"offset":22174},"end":{"line":1072,"column":206,"offset":22187},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/469","children":[{"type":"text","value":"issue","position":{"start":{"line":1072,"column":207,"offset":22188},"end":{"line":1072,"column":212,"offset":22193},"indent":[]}}],"position":{"start":{"line":1072,"column":206,"offset":22187},"end":{"line":1072,"column":269,"offset":22250},"indent":[]}},{"type":"text","value":") scalar lists.","position":{"start":{"line":1072,"column":269,"offset":22250},"end":{"line":1072,"column":284,"offset":22265},"indent":[]}}],"position":{"start":{"line":1072,"column":1,"offset":21982},"end":{"line":1072,"column":284,"offset":22265},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1074,"column":7,"offset":22273},"end":{"line":1074,"column":36,"offset":22302},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1074,"column":37,"offset":22303},"end":{"line":1074,"column":40,"offset":22306},"indent":[]}}],"position":{"start":{"line":1074,"column":36,"offset":22302},"end":{"line":1074,"column":91,"offset":22357},"indent":[]}}],"position":{"start":{"line":1074,"column":1,"offset":22267},"end":{"line":1074,"column":91,"offset":22357},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type M {\n  MLSF: [S!]!\n}","position":{"start":{"line":1076,"column":1,"offset":22359},"end":{"line":1080,"column":4,"offset":22398},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"List Relation","position":{"start":{"line":1082,"column":6,"offset":22405},"end":{"line":1082,"column":19,"offset":22418},"indent":[]}}],"position":{"start":{"line":1082,"column":1,"offset":22400},"end":{"line":1082,"column":19,"offset":22418},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Like ","position":{"start":{"line":1084,"column":1,"offset":22420},"end":{"line":1084,"column":6,"offset":22425},"indent":[]}},{"type":"link","title":null,"url":"#relation","children":[{"type":"text","value":"relations","position":{"start":{"line":1084,"column":7,"offset":22426},"end":{"line":1084,"column":16,"offset":22435},"indent":[]}}],"position":{"start":{"line":1084,"column":6,"offset":22425},"end":{"line":1084,"column":28,"offset":22447},"indent":[]}},{"type":"text","value":" but also supports batch related options.","position":{"start":{"line":1084,"column":28,"offset":22447},"end":{"line":1084,"column":69,"offset":22488},"indent":[]}}],"position":{"start":{"line":1084,"column":1,"offset":22420},"end":{"line":1084,"column":69,"offset":22488},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1086,"column":7,"offset":22496},"end":{"line":1086,"column":14,"offset":22503},"indent":[]}}],"position":{"start":{"line":1086,"column":1,"offset":22490},"end":{"line":1086,"column":14,"offset":22503},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1088,"column":2,"offset":22506},"end":{"line":1088,"column":8,"offset":22512},"indent":[]}}],"position":{"start":{"line":1088,"column":1,"offset":22505},"end":{"line":1088,"column":16,"offset":22520},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1088,"column":16,"offset":22520},"end":{"line":1088,"column":17,"offset":22521},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1088,"column":18,"offset":22522},"end":{"line":1088,"column":25,"offset":22529},"indent":[]}}],"position":{"start":{"line":1088,"column":17,"offset":22521},"end":{"line":1088,"column":34,"offset":22538},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1088,"column":34,"offset":22538},"end":{"line":1088,"column":35,"offset":22539},"indent":[]}},{"type":"link","title":null,"url":"#filtering","children":[{"type":"inlineCode","value":"filtering","position":{"start":{"line":1088,"column":36,"offset":22540},"end":{"line":1088,"column":47,"offset":22551},"indent":[]}}],"position":{"start":{"line":1088,"column":35,"offset":22539},"end":{"line":1088,"column":60,"offset":22564},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1088,"column":60,"offset":22564},"end":{"line":1088,"column":61,"offset":22565},"indent":[]}},{"type":"link","title":null,"url":"#pagination","children":[{"type":"inlineCode","value":"pagination","position":{"start":{"line":1088,"column":62,"offset":22566},"end":{"line":1088,"column":74,"offset":22578},"indent":[]}}],"position":{"start":{"line":1088,"column":61,"offset":22565},"end":{"line":1088,"column":88,"offset":22592},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1088,"column":88,"offset":22592},"end":{"line":1088,"column":89,"offset":22593},"indent":[]}},{"type":"link","title":null,"url":"#ordering","children":[{"type":"inlineCode","value":"ordering","position":{"start":{"line":1088,"column":90,"offset":22594},"end":{"line":1088,"column":100,"offset":22604},"indent":[]}}],"position":{"start":{"line":1088,"column":89,"offset":22593},"end":{"line":1088,"column":112,"offset":22616},"indent":[]}}],"position":{"start":{"line":1088,"column":1,"offset":22505},"end":{"line":1088,"column":112,"offset":22616},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1090,"column":7,"offset":22624},"end":{"line":1090,"column":36,"offset":22653},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1090,"column":37,"offset":22654},"end":{"line":1090,"column":40,"offset":22657},"indent":[]}}],"position":{"start":{"line":1090,"column":36,"offset":22653},"end":{"line":1090,"column":91,"offset":22708},"indent":[]}}],"position":{"start":{"line":1090,"column":1,"offset":22618},"end":{"line":1090,"column":91,"offset":22708},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type M {\n  MLRF: [RM!]!\n}","position":{"start":{"line":1092,"column":1,"offset":22710},"end":{"line":1096,"column":4,"offset":22750},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"t.crud","position":{"start":{"line":1098,"column":5,"offset":22756},"end":{"line":1098,"column":13,"offset":22764},"indent":[]}}],"position":{"start":{"line":1098,"column":1,"offset":22752},"end":{"line":1098,"column":13,"offset":22764},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only available within GraphQL ","position":{"start":{"line":1100,"column":1,"offset":22766},"end":{"line":1100,"column":31,"offset":22796},"indent":[]}},{"type":"inlineCode","value":"Query","position":{"start":{"line":1100,"column":31,"offset":22796},"end":{"line":1100,"column":38,"offset":22803},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1100,"column":38,"offset":22803},"end":{"line":1100,"column":43,"offset":22808},"indent":[]}},{"type":"inlineCode","value":"Mutation","position":{"start":{"line":1100,"column":43,"offset":22808},"end":{"line":1100,"column":53,"offset":22818},"indent":[]}},{"type":"text","value":" definitions.","position":{"start":{"line":1100,"column":53,"offset":22818},"end":{"line":1100,"column":66,"offset":22831},"indent":[]}}],"position":{"start":{"line":1100,"column":1,"offset":22766},"end":{"line":1100,"column":66,"offset":22831},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"t.crud","position":{"start":{"line":1102,"column":1,"offset":22833},"end":{"line":1102,"column":9,"offset":22841},"indent":[]}},{"type":"text","value":" contains configurable ","position":{"start":{"line":1102,"column":9,"offset":22841},"end":{"line":1102,"column":32,"offset":22864},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"operation publishers","position":{"start":{"line":1102,"column":33,"offset":22865},"end":{"line":1102,"column":53,"offset":22885},"indent":[]}}],"position":{"start":{"line":1102,"column":32,"offset":22864},"end":{"line":1102,"column":54,"offset":22886},"indent":[]}},{"type":"text","value":" that you use for exposing create, read, update, and delete mutations against your projected Prisma models.","position":{"start":{"line":1102,"column":54,"offset":22886},"end":{"line":1102,"column":161,"offset":22993},"indent":[]}}],"position":{"start":{"line":1102,"column":1,"offset":22833},"end":{"line":1102,"column":161,"offset":22993},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are 8 kinds of operations (reflecting a subset of ","position":{"start":{"line":1104,"column":1,"offset":22995},"end":{"line":1104,"column":57,"offset":23051},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js","children":[{"type":"text","value":"Prisma Client","position":{"start":{"line":1104,"column":58,"offset":23052},"end":{"line":1104,"column":71,"offset":23065},"indent":[]}}],"position":{"start":{"line":1104,"column":57,"offset":23051},"end":{"line":1104,"column":116,"offset":23110},"indent":[]}},{"type":"text","value":"'s capabilities). An ","position":{"start":{"line":1104,"column":116,"offset":23110},"end":{"line":1104,"column":137,"offset":23131},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"operation publisher","position":{"start":{"line":1104,"column":138,"offset":23132},"end":{"line":1104,"column":157,"offset":23151},"indent":[]}}],"position":{"start":{"line":1104,"column":137,"offset":23131},"end":{"line":1104,"column":158,"offset":23152},"indent":[]}},{"type":"text","value":" is the combination of some operation kind and a particular Prisma model. Thus the number of operation publishers on ","position":{"start":{"line":1104,"column":158,"offset":23152},"end":{"line":1104,"column":275,"offset":23269},"indent":[]}},{"type":"inlineCode","value":"t.crud","position":{"start":{"line":1104,"column":275,"offset":23269},"end":{"line":1104,"column":283,"offset":23277},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1104,"column":283,"offset":23277},"end":{"line":1104,"column":287,"offset":23281},"indent":[]}},{"type":"inlineCode","value":"Prisma model count × operation kind count","position":{"start":{"line":1104,"column":287,"offset":23281},"end":{"line":1104,"column":330,"offset":23324},"indent":[]}},{"type":"text","value":". So for example if you defined 20 Prisma models then you would see 160 operation publishers on ","position":{"start":{"line":1104,"column":330,"offset":23324},"end":{"line":1104,"column":426,"offset":23420},"indent":[]}},{"type":"inlineCode","value":"t.crud","position":{"start":{"line":1104,"column":426,"offset":23420},"end":{"line":1104,"column":434,"offset":23428},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1104,"column":434,"offset":23428},"end":{"line":1104,"column":435,"offset":23429},"indent":[]}}],"position":{"start":{"line":1104,"column":1,"offset":22995},"end":{"line":1104,"column":435,"offset":23429},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1106,"column":7,"offset":23437},"end":{"line":1106,"column":14,"offset":23444},"indent":[]}}],"position":{"start":{"line":1106,"column":1,"offset":23431},"end":{"line":1106,"column":14,"offset":23444},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1108,"column":1,"offset":23446},"end":{"line":1108,"column":30,"offset":23475},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  ...\n}","position":{"start":{"line":1110,"column":1,"offset":23477},"end":{"line":1114,"column":4,"offset":23511},"indent":[1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t) {\n    t.crud.user()\n    t.crud.users()\n  },\n})\n\nschema.mutationType({\n  definition(t) {\n    t.crud.createOneUser()\n    t.crud.updateOneUser()\n    t.crud.upsertOneUser()\n    t.crud.deleteOneUser()\n\n    t.crud.updateManyUser()\n    t.crud.deleteManyUser()\n  },\n})","position":{"start":{"line":1116,"column":1,"offset":23513},"end":{"line":1135,"column":4,"offset":23818},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1137,"column":1,"offset":23820},"end":{"line":1137,"column":7,"offset":23826},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Create","position":{"start":{"line":1139,"column":6,"offset":23833},"end":{"line":1139,"column":12,"offset":23839},"indent":[]}}],"position":{"start":{"line":1139,"column":1,"offset":23828},"end":{"line":1139,"column":12,"offset":23839},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.createOne<M>","position":{"start":{"line":1141,"column":1,"offset":23841},"end":{"line":1143,"column":4,"offset":23868},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to create one record at at time of the respective Prisma model.","position":{"start":{"line":1145,"column":1,"offset":23870},"end":{"line":1145,"column":78,"offset":23947},"indent":[]}}],"position":{"start":{"line":1145,"column":1,"offset":23870},"end":{"line":1145,"column":78,"offset":23947},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Relation fields may be connected with an existing record or a sub-create may be inlined (generally referred to as ","position":{"start":{"line":1147,"column":1,"offset":23949},"end":{"line":1147,"column":115,"offset":24063},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"nested mutations","position":{"start":{"line":1147,"column":116,"offset":24064},"end":{"line":1147,"column":132,"offset":24080},"indent":[]}}],"position":{"start":{"line":1147,"column":115,"offset":24063},"end":{"line":1147,"column":133,"offset":24081},"indent":[]}},{"type":"text","value":"). If the relation is a ","position":{"start":{"line":1147,"column":133,"offset":24081},"end":{"line":1147,"column":157,"offset":24105},"indent":[]}},{"type":"inlineCode","value":"List","position":{"start":{"line":1147,"column":157,"offset":24105},"end":{"line":1147,"column":163,"offset":24111},"indent":[]}},{"type":"text","value":" then multiple connections or sub-creates are permitted.","position":{"start":{"line":1147,"column":163,"offset":24111},"end":{"line":1147,"column":219,"offset":24167},"indent":[]}}],"position":{"start":{"line":1147,"column":1,"offset":23949},"end":{"line":1147,"column":219,"offset":24167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inlined creates are very similar to top-level ones but have the important difference that the sub-create has excluded the field where supplying its relation to the type of parent ","position":{"start":{"line":1149,"column":1,"offset":24169},"end":{"line":1149,"column":180,"offset":24348},"indent":[]}},{"type":"inlineCode","value":"Object","position":{"start":{"line":1149,"column":180,"offset":24348},"end":{"line":1149,"column":188,"offset":24356},"indent":[]}},{"type":"text","value":" being created would ","position":{"start":{"line":1149,"column":188,"offset":24356},"end":{"line":1149,"column":209,"offset":24377},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"normally be","position":{"start":{"line":1149,"column":210,"offset":24378},"end":{"line":1149,"column":221,"offset":24389},"indent":[]}}],"position":{"start":{"line":1149,"column":209,"offset":24377},"end":{"line":1149,"column":222,"offset":24390},"indent":[]}},{"type":"text","value":". This is because a sub-create forces its record to relate to the parent one.","position":{"start":{"line":1149,"column":222,"offset":24390},"end":{"line":1149,"column":299,"offset":24467},"indent":[]}}],"position":{"start":{"line":1149,"column":1,"offset":24169},"end":{"line":1149,"column":299,"offset":24467},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1151,"column":3,"offset":24471},"end":{"line":1151,"column":36,"offset":24504},"indent":[]}}],"position":{"start":{"line":1151,"column":1,"offset":24469},"end":{"line":1151,"column":38,"offset":24506},"indent":[]}}],"position":{"start":{"line":1151,"column":1,"offset":24469},"end":{"line":1151,"column":38,"offset":24506},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#create","children":[{"type":"inlineCode","value":"create","position":{"start":{"line":1153,"column":2,"offset":24509},"end":{"line":1153,"column":10,"offset":24517},"indent":[]}}],"position":{"start":{"line":1153,"column":1,"offset":24508},"end":{"line":1153,"column":94,"offset":24601},"indent":[]}}],"position":{"start":{"line":1153,"column":1,"offset":24508},"end":{"line":1153,"column":94,"offset":24601},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1155,"column":7,"offset":24609},"end":{"line":1155,"column":14,"offset":24616},"indent":[]}}],"position":{"start":{"line":1155,"column":1,"offset":24603},"end":{"line":1155,"column":14,"offset":24616},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1157,"column":2,"offset":24619},"end":{"line":1157,"column":8,"offset":24625},"indent":[]}}],"position":{"start":{"line":1157,"column":1,"offset":24618},"end":{"line":1157,"column":16,"offset":24633},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1157,"column":16,"offset":24633},"end":{"line":1157,"column":17,"offset":24634},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1157,"column":18,"offset":24635},"end":{"line":1157,"column":25,"offset":24642},"indent":[]}}],"position":{"start":{"line":1157,"column":17,"offset":24634},"end":{"line":1157,"column":34,"offset":24651},"indent":[]}}],"position":{"start":{"line":1157,"column":1,"offset":24618},"end":{"line":1157,"column":34,"offset":24651},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1159,"column":7,"offset":24659},"end":{"line":1159,"column":36,"offset":24688},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1159,"column":37,"offset":24689},"end":{"line":1159,"column":40,"offset":24692},"indent":[]}}],"position":{"start":{"line":1159,"column":36,"offset":24688},"end":{"line":1159,"column":91,"offset":24743},"indent":[]}}],"position":{"start":{"line":1159,"column":1,"offset":24653},"end":{"line":1159,"column":91,"offset":24743},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  createOne_M(data: M_CreateInput): M!\n}\n\ninput M_CreateInput {\n  MSF: S                       # ! <-- if not ? or @default\n  MRF: RM_CreateManyWithout_M  # ! <-- if not ? or @default\n}\n\ninput RM_CreateManyWithout_M {\n  connect: [RM_WhereUniqueInput!]\n  create: [RM_CreateWithout_M_Input!]\n}\n\ninput RM_WhereUniqueInput {\n  MRF@unique: S\n}\n\ninput RM_CreateWithout_M_Input = RM_CreateInput - RMRF: M","position":{"start":{"line":1161,"column":1,"offset":24745},"end":{"line":1181,"column":4,"offset":25168},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1183,"column":7,"offset":25176},"end":{"line":1183,"column":14,"offset":25183},"indent":[]}}],"position":{"start":{"line":1183,"column":1,"offset":25170},"end":{"line":1183,"column":14,"offset":25183},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1185,"column":1,"offset":25185},"end":{"line":1185,"column":30,"offset":25214},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}","position":{"start":{"line":1187,"column":1,"offset":25216},"end":{"line":1200,"column":4,"offset":25399},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.mutationType({\n  definition(t) {\n    t.crud.createOneUser()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.body()\n    t.model.author()\n  },\n})","position":{"start":{"line":1202,"column":1,"offset":25401},"end":{"line":1227,"column":4,"offset":25745},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Mutation {\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n  body: String!\n}\n\ninput PostCreateManyWithoutPostsInput {\n  connect: [PostWhereUniqueInput!]\n  create: [PostCreateWithoutAuthorInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  title: String!\n  body: String!\n}\n\ninput PostWhereUniqueInput {\n  id: Int\n  title: String\n}\n\ntype User {\n  email: String!\n  id: Int!\n  posts: [Post!]!\n}\n\ninput UserCreateInput {\n  email: String!\n  posts: PostCreateManyWithoutPostsInput\n}","position":{"start":{"line":1229,"column":1,"offset":25747},"end":{"line":1268,"column":4,"offset":26306},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation simple {\n  createOneUser(\n    data: {\n      email: \"newton@prisma.io\"\n    }\n  ) {\n    id\n  }\n}\n\nmutation connectRelation {\n  createOneUser(\n    data: {\n      email: \"newton@prisma.io\"\n      posts: { connect: [1643] }\n    }\n  ) {\n    id\n  }\n}\n\nmutation createRelation {\n  createOneUser(\n    data: {\n      email: \"newton@prisma.io\"\n      posts: {\n        create: [\n          {\n            title: \"...\"\n            body: \"...\"\n          }\n        ]\n      }\n    }\n  ) {\n    id\n    posts {\n      title\n    }\n  }\n}","position":{"start":{"line":1270,"column":1,"offset":26308},"end":{"line":1312,"column":4,"offset":26840},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1314,"column":1,"offset":26842},"end":{"line":1314,"column":7,"offset":26848},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Read","position":{"start":{"line":1316,"column":6,"offset":26855},"end":{"line":1316,"column":10,"offset":26859},"indent":[]}}],"position":{"start":{"line":1316,"column":1,"offset":26850},"end":{"line":1316,"column":10,"offset":26859},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.<M>","position":{"start":{"line":1318,"column":1,"offset":26861},"end":{"line":1320,"column":4,"offset":26879},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to find one particular record of the respective Prisma model. They may search by any Prisma model field that has been marked with ","position":{"start":{"line":1322,"column":1,"offset":26881},"end":{"line":1322,"column":145,"offset":27025},"indent":[]}},{"type":"inlineCode","value":"@unique","position":{"start":{"line":1322,"column":145,"offset":27025},"end":{"line":1322,"column":154,"offset":27034},"indent":[]}},{"type":"text","value":" attribute.","position":{"start":{"line":1322,"column":154,"offset":27034},"end":{"line":1322,"column":165,"offset":27045},"indent":[]}}],"position":{"start":{"line":1322,"column":1,"offset":26881},"end":{"line":1322,"column":165,"offset":27045},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ability for list fields to be ","position":{"start":{"line":1324,"column":1,"offset":27047},"end":{"line":1324,"column":35,"offset":27081},"indent":[]}},{"type":"link","title":null,"url":"#filtering","children":[{"type":"text","value":"filtered","position":{"start":{"line":1324,"column":36,"offset":27082},"end":{"line":1324,"column":44,"offset":27090},"indent":[]}}],"position":{"start":{"line":1324,"column":35,"offset":27081},"end":{"line":1324,"column":57,"offset":27103},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":1324,"column":57,"offset":27103},"end":{"line":1324,"column":59,"offset":27105},"indent":[]}},{"type":"link","title":null,"url":"#ordering","children":[{"type":"text","value":"ordered","position":{"start":{"line":1324,"column":60,"offset":27106},"end":{"line":1324,"column":67,"offset":27113},"indent":[]}}],"position":{"start":{"line":1324,"column":59,"offset":27105},"end":{"line":1324,"column":79,"offset":27125},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":1324,"column":79,"offset":27125},"end":{"line":1324,"column":84,"offset":27130},"indent":[]}},{"type":"link","title":null,"url":"#pagination","children":[{"type":"text","value":"paginated","position":{"start":{"line":1324,"column":85,"offset":27131},"end":{"line":1324,"column":94,"offset":27140},"indent":[]}}],"position":{"start":{"line":1324,"column":84,"offset":27130},"end":{"line":1324,"column":108,"offset":27154},"indent":[]}},{"type":"text","value":" depends upon if those features have been enabled for those GraphQL objects via ","position":{"start":{"line":1324,"column":108,"offset":27154},"end":{"line":1324,"column":188,"offset":27234},"indent":[]}},{"type":"link","title":null,"url":"#list-relation","children":[{"type":"inlineCode","value":"t.model.<ListRelation>","position":{"start":{"line":1324,"column":189,"offset":27235},"end":{"line":1324,"column":213,"offset":27259},"indent":[]}}],"position":{"start":{"line":1324,"column":188,"offset":27234},"end":{"line":1324,"column":230,"offset":27276},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1324,"column":230,"offset":27276},"end":{"line":1324,"column":231,"offset":27277},"indent":[]}}],"position":{"start":{"line":1324,"column":1,"offset":27047},"end":{"line":1324,"column":231,"offset":27277},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1326,"column":3,"offset":27281},"end":{"line":1326,"column":36,"offset":27314},"indent":[]}}],"position":{"start":{"line":1326,"column":1,"offset":27279},"end":{"line":1326,"column":38,"offset":27316},"indent":[]}}],"position":{"start":{"line":1326,"column":1,"offset":27279},"end":{"line":1326,"column":38,"offset":27316},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#findone","children":[{"type":"inlineCode","value":"findOne","position":{"start":{"line":1328,"column":2,"offset":27319},"end":{"line":1328,"column":11,"offset":27328},"indent":[]}}],"position":{"start":{"line":1328,"column":1,"offset":27318},"end":{"line":1328,"column":96,"offset":27413},"indent":[]}}],"position":{"start":{"line":1328,"column":1,"offset":27318},"end":{"line":1328,"column":96,"offset":27413},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1330,"column":7,"offset":27421},"end":{"line":1330,"column":14,"offset":27428},"indent":[]}}],"position":{"start":{"line":1330,"column":1,"offset":27415},"end":{"line":1330,"column":14,"offset":27428},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1332,"column":2,"offset":27431},"end":{"line":1332,"column":8,"offset":27437},"indent":[]}}],"position":{"start":{"line":1332,"column":1,"offset":27430},"end":{"line":1332,"column":16,"offset":27445},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1332,"column":16,"offset":27445},"end":{"line":1332,"column":17,"offset":27446},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1332,"column":18,"offset":27447},"end":{"line":1332,"column":25,"offset":27454},"indent":[]}}],"position":{"start":{"line":1332,"column":17,"offset":27446},"end":{"line":1332,"column":34,"offset":27463},"indent":[]}}],"position":{"start":{"line":1332,"column":1,"offset":27430},"end":{"line":1332,"column":34,"offset":27463},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1334,"column":7,"offset":27471},"end":{"line":1334,"column":36,"offset":27500},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1334,"column":37,"offset":27501},"end":{"line":1334,"column":40,"offset":27504},"indent":[]}}],"position":{"start":{"line":1334,"column":36,"offset":27500},"end":{"line":1334,"column":91,"offset":27555},"indent":[]}}],"position":{"start":{"line":1334,"column":1,"offset":27465},"end":{"line":1334,"column":91,"offset":27555},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  M(where: M_WhereUniqueInput): M!\n}\n\ninput M_WhereUniqueInput {\n  MF: S # if @unique\n}","position":{"start":{"line":1336,"column":1,"offset":27557},"end":{"line":1344,"column":4,"offset":27670},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1346,"column":7,"offset":27678},"end":{"line":1346,"column":14,"offset":27685},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":27672},"end":{"line":1346,"column":14,"offset":27685},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1348,"column":1,"offset":27687},"end":{"line":1348,"column":30,"offset":27716},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    Int    @id @unique\n  email String @unique\n}","position":{"start":{"line":1350,"column":1,"offset":27718},"end":{"line":1355,"column":4,"offset":27796},"indent":[1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t) {\n    t.user()\n  },\n})","position":{"start":{"line":1357,"column":1,"offset":27798},"end":{"line":1363,"column":4,"offset":27865},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype User {\n  id: Int!\n  email: String!\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n  email: String\n}","position":{"start":{"line":1365,"column":1,"offset":27867},"end":{"line":1381,"column":4,"offset":28048},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"query simple {\n  user(\n    where: {\n      email: \"newton@prisma.io\"\n    }\n  ) {\n    id\n  }\n}","position":{"start":{"line":1383,"column":1,"offset":28050},"end":{"line":1393,"column":4,"offset":28157},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1395,"column":1,"offset":28159},"end":{"line":1395,"column":7,"offset":28165},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Update","position":{"start":{"line":1397,"column":6,"offset":28172},"end":{"line":1397,"column":12,"offset":28178},"indent":[]}}],"position":{"start":{"line":1397,"column":1,"offset":28167},"end":{"line":1397,"column":12,"offset":28178},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.updateOne<M>","position":{"start":{"line":1399,"column":1,"offset":28180},"end":{"line":1401,"column":4,"offset":28207},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to update one particular record at a time of the respective Prisma model.","position":{"start":{"line":1403,"column":1,"offset":28209},"end":{"line":1403,"column":88,"offset":28296},"indent":[]}}],"position":{"start":{"line":1403,"column":1,"offset":28209},"end":{"line":1403,"column":88,"offset":28296},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1405,"column":3,"offset":28300},"end":{"line":1405,"column":36,"offset":28333},"indent":[]}}],"position":{"start":{"line":1405,"column":1,"offset":28298},"end":{"line":1405,"column":38,"offset":28335},"indent":[]}}],"position":{"start":{"line":1405,"column":1,"offset":28298},"end":{"line":1405,"column":38,"offset":28335},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#update","children":[{"type":"inlineCode","value":"update","position":{"start":{"line":1407,"column":2,"offset":28338},"end":{"line":1407,"column":10,"offset":28346},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":28337},"end":{"line":1407,"column":94,"offset":28430},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":28337},"end":{"line":1407,"column":94,"offset":28430},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1409,"column":7,"offset":28438},"end":{"line":1409,"column":14,"offset":28445},"indent":[]}}],"position":{"start":{"line":1409,"column":1,"offset":28432},"end":{"line":1409,"column":14,"offset":28445},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1411,"column":2,"offset":28448},"end":{"line":1411,"column":8,"offset":28454},"indent":[]}}],"position":{"start":{"line":1411,"column":1,"offset":28447},"end":{"line":1411,"column":16,"offset":28462},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1411,"column":16,"offset":28462},"end":{"line":1411,"column":17,"offset":28463},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1411,"column":18,"offset":28464},"end":{"line":1411,"column":25,"offset":28471},"indent":[]}}],"position":{"start":{"line":1411,"column":17,"offset":28463},"end":{"line":1411,"column":34,"offset":28480},"indent":[]}}],"position":{"start":{"line":1411,"column":1,"offset":28447},"end":{"line":1411,"column":34,"offset":28480},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1413,"column":7,"offset":28488},"end":{"line":1413,"column":36,"offset":28517},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1413,"column":37,"offset":28518},"end":{"line":1413,"column":40,"offset":28521},"indent":[]}}],"position":{"start":{"line":1413,"column":36,"offset":28517},"end":{"line":1413,"column":91,"offset":28572},"indent":[]}}],"position":{"start":{"line":1413,"column":1,"offset":28482},"end":{"line":1413,"column":91,"offset":28572},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  updateOne_M(data: M_UpdateInput!, where: M_WhereUniqueInput!): M\n}\n\ninput M_WhereUniqueInput {\n  MF: S # if @unique\n}\n\ninput M_UpdateInput {\n  MSF: S\n  MRF: RM_UpdateManyWithout_M_Input\n}\n\ninput RM_UpdateManyWithout_M_Input {\n  connect: [RM_WhereUniqueInput!]\n  create: [RM_CreateWithout_M_Input!]\n  delete: [RM_WhereUniqueInput!]\n  deleteMany: [RM_ScalarWhereInput!] # see batch filtering reference\n  disconnect: [RM_WhereUniqueInput!]\n  set: [RM_WhereUniqueInput!]\n  update: [RM_UpdateWithWhereUniqueWithout_M_Input!]\n  updateMany: [RM_UpdateManyWithWhereNestedInput!]\n  upsert: [RM_UpsertWithWhereUniqueWithout_M_Input!]\n}\n\ninput RM_WhereUniqueInput {} # recurse pattern like M_WhereUniqueInput\n\ninput RM_CreateWithout_M_Input {} # RM_CreateInput - RMRF: M\n\ninput RM_UpdateWithWhereUniqueWithout_M_Input {\n  data: RM_UpdateWithout_M_DataInput!\n  where: RM_WhereUniqueInput!\n}\ninput RM_UpdateWithout_M_DataInput {\n  RMSF: S\n}\n\ninput RM_UpdateManyWithWhereNestedInput {\n  data: RM_UpdateManyDataInput!\n  where: RM_ScalarWhereInput! # see batch filering reference\n}\n\ninput RM_UpsertWithWhereUniqueWithout_M_Input {\n  create: RM_CreateWithout_M_Input!\n  update: RM_UpdateWithout_M_DataInput!\n  where: RM_WhereUniqueInput!\n}","position":{"start":{"line":1415,"column":1,"offset":28574},"end":{"line":1463,"column":4,"offset":29824},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":1465,"column":1,"offset":29826},"end":{"line":1465,"column":5,"offset":29830},"indent":[]}},{"type":"inlineCode","value":"S_ScalarWhereInput","position":{"start":{"line":1465,"column":5,"offset":29830},"end":{"line":1465,"column":25,"offset":29850},"indent":[]}},{"type":"text","value":" see ","position":{"start":{"line":1465,"column":25,"offset":29850},"end":{"line":1465,"column":30,"offset":29855},"indent":[]}},{"type":"link","title":null,"url":"#batch-filtering","children":[{"type":"text","value":"batch filtering","position":{"start":{"line":1465,"column":31,"offset":29856},"end":{"line":1465,"column":46,"offset":29871},"indent":[]}}],"position":{"start":{"line":1465,"column":30,"offset":29855},"end":{"line":1465,"column":65,"offset":29890},"indent":[]}},{"type":"text","value":" contributions.","position":{"start":{"line":1465,"column":65,"offset":29890},"end":{"line":1465,"column":80,"offset":29905},"indent":[]}}],"position":{"start":{"line":1465,"column":1,"offset":29826},"end":{"line":1465,"column":80,"offset":29905},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1467,"column":7,"offset":29913},"end":{"line":1467,"column":14,"offset":29920},"indent":[]}}],"position":{"start":{"line":1467,"column":1,"offset":29907},"end":{"line":1467,"column":14,"offset":29920},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1469,"column":1,"offset":29922},"end":{"line":1469,"column":30,"offset":29951},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}","position":{"start":{"line":1471,"column":1,"offset":29953},"end":{"line":1484,"column":4,"offset":30136},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.mutationType({\n  definition(t) {\n    t.crud.updateOneUser()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.author()\n  },\n})","position":{"start":{"line":1486,"column":1,"offset":30138},"end":{"line":1510,"column":4,"offset":30463},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"input IntFilter {\n  equals: Int\n  gt: Int\n  gte: Int\n  in: [Int!]\n  lt: Int\n  lte: Int\n  not: Int\n  notIn: [Int!]\n}\n\ntype Mutation {\n  updateOneUser(\n    data: UserUpdateInput!\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n}\n\ninput PostCreateWithoutAuthorInput {\n  body: String!\n  title: String!\n}\n\ninput PostScalarWhereInput {\n  AND: [PostScalarWhereInput!]\n  body: StringFilter\n  id: IntFilter\n  NOT: [PostScalarWhereInput!]\n  OR: [PostScalarWhereInput!]\n  title: StringFilter\n}\n\ninput PostUpdateManyDataInput {\n  body: String\n  id: Int\n  title: String\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  connect: [PostWhereUniqueInput!]\n  create: [PostCreateWithoutAuthorInput!]\n  delete: [PostWhereUniqueInput!]\n  deleteMany: [PostScalarWhereInput!]\n  disconnect: [PostWhereUniqueInput!]\n  set: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  data: PostUpdateManyDataInput!\n  where: PostScalarWhereInput!\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  body: String\n  id: Int\n  title: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  data: PostUpdateWithoutAuthorDataInput!\n  where: PostWhereUniqueInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  create: PostCreateWithoutAuthorInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  where: PostWhereUniqueInput!\n}\n\ninput PostWhereUniqueInput {\n  id: Int\n  title: String\n}\n\ntype Query {\n  ok: Boolean!\n}\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ntype User {\n  email: String!\n  id: Int!\n  posts: [Post!]!\n}\n\ninput UserUpdateInput {\n  email: String\n  id: Int\n  posts: PostUpdateManyWithoutAuthorInput\n}\n\ninput UserWhereUniqueInput {\n  email: String\n  id: Int\n}","position":{"start":{"line":1512,"column":1,"offset":30465},"end":{"line":1630,"column":4,"offset":32519},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation simple {\n  updateOneUser(\n    where: { id: 1643 }\n    data: {\n      email: \"locke@prisma.io\"\n    }\n  ) {\n    id\n    email\n  }\n}","position":{"start":{"line":1632,"column":1,"offset":32521},"end":{"line":1644,"column":4,"offset":32672},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1646,"column":1,"offset":32674},"end":{"line":1646,"column":7,"offset":32680},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Upsert","position":{"start":{"line":1648,"column":6,"offset":32687},"end":{"line":1648,"column":12,"offset":32693},"indent":[]}}],"position":{"start":{"line":1648,"column":1,"offset":32682},"end":{"line":1648,"column":12,"offset":32693},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.upsertOne<M>","position":{"start":{"line":1650,"column":1,"offset":32695},"end":{"line":1652,"column":4,"offset":32722},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to update or create (aka. insert) one particular record at a time of the respective Prisma model. This operation is a combination of ","position":{"start":{"line":1654,"column":1,"offset":32724},"end":{"line":1654,"column":148,"offset":32871},"indent":[]}},{"type":"link","title":null,"url":"#create","children":[{"type":"text","value":"create","position":{"start":{"line":1654,"column":149,"offset":32872},"end":{"line":1654,"column":155,"offset":32878},"indent":[]}}],"position":{"start":{"line":1654,"column":148,"offset":32871},"end":{"line":1654,"column":165,"offset":32888},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1654,"column":165,"offset":32888},"end":{"line":1654,"column":170,"offset":32893},"indent":[]}},{"type":"link","title":null,"url":"#update","children":[{"type":"text","value":"update","position":{"start":{"line":1654,"column":171,"offset":32894},"end":{"line":1654,"column":177,"offset":32900},"indent":[]}}],"position":{"start":{"line":1654,"column":170,"offset":32893},"end":{"line":1654,"column":187,"offset":32910},"indent":[]}},{"type":"text","value":". The generated GraphQL mutation matches ","position":{"start":{"line":1654,"column":187,"offset":32910},"end":{"line":1654,"column":228,"offset":32951},"indent":[]}},{"type":"inlineCode","value":"data","position":{"start":{"line":1654,"column":228,"offset":32951},"end":{"line":1654,"column":234,"offset":32957},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1654,"column":234,"offset":32957},"end":{"line":1654,"column":239,"offset":32962},"indent":[]}},{"type":"inlineCode","value":"where","position":{"start":{"line":1654,"column":239,"offset":32962},"end":{"line":1654,"column":246,"offset":32969},"indent":[]}},{"type":"text","value":" args to those of update, and ","position":{"start":{"line":1654,"column":246,"offset":32969},"end":{"line":1654,"column":276,"offset":32999},"indent":[]}},{"type":"inlineCode","value":"create","position":{"start":{"line":1654,"column":276,"offset":32999},"end":{"line":1654,"column":284,"offset":33007},"indent":[]}},{"type":"text","value":" to that of ","position":{"start":{"line":1654,"column":284,"offset":33007},"end":{"line":1654,"column":296,"offset":33019},"indent":[]}},{"type":"inlineCode","value":"data","position":{"start":{"line":1654,"column":296,"offset":33019},"end":{"line":1654,"column":302,"offset":33025},"indent":[]}},{"type":"text","value":" arg in create. Unlike update, upsert guarantees a return value.","position":{"start":{"line":1654,"column":302,"offset":33025},"end":{"line":1654,"column":366,"offset":33089},"indent":[]}}],"position":{"start":{"line":1654,"column":1,"offset":32724},"end":{"line":1654,"column":366,"offset":33089},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1656,"column":3,"offset":33093},"end":{"line":1656,"column":36,"offset":33126},"indent":[]}}],"position":{"start":{"line":1656,"column":1,"offset":33091},"end":{"line":1656,"column":38,"offset":33128},"indent":[]}}],"position":{"start":{"line":1656,"column":1,"offset":33091},"end":{"line":1656,"column":38,"offset":33128},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#upsert","children":[{"type":"inlineCode","value":"upsert","position":{"start":{"line":1658,"column":2,"offset":33131},"end":{"line":1658,"column":10,"offset":33139},"indent":[]}}],"position":{"start":{"line":1658,"column":1,"offset":33130},"end":{"line":1658,"column":94,"offset":33223},"indent":[]}}],"position":{"start":{"line":1658,"column":1,"offset":33130},"end":{"line":1658,"column":94,"offset":33223},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1660,"column":7,"offset":33231},"end":{"line":1660,"column":14,"offset":33238},"indent":[]}}],"position":{"start":{"line":1660,"column":1,"offset":33225},"end":{"line":1660,"column":14,"offset":33238},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1662,"column":2,"offset":33241},"end":{"line":1662,"column":8,"offset":33247},"indent":[]}}],"position":{"start":{"line":1662,"column":1,"offset":33240},"end":{"line":1662,"column":16,"offset":33255},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1662,"column":16,"offset":33255},"end":{"line":1662,"column":17,"offset":33256},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1662,"column":18,"offset":33257},"end":{"line":1662,"column":25,"offset":33264},"indent":[]}}],"position":{"start":{"line":1662,"column":17,"offset":33256},"end":{"line":1662,"column":34,"offset":33273},"indent":[]}}],"position":{"start":{"line":1662,"column":1,"offset":33240},"end":{"line":1662,"column":34,"offset":33273},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1664,"column":7,"offset":33281},"end":{"line":1664,"column":36,"offset":33310},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1664,"column":37,"offset":33311},"end":{"line":1664,"column":40,"offset":33314},"indent":[]}}],"position":{"start":{"line":1664,"column":36,"offset":33310},"end":{"line":1664,"column":91,"offset":33365},"indent":[]}}],"position":{"start":{"line":1664,"column":1,"offset":33275},"end":{"line":1664,"column":91,"offset":33365},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  upsertOne_M(\n    create: M_CreateInput!      # like createOne(data ...)\n    data: M_UpdateInput!        # like updateOne(data ...)\n    where: M_WhereUniqueInput!  # like updateOne(where ...)\n  ): M!\n}","position":{"start":{"line":1666,"column":1,"offset":33367},"end":{"line":1674,"column":4,"offset":33595},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":1676,"column":1,"offset":33597},"end":{"line":1676,"column":5,"offset":33601},"indent":[]}},{"type":"inlineCode","value":"M_UpdateInput","position":{"start":{"line":1676,"column":5,"offset":33601},"end":{"line":1676,"column":20,"offset":33616},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1676,"column":20,"offset":33616},"end":{"line":1676,"column":25,"offset":33621},"indent":[]}},{"type":"inlineCode","value":"M_WhereUniqueInput","position":{"start":{"line":1676,"column":25,"offset":33621},"end":{"line":1676,"column":45,"offset":33641},"indent":[]}},{"type":"text","value":" see ","position":{"start":{"line":1676,"column":45,"offset":33641},"end":{"line":1676,"column":50,"offset":33646},"indent":[]}},{"type":"link","title":null,"url":"#update","children":[{"type":"text","value":"update","position":{"start":{"line":1676,"column":51,"offset":33647},"end":{"line":1676,"column":57,"offset":33653},"indent":[]}}],"position":{"start":{"line":1676,"column":50,"offset":33646},"end":{"line":1676,"column":67,"offset":33663},"indent":[]}},{"type":"text","value":" contributions.","position":{"start":{"line":1676,"column":67,"offset":33663},"end":{"line":1676,"column":82,"offset":33678},"indent":[]}},{"type":"break","position":{"start":{"line":1676,"column":82,"offset":33678},"end":{"line":1677,"column":1,"offset":33681},"indent":[1]}},{"type":"text","value":"For ","position":{"start":{"line":1677,"column":1,"offset":33681},"end":{"line":1677,"column":5,"offset":33685},"indent":[]}},{"type":"inlineCode","value":"M_CreateInput","position":{"start":{"line":1677,"column":5,"offset":33685},"end":{"line":1677,"column":20,"offset":33700},"indent":[]}},{"type":"text","value":" see ","position":{"start":{"line":1677,"column":20,"offset":33700},"end":{"line":1677,"column":25,"offset":33705},"indent":[]}},{"type":"link","title":null,"url":"#create","children":[{"type":"text","value":"create","position":{"start":{"line":1677,"column":26,"offset":33706},"end":{"line":1677,"column":32,"offset":33712},"indent":[]}}],"position":{"start":{"line":1677,"column":25,"offset":33705},"end":{"line":1677,"column":42,"offset":33722},"indent":[]}},{"type":"text","value":" contributions.","position":{"start":{"line":1677,"column":42,"offset":33722},"end":{"line":1677,"column":57,"offset":33737},"indent":[]}}],"position":{"start":{"line":1676,"column":1,"offset":33597},"end":{"line":1677,"column":57,"offset":33737},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1679,"column":7,"offset":33745},"end":{"line":1679,"column":14,"offset":33752},"indent":[]}}],"position":{"start":{"line":1679,"column":1,"offset":33739},"end":{"line":1679,"column":14,"offset":33752},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Refer to ","position":{"start":{"line":1681,"column":1,"offset":33754},"end":{"line":1681,"column":10,"offset":33763},"indent":[]}},{"type":"link","title":null,"url":"#update","children":[{"type":"text","value":"update","position":{"start":{"line":1681,"column":11,"offset":33764},"end":{"line":1681,"column":17,"offset":33770},"indent":[]}}],"position":{"start":{"line":1681,"column":10,"offset":33763},"end":{"line":1681,"column":27,"offset":33780},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1681,"column":27,"offset":33780},"end":{"line":1681,"column":32,"offset":33785},"indent":[]}},{"type":"link","title":null,"url":"#create","children":[{"type":"text","value":"create","position":{"start":{"line":1681,"column":33,"offset":33786},"end":{"line":1681,"column":39,"offset":33792},"indent":[]}}],"position":{"start":{"line":1681,"column":32,"offset":33785},"end":{"line":1681,"column":49,"offset":33802},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1681,"column":49,"offset":33802},"end":{"line":1681,"column":50,"offset":33803},"indent":[]}}],"position":{"start":{"line":1681,"column":1,"offset":33754},"end":{"line":1681,"column":50,"offset":33803},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Delete","position":{"start":{"line":1683,"column":6,"offset":33810},"end":{"line":1683,"column":12,"offset":33816},"indent":[]}}],"position":{"start":{"line":1683,"column":1,"offset":33805},"end":{"line":1683,"column":12,"offset":33816},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.deleteOne<M>","position":{"start":{"line":1685,"column":1,"offset":33818},"end":{"line":1687,"column":4,"offset":33845},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to delete one particular record at a time of the respective Prisma model.","position":{"start":{"line":1689,"column":1,"offset":33847},"end":{"line":1689,"column":88,"offset":33934},"indent":[]}}],"position":{"start":{"line":1689,"column":1,"offset":33847},"end":{"line":1689,"column":88,"offset":33934},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1691,"column":3,"offset":33938},"end":{"line":1691,"column":36,"offset":33971},"indent":[]}}],"position":{"start":{"line":1691,"column":1,"offset":33936},"end":{"line":1691,"column":38,"offset":33973},"indent":[]}}],"position":{"start":{"line":1691,"column":1,"offset":33936},"end":{"line":1691,"column":38,"offset":33973},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#delete","children":[{"type":"inlineCode","value":"delete","position":{"start":{"line":1693,"column":2,"offset":33976},"end":{"line":1693,"column":10,"offset":33984},"indent":[]}}],"position":{"start":{"line":1693,"column":1,"offset":33975},"end":{"line":1693,"column":94,"offset":34068},"indent":[]}}],"position":{"start":{"line":1693,"column":1,"offset":33975},"end":{"line":1693,"column":94,"offset":34068},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1695,"column":7,"offset":34076},"end":{"line":1695,"column":14,"offset":34083},"indent":[]}}],"position":{"start":{"line":1695,"column":1,"offset":34070},"end":{"line":1695,"column":14,"offset":34083},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1697,"column":2,"offset":34086},"end":{"line":1697,"column":8,"offset":34092},"indent":[]}}],"position":{"start":{"line":1697,"column":1,"offset":34085},"end":{"line":1697,"column":16,"offset":34100},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1697,"column":16,"offset":34100},"end":{"line":1697,"column":17,"offset":34101},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1697,"column":18,"offset":34102},"end":{"line":1697,"column":25,"offset":34109},"indent":[]}}],"position":{"start":{"line":1697,"column":17,"offset":34101},"end":{"line":1697,"column":34,"offset":34118},"indent":[]}}],"position":{"start":{"line":1697,"column":1,"offset":34085},"end":{"line":1697,"column":34,"offset":34118},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1699,"column":7,"offset":34126},"end":{"line":1699,"column":36,"offset":34155},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1699,"column":37,"offset":34156},"end":{"line":1699,"column":40,"offset":34159},"indent":[]}}],"position":{"start":{"line":1699,"column":36,"offset":34155},"end":{"line":1699,"column":91,"offset":34210},"indent":[]}}],"position":{"start":{"line":1699,"column":1,"offset":34120},"end":{"line":1699,"column":91,"offset":34210},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  deleteOne_M(where: M_WhereUniqueInput): M\n}\n\ninput M_WhereUniqueInput {\n  MF@unique: S\n}","position":{"start":{"line":1701,"column":1,"offset":34212},"end":{"line":1709,"column":4,"offset":34328},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1711,"column":7,"offset":34336},"end":{"line":1711,"column":14,"offset":34343},"indent":[]}}],"position":{"start":{"line":1711,"column":1,"offset":34330},"end":{"line":1711,"column":14,"offset":34343},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1713,"column":1,"offset":34345},"end":{"line":1713,"column":30,"offset":34374},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}","position":{"start":{"line":1715,"column":1,"offset":34376},"end":{"line":1728,"column":4,"offset":34559},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.mutationType({\n  definition(t) {\n    t.crud.deleteOneUser()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.author()\n  },\n})","position":{"start":{"line":1730,"column":1,"offset":34561},"end":{"line":1754,"column":4,"offset":34886},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Mutation {\n  deleteOneUser(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n}\n\ntype User {\n  email: String!\n  id: Int!\n  posts: [Post!]!\n}\n\ninput UserWhereUniqueInput {\n  email: String\n  id: Int\n}","position":{"start":{"line":1756,"column":1,"offset":34888},"end":{"line":1779,"column":4,"offset":35158},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation simple {\n  deleteOneUser(\n    where: { id: 1643 }\n  ) {\n    id\n    email\n    posts {\n      id\n      title\n    }\n  }\n}","position":{"start":{"line":1781,"column":1,"offset":35160},"end":{"line":1794,"column":4,"offset":35301},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1796,"column":1,"offset":35303},"end":{"line":1796,"column":7,"offset":35309},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Batch Read","position":{"start":{"line":1798,"column":6,"offset":35316},"end":{"line":1798,"column":16,"offset":35326},"indent":[]}}],"position":{"start":{"line":1798,"column":1,"offset":35311},"end":{"line":1798,"column":16,"offset":35326},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.<M Pluralized>","position":{"start":{"line":1800,"column":1,"offset":35328},"end":{"line":1802,"column":4,"offset":35357},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to fetch multiple records at once of the respective Prisma model.","position":{"start":{"line":1804,"column":1,"offset":35359},"end":{"line":1804,"column":80,"offset":35438},"indent":[]}}],"position":{"start":{"line":1804,"column":1,"offset":35359},"end":{"line":1804,"column":80,"offset":35438},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1806,"column":3,"offset":35442},"end":{"line":1806,"column":36,"offset":35475},"indent":[]}}],"position":{"start":{"line":1806,"column":1,"offset":35440},"end":{"line":1806,"column":38,"offset":35477},"indent":[]}}],"position":{"start":{"line":1806,"column":1,"offset":35440},"end":{"line":1806,"column":38,"offset":35477},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#findMany","children":[{"type":"inlineCode","value":"findMany","position":{"start":{"line":1808,"column":2,"offset":35480},"end":{"line":1808,"column":12,"offset":35490},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":35479},"end":{"line":1808,"column":98,"offset":35576},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":35479},"end":{"line":1808,"column":98,"offset":35576},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1810,"column":7,"offset":35584},"end":{"line":1810,"column":14,"offset":35591},"indent":[]}}],"position":{"start":{"line":1810,"column":1,"offset":35578},"end":{"line":1810,"column":14,"offset":35591},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1812,"column":2,"offset":35594},"end":{"line":1812,"column":8,"offset":35600},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":35593},"end":{"line":1812,"column":16,"offset":35608},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1812,"column":16,"offset":35608},"end":{"line":1812,"column":17,"offset":35609},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1812,"column":18,"offset":35610},"end":{"line":1812,"column":25,"offset":35617},"indent":[]}}],"position":{"start":{"line":1812,"column":17,"offset":35609},"end":{"line":1812,"column":34,"offset":35626},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1812,"column":34,"offset":35626},"end":{"line":1812,"column":35,"offset":35627},"indent":[]}},{"type":"link","title":null,"url":"#filtering","children":[{"type":"inlineCode","value":"filtering","position":{"start":{"line":1812,"column":36,"offset":35628},"end":{"line":1812,"column":47,"offset":35639},"indent":[]}}],"position":{"start":{"line":1812,"column":35,"offset":35627},"end":{"line":1812,"column":60,"offset":35652},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1812,"column":60,"offset":35652},"end":{"line":1812,"column":61,"offset":35653},"indent":[]}},{"type":"link","title":null,"url":"#pagination","children":[{"type":"inlineCode","value":"pagiantion","position":{"start":{"line":1812,"column":62,"offset":35654},"end":{"line":1812,"column":74,"offset":35666},"indent":[]}}],"position":{"start":{"line":1812,"column":61,"offset":35653},"end":{"line":1812,"column":88,"offset":35680},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1812,"column":88,"offset":35680},"end":{"line":1812,"column":89,"offset":35681},"indent":[]}},{"type":"link","title":null,"url":"#ordering","children":[{"type":"inlineCode","value":"ordering","position":{"start":{"line":1812,"column":90,"offset":35682},"end":{"line":1812,"column":100,"offset":35692},"indent":[]}}],"position":{"start":{"line":1812,"column":89,"offset":35681},"end":{"line":1812,"column":112,"offset":35704},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1812,"column":112,"offset":35704},"end":{"line":1812,"column":113,"offset":35705},"indent":[]}},{"type":"link","title":null,"url":"#computedInputs-local","children":[{"type":"inlineCode","value":"computedInputs","position":{"start":{"line":1812,"column":114,"offset":35706},"end":{"line":1812,"column":130,"offset":35722},"indent":[]}}],"position":{"start":{"line":1812,"column":113,"offset":35705},"end":{"line":1812,"column":154,"offset":35746},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":1812,"column":154,"offset":35746},"end":{"line":1812,"column":155,"offset":35747},"indent":[]}},{"type":"link","title":null,"url":"#computedInputs-local","children":[{"type":"text","value":"local","position":{"start":{"line":1812,"column":156,"offset":35748},"end":{"line":1812,"column":161,"offset":35753},"indent":[]}}],"position":{"start":{"line":1812,"column":155,"offset":35747},"end":{"line":1812,"column":185,"offset":35777},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1812,"column":185,"offset":35777},"end":{"line":1812,"column":190,"offset":35782},"indent":[]}},{"type":"link","title":null,"url":"#computedInputs-global","children":[{"type":"text","value":"global","position":{"start":{"line":1812,"column":191,"offset":35783},"end":{"line":1812,"column":197,"offset":35789},"indent":[]}}],"position":{"start":{"line":1812,"column":190,"offset":35782},"end":{"line":1812,"column":222,"offset":35814},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":1812,"column":222,"offset":35814},"end":{"line":1812,"column":223,"offset":35815},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":35593},"end":{"line":1812,"column":223,"offset":35815},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1814,"column":7,"offset":35823},"end":{"line":1814,"column":36,"offset":35852},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1814,"column":37,"offset":35853},"end":{"line":1814,"column":40,"offset":35856},"indent":[]}}],"position":{"start":{"line":1814,"column":36,"offset":35852},"end":{"line":1814,"column":91,"offset":35907},"indent":[]}}],"position":{"start":{"line":1814,"column":1,"offset":35817},"end":{"line":1814,"column":91,"offset":35907},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"type Query {\n  M_s: [M!]!\n}","position":{"start":{"line":1816,"column":1,"offset":35909},"end":{"line":1820,"column":4,"offset":35951},"indent":[1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1822,"column":7,"offset":35959},"end":{"line":1822,"column":14,"offset":35966},"indent":[]}}],"position":{"start":{"line":1822,"column":1,"offset":35953},"end":{"line":1822,"column":14,"offset":35966},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1824,"column":1,"offset":35968},"end":{"line":1824,"column":30,"offset":35997},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}","position":{"start":{"line":1826,"column":1,"offset":35999},"end":{"line":1839,"column":4,"offset":36182},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t) {\n    t.users()\n  },\n})","position":{"start":{"line":1841,"column":1,"offset":36184},"end":{"line":1847,"column":4,"offset":36252},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Query {\n  users: [User!]!\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n}\n\ntype User {\n  email: String!\n  id: ID!\n  posts: [Post!]!\n}","position":{"start":{"line":1849,"column":1,"offset":36254},"end":{"line":1865,"column":4,"offset":36420},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":1867,"column":1,"offset":36422},"end":{"line":1867,"column":7,"offset":36428},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Batch Update","position":{"start":{"line":1869,"column":6,"offset":36435},"end":{"line":1869,"column":18,"offset":36447},"indent":[]}}],"position":{"start":{"line":1869,"column":1,"offset":36430},"end":{"line":1869,"column":18,"offset":36447},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.updateMany<M>","position":{"start":{"line":1871,"column":1,"offset":36449},"end":{"line":1873,"column":4,"offset":36477},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to update multiple records of the respective Prisma model at once. Unlike ","position":{"start":{"line":1875,"column":1,"offset":36479},"end":{"line":1875,"column":89,"offset":36567},"indent":[]}},{"type":"link","title":null,"url":"#update","children":[{"type":"inlineCode","value":"update","position":{"start":{"line":1875,"column":90,"offset":36568},"end":{"line":1875,"column":98,"offset":36576},"indent":[]}}],"position":{"start":{"line":1875,"column":89,"offset":36567},"end":{"line":1875,"column":108,"offset":36586},"indent":[]}},{"type":"text","value":" nested relation-updating is not supported here. Clients get back a ","position":{"start":{"line":1875,"column":108,"offset":36586},"end":{"line":1875,"column":176,"offset":36654},"indent":[]}},{"type":"inlineCode","value":"BatchPayload","position":{"start":{"line":1875,"column":176,"offset":36654},"end":{"line":1875,"column":190,"offset":36668},"indent":[]}},{"type":"text","value":" object letting them know the number of affected records, but not access to the fields of affected records.","position":{"start":{"line":1875,"column":190,"offset":36668},"end":{"line":1875,"column":297,"offset":36775},"indent":[]}}],"position":{"start":{"line":1875,"column":1,"offset":36479},"end":{"line":1875,"column":297,"offset":36775},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1877,"column":3,"offset":36779},"end":{"line":1877,"column":36,"offset":36812},"indent":[]}}],"position":{"start":{"line":1877,"column":1,"offset":36777},"end":{"line":1877,"column":38,"offset":36814},"indent":[]}}],"position":{"start":{"line":1877,"column":1,"offset":36777},"end":{"line":1877,"column":38,"offset":36814},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#updateMany","children":[{"type":"inlineCode","value":"updateMany","position":{"start":{"line":1879,"column":2,"offset":36817},"end":{"line":1879,"column":14,"offset":36829},"indent":[]}}],"position":{"start":{"line":1879,"column":1,"offset":36816},"end":{"line":1879,"column":102,"offset":36917},"indent":[]}}],"position":{"start":{"line":1879,"column":1,"offset":36816},"end":{"line":1879,"column":102,"offset":36917},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1881,"column":7,"offset":36925},"end":{"line":1881,"column":14,"offset":36932},"indent":[]}}],"position":{"start":{"line":1881,"column":1,"offset":36919},"end":{"line":1881,"column":14,"offset":36932},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1883,"column":2,"offset":36935},"end":{"line":1883,"column":8,"offset":36941},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":36934},"end":{"line":1883,"column":16,"offset":36949},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1883,"column":16,"offset":36949},"end":{"line":1883,"column":17,"offset":36950},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1883,"column":18,"offset":36951},"end":{"line":1883,"column":25,"offset":36958},"indent":[]}}],"position":{"start":{"line":1883,"column":17,"offset":36950},"end":{"line":1883,"column":34,"offset":36967},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":36934},"end":{"line":1883,"column":34,"offset":36967},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1885,"column":7,"offset":36975},"end":{"line":1885,"column":36,"offset":37004},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1885,"column":37,"offset":37005},"end":{"line":1885,"column":40,"offset":37008},"indent":[]}}],"position":{"start":{"line":1885,"column":36,"offset":37004},"end":{"line":1885,"column":91,"offset":37059},"indent":[]}}],"position":{"start":{"line":1885,"column":1,"offset":36969},"end":{"line":1885,"column":91,"offset":37059},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  updateMany_M(where: M_WhereInput, data:  M_UpdateManyMutationInput): BatchPayload!\n}\n\ninput M_UpdateManyMutationInput {\n  MSF: S\n  MEF: E\n  # not possible to batch update relations\n}\n\ntype BatchPayload {\n  count: Int!\n}","position":{"start":{"line":1887,"column":1,"offset":37061},"end":{"line":1901,"column":4,"offset":37308},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":1903,"column":1,"offset":37310},"end":{"line":1903,"column":5,"offset":37314},"indent":[]}},{"type":"inlineCode","value":"M_WhereInput","position":{"start":{"line":1903,"column":5,"offset":37314},"end":{"line":1903,"column":19,"offset":37328},"indent":[]}},{"type":"text","value":" see ","position":{"start":{"line":1903,"column":19,"offset":37328},"end":{"line":1903,"column":24,"offset":37333},"indent":[]}},{"type":"link","title":null,"url":"#batch-filtering","children":[{"type":"text","value":"batch filtering contributions","position":{"start":{"line":1903,"column":25,"offset":37334},"end":{"line":1903,"column":54,"offset":37363},"indent":[]}}],"position":{"start":{"line":1903,"column":24,"offset":37333},"end":{"line":1903,"column":73,"offset":37382},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1903,"column":73,"offset":37382},"end":{"line":1903,"column":74,"offset":37383},"indent":[]}}],"position":{"start":{"line":1903,"column":1,"offset":37310},"end":{"line":1903,"column":74,"offset":37383},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1905,"column":7,"offset":37391},"end":{"line":1905,"column":14,"offset":37398},"indent":[]}}],"position":{"start":{"line":1905,"column":1,"offset":37385},"end":{"line":1905,"column":14,"offset":37398},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation updateManyUser(where: {...}, data: { status: ACTIVE }) {\n  count\n}","position":{"start":{"line":1907,"column":1,"offset":37400},"end":{"line":1911,"column":4,"offset":37490},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"See ","position":{"start":{"line":1913,"column":1,"offset":37492},"end":{"line":1913,"column":5,"offset":37496},"indent":[]}},{"type":"link","title":null,"url":"#filtering","children":[{"type":"text","value":"filtering option","position":{"start":{"line":1913,"column":6,"offset":37497},"end":{"line":1913,"column":22,"offset":37513},"indent":[]}}],"position":{"start":{"line":1913,"column":5,"offset":37496},"end":{"line":1913,"column":35,"offset":37526},"indent":[]}},{"type":"text","value":" example. Differences are: operation semantics (update things); return type; ","position":{"start":{"line":1913,"column":35,"offset":37526},"end":{"line":1913,"column":112,"offset":37603},"indent":[]}},{"type":"inlineCode","value":"data","position":{"start":{"line":1913,"column":112,"offset":37603},"end":{"line":1913,"column":118,"offset":37609},"indent":[]}},{"type":"text","value":" arg.","position":{"start":{"line":1913,"column":118,"offset":37609},"end":{"line":1913,"column":123,"offset":37614},"indent":[]}}],"position":{"start":{"line":1913,"column":1,"offset":37492},"end":{"line":1913,"column":123,"offset":37614},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Batch Delete","position":{"start":{"line":1915,"column":6,"offset":37621},"end":{"line":1915,"column":18,"offset":37633},"indent":[]}}],"position":{"start":{"line":1915,"column":1,"offset":37616},"end":{"line":1915,"column":18,"offset":37633},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"t.crud.deleteMany<M>","position":{"start":{"line":1917,"column":1,"offset":37635},"end":{"line":1919,"column":4,"offset":37663},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to delete multiple records of the respective Prisma model at once. Clients get back a ","position":{"start":{"line":1921,"column":1,"offset":37665},"end":{"line":1921,"column":101,"offset":37765},"indent":[]}},{"type":"inlineCode","value":"BatchPayload","position":{"start":{"line":1921,"column":101,"offset":37765},"end":{"line":1921,"column":115,"offset":37779},"indent":[]}},{"type":"text","value":" object letting them know the number of affected records, but not access to the fields of affected records.","position":{"start":{"line":1921,"column":115,"offset":37779},"end":{"line":1921,"column":222,"offset":37886},"indent":[]}}],"position":{"start":{"line":1921,"column":1,"offset":37665},"end":{"line":1921,"column":222,"offset":37886},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Underlying Prisma Client Function","position":{"start":{"line":1923,"column":3,"offset":37890},"end":{"line":1923,"column":36,"offset":37923},"indent":[]}}],"position":{"start":{"line":1923,"column":1,"offset":37888},"end":{"line":1923,"column":38,"offset":37925},"indent":[]}}],"position":{"start":{"line":1923,"column":1,"offset":37888},"end":{"line":1923,"column":38,"offset":37925},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#deleteMany","children":[{"type":"inlineCode","value":"deleteMany","position":{"start":{"line":1925,"column":2,"offset":37928},"end":{"line":1925,"column":14,"offset":37940},"indent":[]}}],"position":{"start":{"line":1925,"column":1,"offset":37927},"end":{"line":1925,"column":102,"offset":38028},"indent":[]}}],"position":{"start":{"line":1925,"column":1,"offset":37927},"end":{"line":1925,"column":102,"offset":38028},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Options","position":{"start":{"line":1927,"column":7,"offset":38036},"end":{"line":1927,"column":14,"offset":38043},"indent":[]}}],"position":{"start":{"line":1927,"column":1,"offset":38030},"end":{"line":1927,"column":14,"offset":38043},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type","children":[{"type":"inlineCode","value":"type","position":{"start":{"line":1929,"column":2,"offset":38046},"end":{"line":1929,"column":8,"offset":38052},"indent":[]}}],"position":{"start":{"line":1929,"column":1,"offset":38045},"end":{"line":1929,"column":16,"offset":38060},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1929,"column":16,"offset":38060},"end":{"line":1929,"column":17,"offset":38061},"indent":[]}},{"type":"link","title":null,"url":"#alias","children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1929,"column":18,"offset":38062},"end":{"line":1929,"column":25,"offset":38069},"indent":[]}}],"position":{"start":{"line":1929,"column":17,"offset":38061},"end":{"line":1929,"column":34,"offset":38078},"indent":[]}}],"position":{"start":{"line":1929,"column":1,"offset":38045},"end":{"line":1929,"column":34,"offset":38078},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1931,"column":7,"offset":38086},"end":{"line":1931,"column":36,"offset":38115},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1931,"column":37,"offset":38116},"end":{"line":1931,"column":40,"offset":38119},"indent":[]}}],"position":{"start":{"line":1931,"column":36,"offset":38115},"end":{"line":1931,"column":91,"offset":38170},"indent":[]}}],"position":{"start":{"line":1931,"column":1,"offset":38080},"end":{"line":1931,"column":91,"offset":38170},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  deleteMany_M(where: M_WhereInput): BatchPayload!\n}\n\ntype BatchPayload {\n  count: Int!\n}","position":{"start":{"line":1933,"column":1,"offset":38172},"end":{"line":1941,"column":4,"offset":38287},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":1943,"column":1,"offset":38289},"end":{"line":1943,"column":5,"offset":38293},"indent":[]}},{"type":"inlineCode","value":"M_WhereInput","position":{"start":{"line":1943,"column":5,"offset":38293},"end":{"line":1943,"column":19,"offset":38307},"indent":[]}},{"type":"text","value":" see ","position":{"start":{"line":1943,"column":19,"offset":38307},"end":{"line":1943,"column":24,"offset":38312},"indent":[]}},{"type":"link","title":null,"url":"#batch-filtering","children":[{"type":"text","value":"filtering contribution","position":{"start":{"line":1943,"column":25,"offset":38313},"end":{"line":1943,"column":47,"offset":38335},"indent":[]}}],"position":{"start":{"line":1943,"column":24,"offset":38312},"end":{"line":1943,"column":66,"offset":38354},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1943,"column":66,"offset":38354},"end":{"line":1943,"column":67,"offset":38355},"indent":[]}}],"position":{"start":{"line":1943,"column":1,"offset":38289},"end":{"line":1943,"column":67,"offset":38355},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1945,"column":7,"offset":38363},"end":{"line":1945,"column":14,"offset":38370},"indent":[]}}],"position":{"start":{"line":1945,"column":1,"offset":38357},"end":{"line":1945,"column":14,"offset":38370},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation {\n  deleteManyUser(where: {...}) {\n    count\n  }\n}","position":{"start":{"line":1947,"column":1,"offset":38372},"end":{"line":1953,"column":4,"offset":38446},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"See ","position":{"start":{"line":1955,"column":1,"offset":38448},"end":{"line":1955,"column":5,"offset":38452},"indent":[]}},{"type":"link","title":null,"url":"#filtering","children":[{"type":"text","value":"filtering option","position":{"start":{"line":1955,"column":6,"offset":38453},"end":{"line":1955,"column":22,"offset":38469},"indent":[]}}],"position":{"start":{"line":1955,"column":5,"offset":38452},"end":{"line":1955,"column":35,"offset":38482},"indent":[]}},{"type":"text","value":" example. Differences are: operation semantics (delete things); return type.","position":{"start":{"line":1955,"column":35,"offset":38482},"end":{"line":1955,"column":111,"offset":38558},"indent":[]}}],"position":{"start":{"line":1955,"column":1,"offset":38448},"end":{"line":1955,"column":111,"offset":38558},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Options","position":{"start":{"line":1957,"column":5,"offset":38564},"end":{"line":1957,"column":12,"offset":38571},"indent":[]}}],"position":{"start":{"line":1957,"column":1,"offset":38560},"end":{"line":1957,"column":12,"offset":38571},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"alias","position":{"start":{"line":1959,"column":6,"offset":38578},"end":{"line":1959,"column":13,"offset":38585},"indent":[]}}],"position":{"start":{"line":1959,"column":1,"offset":38573},"end":{"line":1959,"column":13,"offset":38585},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"undefined | String","position":{"start":{"line":1961,"column":1,"offset":38587},"end":{"line":1963,"column":4,"offset":38613},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Applies To","position":{"start":{"line":1965,"column":3,"offset":38617},"end":{"line":1965,"column":13,"offset":38627},"indent":[]}}],"position":{"start":{"line":1965,"column":1,"offset":38615},"end":{"line":1965,"column":15,"offset":38629},"indent":[]}}],"position":{"start":{"line":1965,"column":1,"offset":38615},"end":{"line":1965,"column":15,"offset":38629},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"t.crud.<*>","position":{"start":{"line":1967,"column":1,"offset":38631},"end":{"line":1967,"column":13,"offset":38643},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1967,"column":13,"offset":38643},"end":{"line":1967,"column":14,"offset":38644},"indent":[]}},{"type":"inlineCode","value":"t.model.<* - enum, list enum>","position":{"start":{"line":1967,"column":14,"offset":38644},"end":{"line":1967,"column":45,"offset":38675},"indent":[]}}],"position":{"start":{"line":1967,"column":1,"offset":38631},"end":{"line":1967,"column":45,"offset":38675},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"About","position":{"start":{"line":1969,"column":3,"offset":38679},"end":{"line":1969,"column":8,"offset":38684},"indent":[]}}],"position":{"start":{"line":1969,"column":1,"offset":38677},"end":{"line":1969,"column":10,"offset":38686},"indent":[]}}],"position":{"start":{"line":1969,"column":1,"offset":38677},"end":{"line":1969,"column":10,"offset":38686},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":1971,"column":3,"offset":38690},"end":{"line":1971,"column":14,"offset":38701},"indent":[]}},{"type":"text","value":" (default) By default Prisma model fields project onto GraphQL object fields of the same name.","position":{"start":{"line":1971,"column":14,"offset":38701},"end":{"line":1971,"column":108,"offset":38795},"indent":[]}}],"position":{"start":{"line":1971,"column":3,"offset":38690},"end":{"line":1971,"column":108,"offset":38795},"indent":[]}}],"position":{"start":{"line":1971,"column":1,"offset":38688},"end":{"line":1971,"column":108,"offset":38795},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"string","position":{"start":{"line":1972,"column":3,"offset":38798},"end":{"line":1972,"column":11,"offset":38806},"indent":[]}},{"type":"text","value":" Change which GraphQL object field the Prisma model field projects onto.","position":{"start":{"line":1972,"column":11,"offset":38806},"end":{"line":1972,"column":83,"offset":38878},"indent":[]}}],"position":{"start":{"line":1972,"column":3,"offset":38798},"end":{"line":1972,"column":83,"offset":38878},"indent":[]}}],"position":{"start":{"line":1972,"column":1,"offset":38796},"end":{"line":1972,"column":83,"offset":38878},"indent":[]}}],"position":{"start":{"line":1971,"column":1,"offset":38688},"end":{"line":1972,"column":83,"offset":38878},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":1974,"column":7,"offset":38886},"end":{"line":1974,"column":36,"offset":38915},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":1974,"column":37,"offset":38916},"end":{"line":1974,"column":40,"offset":38919},"indent":[]}}],"position":{"start":{"line":1974,"column":36,"offset":38915},"end":{"line":1974,"column":91,"offset":38970},"indent":[]}}],"position":{"start":{"line":1974,"column":1,"offset":38880},"end":{"line":1974,"column":91,"offset":38970},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"n/a","position":{"start":{"line":1976,"column":1,"offset":38972},"end":{"line":1976,"column":4,"offset":38975},"indent":[]}}],"position":{"start":{"line":1976,"column":1,"offset":38972},"end":{"line":1976,"column":4,"offset":38975},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":1978,"column":7,"offset":38983},"end":{"line":1978,"column":14,"offset":38990},"indent":[]}}],"position":{"start":{"line":1978,"column":1,"offset":38977},"end":{"line":1978,"column":14,"offset":38990},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":1980,"column":1,"offset":38992},"end":{"line":1980,"column":30,"offset":39021},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model Post  {\n  body String\n}","position":{"start":{"line":1982,"column":1,"offset":39023},"end":{"line":1986,"column":4,"offset":39066},"indent":[1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.body({\n      alias: 'content',\n    })\n  },\n})","position":{"start":{"line":1988,"column":1,"offset":39068},"end":{"line":1997,"column":4,"offset":39189},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Post {\n  content: String!\n}","position":{"start":{"line":1999,"column":1,"offset":39191},"end":{"line":2003,"column":4,"offset":39238},"indent":[1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":2005,"column":1,"offset":39240},"end":{"line":2005,"column":7,"offset":39246},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"type","position":{"start":{"line":2007,"column":6,"offset":39253},"end":{"line":2007,"column":12,"offset":39259},"indent":[]}}],"position":{"start":{"line":2007,"column":1,"offset":39248},"end":{"line":2007,"column":12,"offset":39259},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"undefined | String","position":{"start":{"line":2009,"column":1,"offset":39261},"end":{"line":2011,"column":4,"offset":39287},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Applies To","position":{"start":{"line":2013,"column":3,"offset":39291},"end":{"line":2013,"column":13,"offset":39301},"indent":[]}}],"position":{"start":{"line":2013,"column":1,"offset":39289},"end":{"line":2013,"column":15,"offset":39303},"indent":[]}}],"position":{"start":{"line":2013,"column":1,"offset":39289},"end":{"line":2013,"column":15,"offset":39303},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"t.crud.<*>","position":{"start":{"line":2015,"column":1,"offset":39305},"end":{"line":2015,"column":13,"offset":39317},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":2015,"column":13,"offset":39317},"end":{"line":2015,"column":14,"offset":39318},"indent":[]}},{"type":"link","title":null,"url":"#relation-field","children":[{"type":"inlineCode","value":"t.model.<Relation>","position":{"start":{"line":2015,"column":15,"offset":39319},"end":{"line":2015,"column":35,"offset":39339},"indent":[]}}],"position":{"start":{"line":2015,"column":14,"offset":39318},"end":{"line":2015,"column":53,"offset":39357},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":2015,"column":53,"offset":39357},"end":{"line":2015,"column":54,"offset":39358},"indent":[]}},{"type":"link","title":null,"url":"#list-field","children":[{"type":"inlineCode","value":"t.model.<ListRelation>","position":{"start":{"line":2015,"column":55,"offset":39359},"end":{"line":2015,"column":79,"offset":39383},"indent":[]}}],"position":{"start":{"line":2015,"column":54,"offset":39358},"end":{"line":2015,"column":93,"offset":39397},"indent":[]}}],"position":{"start":{"line":2015,"column":1,"offset":39305},"end":{"line":2015,"column":93,"offset":39397},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"About","position":{"start":{"line":2017,"column":3,"offset":39401},"end":{"line":2017,"column":8,"offset":39406},"indent":[]}}],"position":{"start":{"line":2017,"column":1,"offset":39399},"end":{"line":2017,"column":10,"offset":39408},"indent":[]}}],"position":{"start":{"line":2017,"column":1,"offset":39399},"end":{"line":2017,"column":10,"offset":39408},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":2019,"column":3,"offset":39412},"end":{"line":2019,"column":14,"offset":39423},"indent":[]}},{"type":"text","value":" (default) Point Prisma field to a GraphQL object whose name matches that of the Prisma field model type.","position":{"start":{"line":2019,"column":14,"offset":39423},"end":{"line":2019,"column":119,"offset":39528},"indent":[]}}],"position":{"start":{"line":2019,"column":3,"offset":39412},"end":{"line":2019,"column":119,"offset":39528},"indent":[]}}],"position":{"start":{"line":2019,"column":1,"offset":39410},"end":{"line":2020,"column":1,"offset":39529},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"string","position":{"start":{"line":2021,"column":3,"offset":39532},"end":{"line":2021,"column":11,"offset":39540},"indent":[]}},{"type":"text","value":" Point Prisma field to the given GraphQL object. This option can become necessary when you've have done ","position":{"start":{"line":2021,"column":11,"offset":39540},"end":{"line":2021,"column":115,"offset":39644},"indent":[]}},{"type":"link","title":null,"url":"#model-object-mapping","children":[{"type":"text","value":"model-object mapping","position":{"start":{"line":2021,"column":116,"offset":39645},"end":{"line":2021,"column":136,"offset":39665},"indent":[]}}],"position":{"start":{"line":2021,"column":115,"offset":39644},"end":{"line":2021,"column":160,"offset":39689},"indent":[]}},{"type":"text","value":" and other Prisma models in your schema have relations to the name-mapped Prisma model. We are interested in developing further the model-object mapping API to automate this better (","position":{"start":{"line":2021,"column":160,"offset":39689},"end":{"line":2021,"column":342,"offset":39871},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/461","children":[{"type":"text","value":"issue","position":{"start":{"line":2021,"column":343,"offset":39872},"end":{"line":2021,"column":348,"offset":39877},"indent":[]}}],"position":{"start":{"line":2021,"column":342,"offset":39871},"end":{"line":2021,"column":405,"offset":39934},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":2021,"column":405,"offset":39934},"end":{"line":2021,"column":407,"offset":39936},"indent":[]}}],"position":{"start":{"line":2021,"column":3,"offset":39532},"end":{"line":2021,"column":407,"offset":39936},"indent":[]}}],"position":{"start":{"line":2021,"column":1,"offset":39530},"end":{"line":2021,"column":407,"offset":39936},"indent":[]}}],"position":{"start":{"line":2019,"column":1,"offset":39410},"end":{"line":2021,"column":407,"offset":39936},"indent":[1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":2023,"column":7,"offset":39944},"end":{"line":2023,"column":36,"offset":39973},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":2023,"column":37,"offset":39974},"end":{"line":2023,"column":40,"offset":39977},"indent":[]}}],"position":{"start":{"line":2023,"column":36,"offset":39973},"end":{"line":2023,"column":91,"offset":40028},"indent":[]}}],"position":{"start":{"line":2023,"column":1,"offset":39938},"end":{"line":2023,"column":91,"offset":40028},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"n/a","position":{"start":{"line":2025,"column":1,"offset":40030},"end":{"line":2025,"column":4,"offset":40033},"indent":[]}}],"position":{"start":{"line":2025,"column":1,"offset":40030},"end":{"line":2025,"column":4,"offset":40033},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":2027,"column":7,"offset":40041},"end":{"line":2027,"column":14,"offset":40048},"indent":[]}}],"position":{"start":{"line":2027,"column":1,"offset":40035},"end":{"line":2027,"column":14,"offset":40048},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":2029,"column":1,"offset":40050},"end":{"line":2029,"column":30,"offset":40079},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    String @id @default(cuid())\n  posts Post[]\n}\n\nmodel Post {\n  id String @id @default(cuid())\n}","position":{"start":{"line":2031,"column":1,"offset":40081},"end":{"line":2040,"column":4,"offset":40209},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'Article',\n  definition(t) {\n    t.model('Post').id()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.posts({\n      alias: 'articles',\n      type: 'Article',\n    })\n  },\n})","position":{"start":{"line":2042,"column":1,"offset":40211},"end":{"line":2059,"column":4,"offset":40448},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Article {\n  title: String!\n}\n\ntype User {\n  articles: [Article]\n}","position":{"start":{"line":2061,"column":1,"offset":40450},"end":{"line":2069,"column":4,"offset":40535},"indent":[1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":2071,"column":1,"offset":40537},"end":{"line":2071,"column":7,"offset":40543},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"ordering","position":{"start":{"line":2073,"column":6,"offset":40550},"end":{"line":2073,"column":16,"offset":40560},"indent":[]}}],"position":{"start":{"line":2073,"column":1,"offset":40545},"end":{"line":2073,"column":16,"offset":40560},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"undefined | true | false | ModelWhitelist","position":{"start":{"line":2075,"column":1,"offset":40562},"end":{"line":2077,"column":4,"offset":40611},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Applies To","position":{"start":{"line":2079,"column":3,"offset":40615},"end":{"line":2079,"column":13,"offset":40625},"indent":[]}}],"position":{"start":{"line":2079,"column":1,"offset":40613},"end":{"line":2079,"column":15,"offset":40627},"indent":[]}}],"position":{"start":{"line":2079,"column":1,"offset":40613},"end":{"line":2079,"column":15,"offset":40627},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#batch-read","children":[{"type":"inlineCode","value":"t.crud.<BatchRead>","position":{"start":{"line":2081,"column":2,"offset":40630},"end":{"line":2081,"column":22,"offset":40650},"indent":[]}}],"position":{"start":{"line":2081,"column":1,"offset":40629},"end":{"line":2081,"column":36,"offset":40664},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":2081,"column":36,"offset":40664},"end":{"line":2081,"column":37,"offset":40665},"indent":[]}},{"type":"link","title":null,"url":"#list-relation","children":[{"type":"inlineCode","value":"t.model.<ListRelation>","position":{"start":{"line":2081,"column":38,"offset":40666},"end":{"line":2081,"column":62,"offset":40690},"indent":[]}}],"position":{"start":{"line":2081,"column":37,"offset":40665},"end":{"line":2081,"column":79,"offset":40707},"indent":[]}}],"position":{"start":{"line":2081,"column":1,"offset":40629},"end":{"line":2081,"column":79,"offset":40707},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"About","position":{"start":{"line":2083,"column":3,"offset":40711},"end":{"line":2083,"column":8,"offset":40716},"indent":[]}}],"position":{"start":{"line":2083,"column":1,"offset":40709},"end":{"line":2083,"column":10,"offset":40718},"indent":[]}}],"position":{"start":{"line":2083,"column":1,"offset":40709},"end":{"line":2083,"column":10,"offset":40718},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to order the records in a list field. Records can be ordered by their projected scalar fields in ascending or descending order. Ordering by fields on relations is not currently possible (","position":{"start":{"line":2085,"column":1,"offset":40720},"end":{"line":2085,"column":202,"offset":40921},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma-client-js/issues/249","children":[{"type":"text","value":"issue","position":{"start":{"line":2085,"column":203,"offset":40922},"end":{"line":2085,"column":208,"offset":40927},"indent":[]}}],"position":{"start":{"line":2085,"column":202,"offset":40921},"end":{"line":2085,"column":264,"offset":40983},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":2085,"column":264,"offset":40983},"end":{"line":2085,"column":266,"offset":40985},"indent":[]}}],"position":{"start":{"line":2085,"column":1,"offset":40720},"end":{"line":2085,"column":266,"offset":40985},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":2087,"column":3,"offset":40989},"end":{"line":2087,"column":14,"offset":41000},"indent":[]}},{"type":"text","value":" (default) Like ","position":{"start":{"line":2087,"column":14,"offset":41000},"end":{"line":2087,"column":30,"offset":41016},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":2087,"column":30,"offset":41016},"end":{"line":2087,"column":37,"offset":41023},"indent":[]}}],"position":{"start":{"line":2087,"column":3,"offset":40989},"end":{"line":2087,"column":37,"offset":41023},"indent":[]}}],"position":{"start":{"line":2087,"column":1,"offset":40987},"end":{"line":2087,"column":37,"offset":41023},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"false","position":{"start":{"line":2088,"column":3,"offset":41026},"end":{"line":2088,"column":10,"offset":41033},"indent":[]}},{"type":"text","value":" Disable ordering","position":{"start":{"line":2088,"column":10,"offset":41033},"end":{"line":2088,"column":27,"offset":41050},"indent":[]}}],"position":{"start":{"line":2088,"column":3,"offset":41026},"end":{"line":2088,"column":27,"offset":41050},"indent":[]}}],"position":{"start":{"line":2088,"column":1,"offset":41024},"end":{"line":2088,"column":27,"offset":41050},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"true","position":{"start":{"line":2089,"column":3,"offset":41053},"end":{"line":2089,"column":9,"offset":41059},"indent":[]}},{"type":"text","value":" Enable ordering by all scalar fields","position":{"start":{"line":2089,"column":9,"offset":41059},"end":{"line":2089,"column":46,"offset":41096},"indent":[]}}],"position":{"start":{"line":2089,"column":3,"offset":41053},"end":{"line":2089,"column":46,"offset":41096},"indent":[]}}],"position":{"start":{"line":2089,"column":1,"offset":41051},"end":{"line":2089,"column":46,"offset":41096},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ModelWhitelist","position":{"start":{"line":2090,"column":3,"offset":41099},"end":{"line":2090,"column":19,"offset":41115},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":2090,"column":19,"offset":41115},"end":{"line":2090,"column":21,"offset":41117},"indent":[]}},{"type":"inlineCode","value":"Record<string, true>","position":{"start":{"line":2090,"column":21,"offset":41117},"end":{"line":2090,"column":43,"offset":41139},"indent":[]}},{"type":"text","value":") Enable ordering by just Model scalar fields appearing in the given whitelist.","position":{"start":{"line":2090,"column":43,"offset":41139},"end":{"line":2090,"column":122,"offset":41218},"indent":[]}}],"position":{"start":{"line":2090,"column":3,"offset":41099},"end":{"line":2090,"column":122,"offset":41218},"indent":[]}}],"position":{"start":{"line":2090,"column":1,"offset":41097},"end":{"line":2090,"column":122,"offset":41218},"indent":[]}}],"position":{"start":{"line":2087,"column":1,"offset":40987},"end":{"line":2090,"column":122,"offset":41218},"indent":[1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":2092,"column":7,"offset":41226},"end":{"line":2092,"column":36,"offset":41255},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":2092,"column":37,"offset":41256},"end":{"line":2092,"column":40,"offset":41259},"indent":[]}}],"position":{"start":{"line":2092,"column":36,"offset":41255},"end":{"line":2092,"column":91,"offset":41310},"indent":[]}}],"position":{"start":{"line":2092,"column":1,"offset":41220},"end":{"line":2092,"column":91,"offset":41310},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"# t.crud.<BatchRead>\nM(orderBy: M_OrderByInput)\n\n# t.model.<ListRelation>\ntype M {\n  MF(orderBy: M_OrderByInput)\n}\n\ninput M_OrderByInput {\n  MSF: OrderByArg\n  # It is not possible to order by relations\n}\n\nenum OrderByArg {\n  asc\n  desc\n}","position":{"start":{"line":2094,"column":1,"offset":41312},"end":{"line":2112,"column":4,"offset":41564},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":2114,"column":7,"offset":41572},"end":{"line":2114,"column":14,"offset":41579},"indent":[]}}],"position":{"start":{"line":2114,"column":1,"offset":41566},"end":{"line":2114,"column":14,"offset":41579},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":2116,"column":1,"offset":41581},"end":{"line":2116,"column":30,"offset":41610},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    Int @id\n  name  String\n  posts Post[]\n}\n\nmodel Post {\n  id    Int @id\n  title String\n  body  String\n}","position":{"start":{"line":2118,"column":1,"offset":41612},"end":{"line":2130,"column":4,"offset":41748},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.body()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.name()\n    t.model.posts({\n      ordering: { title: true },\n    })\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.crud.user()\n    t.crud.users({\n      ordering: true,\n    })\n  },\n})","position":{"start":{"line":2132,"column":1,"offset":41750},"end":{"line":2161,"column":4,"offset":42148},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n  users(\n    orderBy: UserOrderByInput\n  ): [User!]!\n}\n\ntype Post {\n  body: String!\n  id: Int!\n  title: String!\n}\n\ntype User {\n  id: Int!\n  name: String!\n  posts(\n    orderBy: UserPostsOrderByInput\n  ): [Post!]!\n}\n\ninput UserOrderByInput {\n  id: OrderByArg\n  name: OrderByArg\n}\n\ninput UserPostsOrderByInput {\n  title: OrderByArg\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n}\n\nenum OrderByArg {\n  asc\n  desc\n}","position":{"start":{"line":2163,"column":1,"offset":42150},"end":{"line":2204,"column":4,"offset":42635},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"query entrypointOrdering {\n  users(orderBy: { name: asc }) {\n    id\n    name\n  }\n}\n\nquery relationOrdering {\n  user(where: { id: 1643 }) {\n    posts(\n      orderBy: { title: dsc }\n    ) {\n      title\n      body\n    }\n  }\n}","position":{"start":{"line":2206,"column":1,"offset":42637},"end":{"line":2224,"column":4,"offset":42874},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":2226,"column":1,"offset":42876},"end":{"line":2226,"column":7,"offset":42882},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"pagination","position":{"start":{"line":2228,"column":6,"offset":42889},"end":{"line":2228,"column":18,"offset":42901},"indent":[]}}],"position":{"start":{"line":2228,"column":1,"offset":42884},"end":{"line":2228,"column":18,"offset":42901},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"undefined | true | false","position":{"start":{"line":2230,"column":1,"offset":42903},"end":{"line":2232,"column":4,"offset":42935},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Applies To","position":{"start":{"line":2234,"column":3,"offset":42939},"end":{"line":2234,"column":13,"offset":42949},"indent":[]}}],"position":{"start":{"line":2234,"column":1,"offset":42937},"end":{"line":2234,"column":15,"offset":42951},"indent":[]}}],"position":{"start":{"line":2234,"column":1,"offset":42937},"end":{"line":2234,"column":15,"offset":42951},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#batch-read","children":[{"type":"inlineCode","value":"t.crud.<BatchRead>","position":{"start":{"line":2236,"column":2,"offset":42954},"end":{"line":2236,"column":22,"offset":42974},"indent":[]}}],"position":{"start":{"line":2236,"column":1,"offset":42953},"end":{"line":2236,"column":36,"offset":42988},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":2236,"column":36,"offset":42988},"end":{"line":2236,"column":37,"offset":42989},"indent":[]}},{"type":"link","title":null,"url":"#list-relation","children":[{"type":"inlineCode","value":"t.model.<ListRelation>","position":{"start":{"line":2236,"column":38,"offset":42990},"end":{"line":2236,"column":62,"offset":43014},"indent":[]}}],"position":{"start":{"line":2236,"column":37,"offset":42989},"end":{"line":2236,"column":79,"offset":43031},"indent":[]}}],"position":{"start":{"line":2236,"column":1,"offset":42953},"end":{"line":2236,"column":79,"offset":43031},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"About","position":{"start":{"line":2238,"column":3,"offset":43035},"end":{"line":2238,"column":8,"offset":43040},"indent":[]}}],"position":{"start":{"line":2238,"column":1,"offset":43033},"end":{"line":2238,"column":10,"offset":43042},"indent":[]}}],"position":{"start":{"line":2238,"column":1,"offset":43033},"end":{"line":2238,"column":10,"offset":43042},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":2240,"column":3,"offset":43046},"end":{"line":2240,"column":14,"offset":43057},"indent":[]}},{"type":"text","value":" (default) Like ","position":{"start":{"line":2240,"column":14,"offset":43057},"end":{"line":2240,"column":30,"offset":43073},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":2240,"column":30,"offset":43073},"end":{"line":2240,"column":36,"offset":43079},"indent":[]}}],"position":{"start":{"line":2240,"column":3,"offset":43046},"end":{"line":2240,"column":36,"offset":43079},"indent":[]}}],"position":{"start":{"line":2240,"column":1,"offset":43044},"end":{"line":2240,"column":36,"offset":43079},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"true","position":{"start":{"line":2241,"column":3,"offset":43082},"end":{"line":2241,"column":9,"offset":43088},"indent":[]}},{"type":"text","value":" Enable pagination","position":{"start":{"line":2241,"column":9,"offset":43088},"end":{"line":2241,"column":27,"offset":43106},"indent":[]}}],"position":{"start":{"line":2241,"column":3,"offset":43082},"end":{"line":2241,"column":27,"offset":43106},"indent":[]}}],"position":{"start":{"line":2241,"column":1,"offset":43080},"end":{"line":2241,"column":27,"offset":43106},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"false","position":{"start":{"line":2242,"column":3,"offset":43109},"end":{"line":2242,"column":10,"offset":43116},"indent":[]}},{"type":"text","value":" Disable pagination","position":{"start":{"line":2242,"column":10,"offset":43116},"end":{"line":2242,"column":29,"offset":43135},"indent":[]}}],"position":{"start":{"line":2242,"column":3,"offset":43109},"end":{"line":2242,"column":29,"offset":43135},"indent":[]}}],"position":{"start":{"line":2242,"column":1,"offset":43107},"end":{"line":2242,"column":29,"offset":43135},"indent":[]}}],"position":{"start":{"line":2240,"column":1,"offset":43044},"end":{"line":2242,"column":29,"offset":43135},"indent":[1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions","position":{"start":{"line":2244,"column":7,"offset":43143},"end":{"line":2244,"column":35,"offset":43171},"indent":[]}}],"position":{"start":{"line":2244,"column":1,"offset":43137},"end":{"line":2244,"column":35,"offset":43171},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"# t.crud.<BatchRead>\nMs(\n  # The starting object for the list (typically ID or other unique value).\n  after: M_WhereUniquInout\n\n  # The last object for the list (typically ID or other unique value)\n  before: M_WhereUniquInout\n\n  # How many elements, forwards from `after` otherwise head\n  first: Int\n\n  # How many elements, backwards from `before` otherwise tail\n  last: Int\n\n  # The offset\n  # If `first` used, then forwards from `after` (otherwise head)\n  # If `last` used, then backwards from `before` (otherwise tail)\n  skip: Int\n)\n\n# t.model.<ListRelation>\ntype M {\n  MRF(after: M_WhereUniquInout, before: M_WhereUniquInout, first: Int, last: Int, skip: Int)\n}\n\ninput M_WhereUniquInout {\n  MSF@unique: S\n}","position":{"start":{"line":2246,"column":1,"offset":43173},"end":{"line":2275,"column":4,"offset":43898},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":2277,"column":7,"offset":43906},"end":{"line":2277,"column":14,"offset":43913},"indent":[]}}],"position":{"start":{"line":2277,"column":1,"offset":43900},"end":{"line":2277,"column":14,"offset":43913},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":2279,"column":1,"offset":43915},"end":{"line":2279,"column":30,"offset":43944},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id    Int @id\n  posts Post[]\n  // ...\n}\n\nmodel Post {\n  id    Int @id\n  // ...\n}","position":{"start":{"line":2281,"column":1,"offset":43946},"end":{"line":2292,"column":4,"offset":44055},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"...","position":{"start":{"line":2294,"column":1,"offset":44057},"end":{"line":2296,"column":4,"offset":44075},"indent":[1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.posts({\n      pagination: true,\n    })\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.crud.users({\n      pagination: true,\n    })\n  },\n})","position":{"start":{"line":2298,"column":1,"offset":44077},"end":{"line":2315,"column":4,"offset":44295},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"query batchReadAfter {\n  users(\n    after: { id: 1234 }\n    first: 50\n  ) {\n    id\n    name\n  }\n}\n\n# or\n\nquery batchReadSkip {\n  users(skip: 50, first: 50) {\n    id\n    name\n  }\n}\n\n# or\n\nquery batchReadRelation {\n  user(where: { id: 1643 }) {\n    posts(last: 10) {\n      title\n      body\n    }\n  }\n}","position":{"start":{"line":2317,"column":1,"offset":44297},"end":{"line":2347,"column":4,"offset":44611},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":2349,"column":1,"offset":44613},"end":{"line":2349,"column":7,"offset":44619},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"filtering","position":{"start":{"line":2351,"column":6,"offset":44626},"end":{"line":2351,"column":17,"offset":44637},"indent":[]}}],"position":{"start":{"line":2351,"column":1,"offset":44621},"end":{"line":2351,"column":17,"offset":44637},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"undefined | true | false | ModelWhitelist","position":{"start":{"line":2353,"column":1,"offset":44639},"end":{"line":2355,"column":4,"offset":44688},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Applies To","position":{"start":{"line":2357,"column":3,"offset":44692},"end":{"line":2357,"column":13,"offset":44702},"indent":[]}}],"position":{"start":{"line":2357,"column":1,"offset":44690},"end":{"line":2357,"column":15,"offset":44704},"indent":[]}}],"position":{"start":{"line":2357,"column":1,"offset":44690},"end":{"line":2357,"column":15,"offset":44704},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#batch-read","children":[{"type":"inlineCode","value":"t.crud.<BatchRead>","position":{"start":{"line":2359,"column":2,"offset":44707},"end":{"line":2359,"column":22,"offset":44727},"indent":[]}}],"position":{"start":{"line":2359,"column":1,"offset":44706},"end":{"line":2359,"column":36,"offset":44741},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":2359,"column":36,"offset":44741},"end":{"line":2359,"column":37,"offset":44742},"indent":[]}},{"type":"link","title":null,"url":"#list-relation","children":[{"type":"inlineCode","value":"t.model.<ListRelation>","position":{"start":{"line":2359,"column":38,"offset":44743},"end":{"line":2359,"column":62,"offset":44767},"indent":[]}}],"position":{"start":{"line":2359,"column":37,"offset":44742},"end":{"line":2359,"column":79,"offset":44784},"indent":[]}}],"position":{"start":{"line":2359,"column":1,"offset":44706},"end":{"line":2359,"column":79,"offset":44784},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"About","position":{"start":{"line":2361,"column":3,"offset":44788},"end":{"line":2361,"column":8,"offset":44793},"indent":[]}}],"position":{"start":{"line":2361,"column":1,"offset":44786},"end":{"line":2361,"column":10,"offset":44795},"indent":[]}}],"position":{"start":{"line":2361,"column":1,"offset":44786},"end":{"line":2361,"column":10,"offset":44795},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":2363,"column":3,"offset":44799},"end":{"line":2363,"column":14,"offset":44810},"indent":[]}},{"type":"text","value":" (default) Like ","position":{"start":{"line":2363,"column":14,"offset":44810},"end":{"line":2363,"column":30,"offset":44826},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":2363,"column":30,"offset":44826},"end":{"line":2363,"column":37,"offset":44833},"indent":[]}}],"position":{"start":{"line":2363,"column":3,"offset":44799},"end":{"line":2363,"column":37,"offset":44833},"indent":[]}}],"position":{"start":{"line":2363,"column":1,"offset":44797},"end":{"line":2363,"column":37,"offset":44833},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"true","position":{"start":{"line":2364,"column":3,"offset":44836},"end":{"line":2364,"column":9,"offset":44842},"indent":[]}},{"type":"text","value":" Enable filtering for all scalar fields","position":{"start":{"line":2364,"column":9,"offset":44842},"end":{"line":2364,"column":48,"offset":44881},"indent":[]}}],"position":{"start":{"line":2364,"column":3,"offset":44836},"end":{"line":2364,"column":48,"offset":44881},"indent":[]}}],"position":{"start":{"line":2364,"column":1,"offset":44834},"end":{"line":2364,"column":48,"offset":44881},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"false","position":{"start":{"line":2365,"column":3,"offset":44884},"end":{"line":2365,"column":10,"offset":44891},"indent":[]}},{"type":"text","value":" Disable filtering","position":{"start":{"line":2365,"column":10,"offset":44891},"end":{"line":2365,"column":28,"offset":44909},"indent":[]}}],"position":{"start":{"line":2365,"column":3,"offset":44884},"end":{"line":2365,"column":28,"offset":44909},"indent":[]}}],"position":{"start":{"line":2365,"column":1,"offset":44882},"end":{"line":2365,"column":28,"offset":44909},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ModelWhitelist","position":{"start":{"line":2366,"column":3,"offset":44912},"end":{"line":2366,"column":19,"offset":44928},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":2366,"column":19,"offset":44928},"end":{"line":2366,"column":21,"offset":44930},"indent":[]}},{"type":"inlineCode","value":"Record<string, true>","position":{"start":{"line":2366,"column":21,"offset":44930},"end":{"line":2366,"column":43,"offset":44952},"indent":[]}},{"type":"text","value":") Enable ordering by just Model scalar fields appearing in the given whitelist.","position":{"start":{"line":2366,"column":43,"offset":44952},"end":{"line":2366,"column":122,"offset":45031},"indent":[]}}],"position":{"start":{"line":2366,"column":3,"offset":44912},"end":{"line":2366,"column":122,"offset":45031},"indent":[]}}],"position":{"start":{"line":2366,"column":1,"offset":44910},"end":{"line":2366,"column":122,"offset":45031},"indent":[]}}],"position":{"start":{"line":2363,"column":1,"offset":44797},"end":{"line":2366,"column":122,"offset":45031},"indent":[1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions ","position":{"start":{"line":2368,"column":7,"offset":45039},"end":{"line":2368,"column":36,"offset":45068},"indent":[]}},{"type":"link","title":"How to read this","url":"#graphql-schema-contributions","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":2368,"column":37,"offset":45069},"end":{"line":2368,"column":40,"offset":45072},"indent":[]}}],"position":{"start":{"line":2368,"column":36,"offset":45068},"end":{"line":2368,"column":91,"offset":45123},"indent":[]}}],"position":{"start":{"line":2368,"column":1,"offset":45033},"end":{"line":2368,"column":91,"offset":45123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See ","position":{"start":{"line":2370,"column":1,"offset":45125},"end":{"line":2370,"column":5,"offset":45129},"indent":[]}},{"type":"link","title":null,"url":"#batch-filtering","children":[{"type":"text","value":"batch filtering contributions","position":{"start":{"line":2370,"column":6,"offset":45130},"end":{"line":2370,"column":35,"offset":45159},"indent":[]}}],"position":{"start":{"line":2370,"column":5,"offset":45129},"end":{"line":2370,"column":54,"offset":45178},"indent":[]}}],"position":{"start":{"line":2370,"column":1,"offset":45125},"end":{"line":2370,"column":54,"offset":45178},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":2372,"column":7,"offset":45186},"end":{"line":2372,"column":14,"offset":45193},"indent":[]}}],"position":{"start":{"line":2372,"column":1,"offset":45180},"end":{"line":2372,"column":14,"offset":45193},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":2374,"column":1,"offset":45195},"end":{"line":2374,"column":30,"offset":45224},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id     String     @id @unique @default(cuid())\n  posts  Post[]\n  age    Int\n  status UserStatus\n}\n\nmodel Post {\n  id       String    @id @unique @default(cuid())\n  author   User\n  comments Comment[]\n  rating   Float\n}\n\nmodel Comment {\n  id      String     @id @unique @default(cuid())\n  author  User\n  post    Post\n  content String\n}\n\nenum UserStatus {\n  BANNED\n  ACTIVE\n}","position":{"start":{"line":2376,"column":1,"offset":45226},"end":{"line":2402,"column":4,"offset":45627},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.age()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.author()\n    t.model.rating()\n    t.model.comments()\n  },\n})\n\nschema.objectType({\n  name: 'Comment',\n  definition(t) {\n    t.model.author()\n    t.model.post()\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.crud.users({\n      filtering: true,\n    })\n    t.crud.user()\n  },\n})","position":{"start":{"line":2404,"column":1,"offset":45629},"end":{"line":2437,"column":4,"offset":46065},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Comment {\n  author: User!\n  post: Post!\n}\n\ninput CommentFilter {\n  every: CommentWhereInput\n  none: CommentWhereInput\n  some: CommentWhereInput\n}\n\ninput CommentWhereInput {\n  AND: [CommentWhereInput!]\n  author: UserWhereInput\n  content: StringFilter\n  id: StringFilter\n  NOT: [CommentWhereInput!]\n  OR: [CommentWhereInput!]\n  post: PostWhereInput\n}\n\ninput FloatFilter {\n  equals: Float\n  gt: Float\n  gte: Float\n  in: [Float!]\n  lt: Float\n  lte: Float\n  not: Float\n  notIn: [Float!]\n}\n\ninput IntFilter {\n  equals: Int\n  gt: Int\n  gte: Int\n  in: [Int!]\n  lt: Int\n  lte: Int\n  not: Int\n  notIn: [Int!]\n}\n\ntype Post {\n  author: User!\n  comments(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n  ): [Comment!]!\n  rating: Float!\n}\n\ninput PostFilter {\n  every: PostWhereInput\n  none: PostWhereInput\n  some: PostWhereInput\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  author: UserWhereInput\n  comments: CommentFilter\n  id: StringFilter\n  NOT: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  rating: FloatFilter\n}\n\ntype Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n  users(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n    where: UserWhereInput\n  ): [User!]!\n}\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ntype User {\n  age: Int!\n}\n\nenum UserStatus {\n  ACTIVE\n  BANNED\n}\n\ninput UserWhereInput {\n  age: IntFilter\n  AND: [UserWhereInput!]\n  comments: CommentFilter\n  id: StringFilter\n  NOT: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  posts: PostFilter\n  status: UserStatus\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}","position":{"start":{"line":2439,"column":1,"offset":46067},"end":{"line":2562,"column":4,"offset":47837},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"query batchReadFilter {\n  users(where: {\n    OR: [\n      { age: { gt: 30 } },\n      posts: {\n        every: {\n          rating: {\n            lte: \"0.5\"\n          }\n        },\n        none: {\n          comments: {\n            none: {\n              author: {\n                status: BANNED\n              }\n            }\n          }\n        }\n      }\n    ]\n  }) {\n    id\n    name\n  }\n}\n\nquery batchReadRelationFilter {\n  users {\n    posts(where: { rating: { gte: 0.9 }}) {\n      comments {\n        content\n      }\n    }\n  }\n}","position":{"start":{"line":2564,"column":1,"offset":47839},"end":{"line":2601,"column":4,"offset":48377},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":2603,"column":1,"offset":48379},"end":{"line":2603,"column":7,"offset":48385},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"computedInputs","position":{"start":{"line":2605,"column":6,"offset":48392},"end":{"line":2605,"column":22,"offset":48408},"indent":[]}},{"type":"text","value":" (local)","position":{"start":{"line":2605,"column":22,"offset":48408},"end":{"line":2605,"column":30,"offset":48416},"indent":[]}}],"position":{"start":{"line":2605,"column":1,"offset":48387},"end":{"line":2605,"column":30,"offset":48416},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Record<string, ({ args, ctx, info }: MutationResolverParams) => unknown>","position":{"start":{"line":2607,"column":1,"offset":48418},"end":{"line":2609,"column":4,"offset":48498},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: This is an abbreviated version of the ComputedInputs type. The most important thing to undertand each of the object's values will be a function that takes an object with \"args\", \"ctx\", and \"info\" keys that represent the runtime values of the corresponding parameters that are passed to your resolver. For the full type, see ","position":{"start":{"line":2611,"column":1,"offset":48500},"end":{"line":2611,"column":331,"offset":48830},"indent":[]}},{"type":"link","title":null,"url":"#computedinputs-type-details","children":[{"type":"text","value":"ComputedInputs Type Details","position":{"start":{"line":2611,"column":332,"offset":48831},"end":{"line":2611,"column":359,"offset":48858},"indent":[]}}],"position":{"start":{"line":2611,"column":331,"offset":48830},"end":{"line":2611,"column":390,"offset":48889},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2611,"column":390,"offset":48889},"end":{"line":2611,"column":391,"offset":48890},"indent":[]}}],"position":{"start":{"line":2611,"column":1,"offset":48500},"end":{"line":2611,"column":391,"offset":48890},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Applies To","position":{"start":{"line":2613,"column":3,"offset":48894},"end":{"line":2613,"column":13,"offset":48904},"indent":[]}}],"position":{"start":{"line":2613,"column":1,"offset":48892},"end":{"line":2613,"column":15,"offset":48906},"indent":[]}}],"position":{"start":{"line":2613,"column":1,"offset":48892},"end":{"line":2613,"column":15,"offset":48906},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#t.crud","children":[{"type":"inlineCode","value":"t.crud.<mutations>","position":{"start":{"line":2615,"column":2,"offset":48909},"end":{"line":2615,"column":22,"offset":48929},"indent":[]}}],"position":{"start":{"line":2615,"column":1,"offset":48908},"end":{"line":2615,"column":32,"offset":48939},"indent":[]}}],"position":{"start":{"line":2615,"column":1,"offset":48908},"end":{"line":2615,"column":32,"offset":48939},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"About","position":{"start":{"line":2617,"column":3,"offset":48943},"end":{"line":2617,"column":8,"offset":48948},"indent":[]}}],"position":{"start":{"line":2617,"column":1,"offset":48941},"end":{"line":2617,"column":10,"offset":48950},"indent":[]}}],"position":{"start":{"line":2617,"column":1,"offset":48941},"end":{"line":2617,"column":10,"offset":48950},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to omit fields from one mutation's corresponding input type and infer the value of those fields from the resolver's params (args, context, info) at runtime when determining what to pass to Prisma Client.","position":{"start":{"line":2619,"column":1,"offset":48952},"end":{"line":2619,"column":218,"offset":49169},"indent":[]}}],"position":{"start":{"line":2619,"column":1,"offset":48952},"end":{"line":2619,"column":218,"offset":49169},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ComputedInputs","position":{"start":{"line":2621,"column":3,"offset":49173},"end":{"line":2621,"column":19,"offset":49189},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":2621,"column":19,"offset":49189},"end":{"line":2621,"column":21,"offset":49191},"indent":[]}},{"type":"inlineCode","value":"Record<string, ({ args, ctx, info }: MutationResolverParams) => unknown>","position":{"start":{"line":2621,"column":21,"offset":49191},"end":{"line":2621,"column":95,"offset":49265},"indent":[]}},{"type":"text","value":") ","position":{"start":{"line":2621,"column":95,"offset":49265},"end":{"line":2621,"column":97,"offset":49267},"indent":[]}},{"type":"link","title":null,"url":"#computedinputs-type-details","children":[{"type":"text","value":"(full type here)","position":{"start":{"line":2621,"column":98,"offset":49268},"end":{"line":2621,"column":114,"offset":49284},"indent":[]}}],"position":{"start":{"line":2621,"column":97,"offset":49267},"end":{"line":2621,"column":145,"offset":49315},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2621,"column":145,"offset":49315},"end":{"line":2621,"column":146,"offset":49316},"indent":[]}}],"position":{"start":{"line":2621,"column":3,"offset":49173},"end":{"line":2621,"column":146,"offset":49316},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys in the ComputedInputs object will be omitted from the mutation's corresponding input type. When resolving the mutation at runtime, each omitted key will be passed to Prisma Client based on the return value of that key's corresponding function in the ComputedInputs object when passed that resolver's parameters at runtime.","position":{"start":{"line":2623,"column":3,"offset":49320},"end":{"line":2623,"column":330,"offset":49647},"indent":[]}}],"position":{"start":{"line":2623,"column":3,"offset":49320},"end":{"line":2623,"column":330,"offset":49647},"indent":[]}}],"position":{"start":{"line":2621,"column":1,"offset":49171},"end":{"line":2623,"column":330,"offset":49647},"indent":[1,1]}}],"position":{"start":{"line":2621,"column":1,"offset":49171},"end":{"line":2623,"column":330,"offset":49647},"indent":[1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions","position":{"start":{"line":2625,"column":7,"offset":49655},"end":{"line":2625,"column":35,"offset":49683},"indent":[]}}],"position":{"start":{"line":2625,"column":1,"offset":49649},"end":{"line":2625,"column":35,"offset":49683},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The mutation's input type fields with a name that is in the ComputedInputs object are omitted from the GraphQL schema. This modifies one existing input type but does not add new types or remove existing types.","position":{"start":{"line":2627,"column":1,"offset":49685},"end":{"line":2627,"column":210,"offset":49894},"indent":[]}}],"position":{"start":{"line":2627,"column":1,"offset":49685},"end":{"line":2627,"column":210,"offset":49894},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":2629,"column":7,"offset":49902},"end":{"line":2629,"column":14,"offset":49909},"indent":[]}}],"position":{"start":{"line":2629,"column":1,"offset":49896},"end":{"line":2629,"column":14,"offset":49909},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":2631,"column":1,"offset":49911},"end":{"line":2631,"column":30,"offset":49940},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id  Int @id\n  name String\n  createdWithBrowser String\n}","position":{"start":{"line":2633,"column":1,"offset":49942},"end":{"line":2639,"column":4,"offset":50026},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t: any) {\n    t.crud.user()\n  },\n})\nschema.mutationType({\n  definition(t: any) {\n    t.crud.createOneUser({\n      computedInputs: {\n        createdWithBrowser: ({\n          args,\n          ctx,\n          info,\n        }) => ctx.browser,\n      },\n    })\n  },\n})\nschema.objectType({\n  name: 'User',\n  definition: (t: any) => {\n    t.model.id()\n    t.model.name()\n    t.model.createdWithBrowser()\n  },\n})","position":{"start":{"line":2641,"column":1,"offset":50028},"end":{"line":2668,"column":4,"offset":50471},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Mutation {\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n}\n\ntype Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype User {\n  id: Int!\n  name: String!\n  createdWithBrowser: String!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n}","position":{"start":{"line":2670,"column":1,"offset":50473},"end":{"line":2696,"column":4,"offset":50784},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation createOneUser {\n  createOneUser({data: {name: \"Benedict\"}}) {\n    id\n    name\n    createdWithBrowser\n  }\n}","position":{"start":{"line":2698,"column":1,"offset":50786},"end":{"line":2706,"column":4,"offset":50916},"indent":[1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":2708,"column":1,"offset":50918},"end":{"line":2708,"column":7,"offset":50924},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"computedInputs","position":{"start":{"line":2710,"column":6,"offset":50931},"end":{"line":2710,"column":22,"offset":50947},"indent":[]}},{"type":"text","value":" (global)","position":{"start":{"line":2710,"column":22,"offset":50947},"end":{"line":2710,"column":31,"offset":50956},"indent":[]}}],"position":{"start":{"line":2710,"column":1,"offset":50926},"end":{"line":2710,"column":31,"offset":50956},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Record<string, ({ args, ctx, info}: MutationResolverParams) => any>","position":{"start":{"line":2712,"column":1,"offset":50958},"end":{"line":2714,"column":4,"offset":51033},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: This is an abbreviated version of the ComputedInputs type. The most important thing to undertand each of the object's values will be a function that takes an object with \"args\", \"ctx\", and \"info\" keys that represent the runtime values of the corresponding parameters that are passed to your resolver. For the full type, see ","position":{"start":{"line":2716,"column":1,"offset":51035},"end":{"line":2716,"column":331,"offset":51365},"indent":[]}},{"type":"link","title":null,"url":"#computedinputs-type-details","children":[{"type":"text","value":"ComputedInputs Type Details","position":{"start":{"line":2716,"column":332,"offset":51366},"end":{"line":2716,"column":359,"offset":51393},"indent":[]}}],"position":{"start":{"line":2716,"column":331,"offset":51365},"end":{"line":2716,"column":390,"offset":51424},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2716,"column":390,"offset":51424},"end":{"line":2716,"column":391,"offset":51425},"indent":[]}}],"position":{"start":{"line":2716,"column":1,"offset":51035},"end":{"line":2716,"column":391,"offset":51425},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Applies To","position":{"start":{"line":2718,"column":3,"offset":51429},"end":{"line":2718,"column":13,"offset":51439},"indent":[]}}],"position":{"start":{"line":2718,"column":1,"offset":51427},"end":{"line":2718,"column":15,"offset":51441},"indent":[]}}],"position":{"start":{"line":2718,"column":1,"offset":51427},"end":{"line":2718,"column":15,"offset":51441},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#Example","children":[{"type":"inlineCode","value":"nexusPrismaPlugin()","position":{"start":{"line":2720,"column":2,"offset":51444},"end":{"line":2720,"column":23,"offset":51465},"indent":[]}}],"position":{"start":{"line":2720,"column":1,"offset":51443},"end":{"line":2720,"column":34,"offset":51476},"indent":[]}}],"position":{"start":{"line":2720,"column":1,"offset":51443},"end":{"line":2720,"column":34,"offset":51476},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"About","position":{"start":{"line":2722,"column":3,"offset":51480},"end":{"line":2722,"column":8,"offset":51485},"indent":[]}}],"position":{"start":{"line":2722,"column":1,"offset":51478},"end":{"line":2722,"column":10,"offset":51487},"indent":[]}}],"position":{"start":{"line":2722,"column":1,"offset":51478},"end":{"line":2722,"column":10,"offset":51487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Allow clients to omit fields with a given name across all of their GraphQL schema's inputs and infer the value of those fields from context when determining what to pass to Prisma Client","position":{"start":{"line":2724,"column":1,"offset":51489},"end":{"line":2724,"column":187,"offset":51675},"indent":[]}}],"position":{"start":{"line":2724,"column":1,"offset":51489},"end":{"line":2724,"column":187,"offset":51675},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ComputedInputs","position":{"start":{"line":2726,"column":3,"offset":51679},"end":{"line":2726,"column":19,"offset":51695},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":2726,"column":19,"offset":51695},"end":{"line":2726,"column":21,"offset":51697},"indent":[]}},{"type":"inlineCode","value":"Record<string, ({ args, ctx, info }: MutationResolverParams) => any>","position":{"start":{"line":2726,"column":21,"offset":51697},"end":{"line":2726,"column":91,"offset":51767},"indent":[]}},{"type":"text","value":") ","position":{"start":{"line":2726,"column":91,"offset":51767},"end":{"line":2726,"column":93,"offset":51769},"indent":[]}},{"type":"link","title":null,"url":"#computedinputs-type-details","children":[{"type":"text","value":"(full type here)","position":{"start":{"line":2726,"column":94,"offset":51770},"end":{"line":2726,"column":110,"offset":51786},"indent":[]}}],"position":{"start":{"line":2726,"column":93,"offset":51769},"end":{"line":2726,"column":141,"offset":51817},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2726,"column":141,"offset":51817},"end":{"line":2726,"column":142,"offset":51818},"indent":[]}}],"position":{"start":{"line":2726,"column":3,"offset":51679},"end":{"line":2726,"column":142,"offset":51818},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys in the ComputedInputs object will be omitted from all input types. When resolving any mutation at runtime, that mutation's input type will be recursively searched for the omitted keys. Any time one of those keys would have appeared anywhere in the mutation's input type, a value will be passed to Prisma Client based on the return value of that key's corresponding function in the ComputedInputs object when passed the resolver's parameters at runtime.","position":{"start":{"line":2728,"column":3,"offset":51822},"end":{"line":2728,"column":460,"offset":52279},"indent":[]}}],"position":{"start":{"line":2728,"column":3,"offset":51822},"end":{"line":2728,"column":460,"offset":52279},"indent":[]}}],"position":{"start":{"line":2726,"column":1,"offset":51677},"end":{"line":2728,"column":460,"offset":52279},"indent":[1,1]}}],"position":{"start":{"line":2726,"column":1,"offset":51677},"end":{"line":2728,"column":460,"offset":52279},"indent":[1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"GraphQL Schema Contributions","position":{"start":{"line":2730,"column":7,"offset":52287},"end":{"line":2730,"column":35,"offset":52315},"indent":[]}}],"position":{"start":{"line":2730,"column":1,"offset":52281},"end":{"line":2730,"column":35,"offset":52315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All input type fields with a name that is in the ComputedInputs object are omitted from the GraphQL schema. This modifies existing input types but does not add new types or remove existing types.","position":{"start":{"line":2732,"column":1,"offset":52317},"end":{"line":2732,"column":196,"offset":52512},"indent":[]}}],"position":{"start":{"line":2732,"column":1,"offset":52317},"end":{"line":2732,"column":196,"offset":52512},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Example","position":{"start":{"line":2734,"column":7,"offset":52520},"end":{"line":2734,"column":14,"offset":52527},"indent":[]}}],"position":{"start":{"line":2734,"column":1,"offset":52514},"end":{"line":2734,"column":14,"offset":52527},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":2736,"column":1,"offset":52529},"end":{"line":2736,"column":30,"offset":52558},"indent":[]}},{"type":"code","lang":"prisma","meta":null,"value":"model User {\n  id  Int @id\n  name String\n  nested Nested[]\n  createdWithBrowser String\n}\n\nmodel Nested {\n  id Int @id\n  name String\n  createdWithBrowser String\n}","position":{"start":{"line":2738,"column":1,"offset":52560},"end":{"line":2751,"column":4,"offset":52735},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t: any) {\n    t.crud.user()\n  },\n})\nschema.mutationType({\n  definition(t: any) {\n    t.crud.createOneUser()\n    t.crud.createOneNested()\n  },\n})\nschema.objectType({\n  name: 'User',\n  definition: (t: any) => {\n    t.model.id()\n    t.model.name()\n    t.model.nested()\n    t.model.createdWithBrowser()\n  },\n})\nschema.objectType({\n  name: 'Nested',\n  definition: (t: any) => {\n    t.model.id()\n    t.model.createdWithBrowser()\n    t.model.name()\n  },\n})\n\nnexusPrismaPlugin({\n  /*\n  Remove fields named \"createdWithBrowser\" from all mutation input types. When resolving\n  a request whose data contains any of these types, the value is inferred from the resvoler's \n  params based on the function we defined below and passed to Prisma Client, even if it's nested.\n  This example assumes a Prisma Client context containing a \"browser\" key that maps to a string\n  representing the browser from which the request was made.\n  */\n  computedInputs: {\n    createdWithBrowser: ({\n      args,\n      ctx,\n      info,\n    }) => ctx.browser,\n  },\n})","position":{"start":{"line":2753,"column":1,"offset":52737},"end":{"line":2799,"column":4,"offset":53810},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Mutation {\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n  createOneNested(\n    data: NestedCreateInput!\n  ): Nested!\n}\n\ntype Nested {\n  id: Int!\n  createdWithBrowser: String!\n  name: String!\n}\n\ninput NestedCreateInput {\n  name: String!\n  user: UserCreateOneWithoutUserInput\n}\n\ninput NestedCreateManyWithoutNestedInput {\n  create: [NestedCreateWithoutUserInput!]\n  connect: [NestedWhereUniqueInput!]\n}\n\ninput NestedCreateWithoutUserInput {\n  name: String!\n}\n\ninput NestedWhereUniqueInput {\n  id: Int\n}\n\ntype Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype User {\n  id: Int!\n  name: String!\n  nested(\n    skip: Int\n    after: Int\n    before: Int\n    first: Int\n    last: Int\n  ): [Nested!]!\n  createdWithBrowser: String!\n}\n\ninput UserCreateInput {\n  name: String!\n  nested: NestedCreateManyWithoutNestedInput\n}\n\ninput UserCreateOneWithoutUserInput {\n  create: UserCreateWithoutNestedInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutNestedInput {\n  name: String!\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n}","position":{"start":{"line":2801,"column":1,"offset":53812},"end":{"line":2871,"column":4,"offset":54879},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation createOneUser {\n  createOneUser({data: {name: \"Benedict\", nested: {name: \"Moony\"}}) {\n    id\n    name\n    createdWithBrowser\n    nested {\n      id\n      name\n      createdWithBrowser\n    }\n  }\n}\n\nmutation createOneNested {\n  createOneNested({data: {name: \"Moony\", user: {connect: {where: {id: 1}}}}}) {\n    id\n    name\n    createdWithBrowser\n  }\n}","position":{"start":{"line":2873,"column":1,"offset":54881},"end":{"line":2894,"column":4,"offset":55252},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":2896,"column":1,"offset":55254},"end":{"line":2896,"column":7,"offset":55260},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If ","position":{"start":{"line":2898,"column":1,"offset":55262},"end":{"line":2898,"column":4,"offset":55265},"indent":[]}},{"type":"inlineCode","value":"{user: {connect: {where: {id: 1}}}}","position":{"start":{"line":2898,"column":4,"offset":55265},"end":{"line":2898,"column":41,"offset":55302},"indent":[]}},{"type":"text","value":" looks familiar, global computedInputs can also be used to determine the user making a request and automatically populate mutations affecting a single user accordingly. For example, assuming Prisma Client' context includes a \"userId\" key, adding a user key to global computedInputs can simplify the \"createOneNested\" mutation from the previous example:","position":{"start":{"line":2898,"column":41,"offset":55302},"end":{"line":2898,"column":393,"offset":55654},"indent":[]}}],"position":{"start":{"line":2898,"column":1,"offset":55262},"end":{"line":2898,"column":393,"offset":55654},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"nexusPrismaPlugin({\n  ...other config...\n  computedInputs: {\n    createdWithBrowser: ({ctx}) => ctx.browser,\n    user: ({ctx}) => ({ connect: { where: { id: ctx.userId } } }),\n  },\n})","position":{"start":{"line":2900,"column":1,"offset":55656},"end":{"line":2908,"column":4,"offset":55849},"indent":[1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"mutation createOneNested {\n  createOneNested({data: {name: \"Moony\"}}) {\n    id\n    name\n    createdWithBrowser\n  }\n}","position":{"start":{"line":2910,"column":1,"offset":55851},"end":{"line":2918,"column":4,"offset":55982},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"ComputedInputs","position":{"start":{"line":2920,"column":6,"offset":55989},"end":{"line":2920,"column":22,"offset":56005},"indent":[]}},{"type":"text","value":" Type Details","position":{"start":{"line":2920,"column":22,"offset":56005},"end":{"line":2920,"column":35,"offset":56018},"indent":[]}}],"position":{"start":{"line":2920,"column":1,"offset":55984},"end":{"line":2920,"column":35,"offset":56018},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"/**\n *  Represents arguments required by Prisma Client that will\n *  be derived from a request's input (root, args, and context)\n *  and omitted from the GraphQL API. The object itself maps the\n *  names of these args to a function that takes an object representing\n *  the request's input and returns the value to pass to the Prisma Client\n *  arg of the same name.\n */\nexport type LocalComputedInputs<\n  MethodName extends MutationMethodName\n> = Record<\n  string,\n  (\n    params: LocalMutationResolverParams<\n      MethodName\n    >\n  ) => unknown\n>\n\nexport type GlobalComputedInputs = Record<\n  string,\n  (\n    params: GlobalMutationResolverParams\n  ) => unknown\n>\n\ntype BaseMutationResolverParams = {\n  info: GraphQLResolveInfo\n  ctx: Context\n}\n\nexport type GlobalMutationResolverParams = BaseMutationResolverParams & {\n  args: Record<string, any> & {\n    data: unknown\n  }\n}\n\nexport type LocalMutationResolverParams<\n  MethodName extends MutationMethodName\n> = BaseMutationResolverParams & {\n  args: core.GetGen<\n    'argTypes'\n  >['Mutation'][MethodName]\n}\n\nexport type MutationMethodName = keyof core.GetGen<\n  'argTypes'\n>['Mutation']\n\nexport type Context = core.GetGen<\n  'context'\n>","position":{"start":{"line":2922,"column":1,"offset":56020},"end":{"line":2975,"column":4,"offset":57221},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"GraphQL Schema Contributions","position":{"start":{"line":2977,"column":5,"offset":57227},"end":{"line":2977,"column":33,"offset":57255},"indent":[]}}],"position":{"start":{"line":2977,"column":1,"offset":57223},"end":{"line":2977,"column":33,"offset":57255},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"How to Read","position":{"start":{"line":2979,"column":6,"offset":57262},"end":{"line":2979,"column":17,"offset":57273},"indent":[]}}],"position":{"start":{"line":2979,"column":1,"offset":57257},"end":{"line":2979,"column":17,"offset":57273},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"M = model   F = field   L = list   S = scalar   R = relation   E = enum   V = value","position":{"start":{"line":2981,"column":1,"offset":57275},"end":{"line":2983,"column":4,"offset":57366},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Batch Filtering","position":{"start":{"line":2985,"column":6,"offset":57373},"end":{"line":2985,"column":21,"offset":57388},"indent":[]}}],"position":{"start":{"line":2985,"column":1,"offset":57368},"end":{"line":2985,"column":21,"offset":57388},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Sources","position":{"start":{"line":2987,"column":3,"offset":57392},"end":{"line":2987,"column":10,"offset":57399},"indent":[]}}],"position":{"start":{"line":2987,"column":1,"offset":57390},"end":{"line":2987,"column":12,"offset":57401},"indent":[]}}],"position":{"start":{"line":2987,"column":1,"offset":57390},"end":{"line":2987,"column":12,"offset":57401},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"query {\n  # When filtering option is enabled\n  Ms(where: M_WhereInput, ...): [M!]!\n}\n\nmutation {\n  updateMany_M(where: M_WhereInput, ...) BatchPayload!\n  deleteMany_M(where: M_WhereInput): BatchPayload!\n}\n\ntype M {\n  # When filtering option is enabled\n  MRF: RM(where: RM_WhereInput): [RM!]!\n}\n\n# Nested InputObjects from t.crud.update<M>\n\n# Nested InputObjects from t.crud.upsert<M>","position":{"start":{"line":2989,"column":1,"offset":57403},"end":{"line":3008,"column":4,"offset":57801},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Where","position":{"start":{"line":3010,"column":3,"offset":57805},"end":{"line":3010,"column":8,"offset":57810},"indent":[]}}],"position":{"start":{"line":3010,"column":1,"offset":57803},"end":{"line":3010,"column":10,"offset":57812},"indent":[]}}],"position":{"start":{"line":3010,"column":1,"offset":57803},"end":{"line":3010,"column":10,"offset":57812},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"input M_WhereInput {\n  AND: [M_WhereInput!]\n  NOT: [M_WhereInput!]\n  OR: [M_WhereInput!]\n  MSF: S_Filter\n  MRF: RM_Filter\n}\n\ninput RM_Filter {\n  every: RM_WhereInput # recurse -> M_WhereInput\n  none: RM_WhereInput # recurse -> M_WhereInput\n  some: RM_WhereInput # recurse -> M_WhereInput\n}\n\n# This type shows up in the context of t.crud.update<M> and t.crud.upsert<M>\n\ninput RM_ScalarWhereInput {\n  AND: [RM_ScalarWhereInput!]\n  NOT: [RM_ScalarWhereInput!]\n  OR: [RM_ScalarWhereInput!]\n  RMSF: S_Filter\n}","position":{"start":{"line":3012,"column":1,"offset":57814},"end":{"line":3035,"column":4,"offset":58333},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Scalar Filters","position":{"start":{"line":3037,"column":3,"offset":58337},"end":{"line":3037,"column":17,"offset":58351},"indent":[]}}],"position":{"start":{"line":3037,"column":1,"offset":58335},"end":{"line":3037,"column":19,"offset":58353},"indent":[]}}],"position":{"start":{"line":3037,"column":1,"offset":58335},"end":{"line":3037,"column":19,"offset":58353},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"ID","position":{"start":{"line":3039,"column":1,"offset":58355},"end":{"line":3039,"column":5,"offset":58359},"indent":[]}},{"type":"text","value":" scalars use ","position":{"start":{"line":3039,"column":5,"offset":58359},"end":{"line":3039,"column":18,"offset":58372},"indent":[]}},{"type":"inlineCode","value":"StringFilter","position":{"start":{"line":3039,"column":18,"offset":58372},"end":{"line":3039,"column":32,"offset":58386},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":3039,"column":32,"offset":58386},"end":{"line":3039,"column":34,"offset":58388},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/485","children":[{"type":"text","value":"issue","position":{"start":{"line":3039,"column":35,"offset":58389},"end":{"line":3039,"column":40,"offset":58394},"indent":[]}}],"position":{"start":{"line":3039,"column":34,"offset":58388},"end":{"line":3039,"column":97,"offset":58451},"indent":[]}},{"type":"text","value":"). We are considering a tailored ","position":{"start":{"line":3039,"column":97,"offset":58451},"end":{"line":3039,"column":130,"offset":58484},"indent":[]}},{"type":"inlineCode","value":"DateTime","position":{"start":{"line":3039,"column":130,"offset":58484},"end":{"line":3039,"column":140,"offset":58494},"indent":[]}},{"type":"text","value":" filter (","position":{"start":{"line":3039,"column":140,"offset":58494},"end":{"line":3039,"column":149,"offset":58503},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma-labs/nexus-prisma/issues/484","children":[{"type":"text","value":"issue","position":{"start":{"line":3039,"column":150,"offset":58504},"end":{"line":3039,"column":155,"offset":58509},"indent":[]}}],"position":{"start":{"line":3039,"column":149,"offset":58503},"end":{"line":3039,"column":212,"offset":58566},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":3039,"column":212,"offset":58566},"end":{"line":3039,"column":214,"offset":58568},"indent":[]}}],"position":{"start":{"line":3039,"column":1,"offset":58355},"end":{"line":3039,"column":214,"offset":58568},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"input BooleanFilter {\n  equals: Boolean\n  not: Boolean\n}\n\ninput IntFilter {\n  equals: S\n  gt: S\n  gte: S\n  in: [S!]\n  lt: S\n  lte: S\n  not: S\n  notIn: [S!]\n}\n\ninput FloatFilter {} # like IntFilter\n\ninput DateTimeFilter {} # like IntFilter\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ninput UUIDFilter {} # like StringFilter","position":{"start":{"line":3041,"column":1,"offset":58570},"end":{"line":3077,"column":4,"offset":59067},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"System Behaviours","position":{"start":{"line":3079,"column":4,"offset":59072},"end":{"line":3079,"column":21,"offset":59089},"indent":[]}}],"position":{"start":{"line":3079,"column":1,"offset":59069},"end":{"line":3079,"column":21,"offset":59089},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Null-Free Lists","position":{"start":{"line":3081,"column":5,"offset":59095},"end":{"line":3081,"column":20,"offset":59110},"indent":[]}}],"position":{"start":{"line":3081,"column":1,"offset":59091},"end":{"line":3081,"column":20,"offset":59110},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Projection for Prisma list types always project as a fully non-nullable GraphQL type. This is because Prisma list fields (and list member type) can themselves never be null, and because Prisma does not support ","position":{"start":{"line":3083,"column":1,"offset":59112},"end":{"line":3083,"column":211,"offset":59322},"indent":[]}},{"type":"inlineCode","value":"@default","position":{"start":{"line":3083,"column":211,"offset":59322},"end":{"line":3083,"column":221,"offset":59332},"indent":[]}},{"type":"text","value":" on list types.","position":{"start":{"line":3083,"column":221,"offset":59332},"end":{"line":3083,"column":236,"offset":59347},"indent":[]}}],"position":{"start":{"line":3083,"column":1,"offset":59112},"end":{"line":3083,"column":236,"offset":59347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For consistency we also apply the same pattern for ","position":{"start":{"line":3085,"column":1,"offset":59349},"end":{"line":3085,"column":52,"offset":59400},"indent":[]}},{"type":"inlineCode","value":"t.crud.<BatchRead>","position":{"start":{"line":3085,"column":52,"offset":59400},"end":{"line":3085,"column":72,"offset":59420},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3085,"column":72,"offset":59420},"end":{"line":3085,"column":73,"offset":59421},"indent":[]}}],"position":{"start":{"line":3085,"column":1,"offset":59349},"end":{"line":3085,"column":73,"offset":59421},"indent":[]}},{"type":"jsx","value":"<div class=\"Row Collapsable\">","position":{"start":{"line":3087,"column":1,"offset":59423},"end":{"line":3087,"column":30,"offset":59452},"indent":[]}},{"type":"code","lang":"Prisma","meta":null,"value":"model User {\n  posts Post[]\n}","position":{"start":{"line":3089,"column":1,"offset":59454},"end":{"line":3093,"column":4,"offset":59497},"indent":[1,1,1,1]}},{"type":"code","lang":"ts","meta":null,"value":"schema.queryType({\n  definition(t) {\n    t.crud.users()\n  },\n})\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.crud.posts()\n  },\n})","position":{"start":{"line":3095,"column":1,"offset":59499},"end":{"line":3107,"column":4,"offset":59653},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"graphql","meta":null,"value":"type Query {\n  users: [User!]!\n}\n\ntype User {\n  posts: [Post!]!\n}","position":{"start":{"line":3109,"column":1,"offset":59655},"end":{"line":3117,"column":4,"offset":59735},"indent":[1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":3119,"column":1,"offset":59737},"end":{"line":3119,"column":7,"offset":59743},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"`prisma`\",\"metaTitle\":\"Prisma Plugin\",\"metaDescription\":\"TODO\"}","position":{"start":{"line":3122,"column":1,"offset":59746},"end":{"line":3122,"column":102,"offset":59847},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":3122,"column":102,"offset":59847}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"`prisma`\",\n  \"metaTitle\": \"Prisma Plugin\",\n  \"metaDescription\": \"TODO\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"prisma\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#prisma\",\n    \"aria-label\": \"prisma permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Prisma\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"issues\")), \" \\u2013 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma+label%3Atype%2Ffeat\"\n  }), \"features\"), \" \\u2B1D \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma+label%3Atype%2Fbug\"\n  }), \"bugs\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Prisma is a next-generation developer-centric toolkit focused on making the data layer easy. This plugin gives you:\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Workflow Integration\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nexus \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dev\"), \" workflows are enhanced to run your Prisma generators.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Runtime Integration\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nexus schema component \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/guides/schema#graphql-type-builders\"\n  }), \"GraphQL type builders\"), \" are augmented with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".model\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".crud\"), \" methods. These make it easy for you to project your Prisma models and expose operations against them in your GraphQL API. Resolvers are dynamically created for you removing the need for traditional ORMs/query builders like TypeORM, Sequelize, or Knex. Out-of-box features include pagination, filtering, and ordering. And when you do need to drop down to custom resolvers a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Prisma Client\")), \" instance on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \" is ready to go.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Testtime Integration\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nexus testing component is augmented with an instance of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Prisma Client\")), \", to help you easily seed your database for your tests.\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"installation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#installation\",\n    \"aria-label\": \"installation permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Installation\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1. Install the plugin\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"npm install nexus-plugin-prisma\\n\")), mdx(\"blockquote\", {\n    parentName: \"section\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-plugin-prisma\"), \" bundles the Prisma CLI. You can invoke it using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run prisma\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn prisma\"), \".\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2. Enable the plugin\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { use } from 'nexus'\\nimport { prisma } from 'nexus-plugin-prisma'\\n\\nuse(prisma())\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Getting started\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There are two ways you can start with the Prisma plugin. Either from scratch, or using an existing database.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"from-scratch\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#from-scratch\",\n    \"aria-label\": \"from scratch permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"From scratch\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1. Create a \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"schema.prisma\"), \" file\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"//schema.prisma\\n\\ngenerator prisma_client {\\n  provider = \\\"prisma-client-js\\\"\\n}\\n\\nmodel User {\\n  id   Int @id @default(autoincrement())\\n  name String\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2. Add a datasource to your schema\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We recommend you use Postgres but MySQL and SQLite are also supported.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To add your datasource, simply copy/paste one of the block below at the top of your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"schema.prisma\"), \" file\"), mdx(\"blockquote\", {\n    parentName: \"section\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: You can also pass the database credentials via a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \" file. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file#using-environment-variables\"\n  }), \"Read more about it here\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Using Postgres\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"//schema.prisma\\n\\ndatasource db {\\n  provider = \\\"postgres\\\"\\n  url = \\\"postgresql://USER:PASSWORD@localhost:5432/DATABASE\\\"\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Using MySQL\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"//schema.prisma\\n\\ndatasource db {\\n  provider = \\\"mysql\\\"\\n  url = \\\"mysql://USER:PASSWORD@localhost:3306/DATABASE\\\"\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Using SQLite\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"//schema.prisma\\n\\ndatasource db {\\n  provider = \\\"sqlite\\\"\\n  url = \\\"file:./dev.db\\\"\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3. Create a migration file\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm run prisma migrate save --experimental\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4. Migrate your database\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm run prisma migrate up --experimental\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"5. You're all set\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You're ready to start working!\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"from-an-existing-database\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#from-an-existing-database\",\n    \"aria-label\": \"from an existing database permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"From an existing database\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When starting from an existing database, you should use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.prisma.io/docs/reference/tools-and-interfaces/introspection\"\n  }), \"Prisma's instrospection\"), \" feature.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1. Create a \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"schema.prisma\"), \" file\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"schema.prisma\"), \" file and add your database credentials in it so that Prisma can introspect your database schema.\"), mdx(\"blockquote\", {\n    parentName: \"section\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: You can also pass the database credentials via a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \" file. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file#using-environment-variables\"\n  }), \"Read more about it here\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Using Postgres\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"//schema.prisma\\n\\ndatasource db {\\n  provider = \\\"postgres\\\"\\n  url = \\\"postgresql://USER:PASSWORD@localhost:5432/DATABASE\\\"\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Using MySQL\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"//schema.prisma\\n\\ndatasource db {\\n  provider = \\\"mysql\\\"\\n  url = \\\"mysql://USER:PASSWORD@localhost:3306/DATABASE\\\"\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Using SQLite\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"//schema.prisma\\n\\ndatasource db {\\n  provider = \\\"sqlite\\\"\\n  url = \\\"file:./dev.db\\\"\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2. Introspect your database\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"npm run prisma introspect\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3. Generate the Prisma Client\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Add the following block at the top of your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"schema.prisma\"), \" file:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"generator prisma_client {\\n  provider = \\\"prisma-client-js\\\"\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The plugin will take care of generating the Prisma Client for you after that.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4. You're all set\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You're ready to start working!\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Given a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-schema-file.md\"\n  }), \"Prisma schema\"), \" (left), you will be able to project these Prisma models onto your API and expose operations against them (middle) resulting in the GraphQL Schema (right).\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"generator prisma_client {\\n  provider = \\\"prisma-client-js\\\"\\n}\\n\\nmodel User {\\n  id        String   @id @default(cuid())\\n  email     String   @unique\\n  birthDate DateTime\\n}\\n\\nmodel Post {\\n  id     String   @id @default(cuid())\\n  author User[]\\n}\\n\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { schema } from 'nexus'\\n\\nschema.queryType({\\n  definition(t) {\\n    t.crud.user()\\n    t.crud.users({\\n      ordering: true,\\n    })\\n    t.crud.post()\\n    t.crud.posts({\\n      filtering: true,\\n    })\\n  },\\n})\\n\\nschema.mutationType({\\n  definition(t) {\\n    t.crud.createOneUser()\\n    t.crud.createOnePost()\\n    t.crud.deleteOneUser()\\n    t.crud.deleteOnePost()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.id()\\n    t.model.email()\\n    t.model.birthDate()\\n    t.model.posts()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.author()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"scalar DateTime\\n\\ninput DateTimeFilter {\\n  equals: DateTime\\n  gt: DateTime\\n  gte: DateTime\\n  in: [DateTime!]\\n  lt: DateTime\\n  lte: DateTime\\n  not: DateTime\\n  notIn: [DateTime!]\\n}\\n\\ntype Mutation {\\n  createOnePost(\\n    data: PostCreateInput!\\n  ): Post!\\n  createOneUser(\\n    data: UserCreateInput!\\n  ): User!\\n  deleteOnePost(\\n    where: PostWhereUniqueInput!\\n  ): Post\\n  deleteOneUser(\\n    where: UserWhereUniqueInput!\\n  ): User\\n}\\n\\nenum OrderByArg {\\n  asc\\n  desc\\n}\\n\\ntype Post {\\n  author(\\n    after: String\\n    before: String\\n    first: Int\\n    last: Int\\n    skip: Int\\n  ): [User!]!\\n  id: ID!\\n}\\n\\ninput PostCreateInput {\\n  author: UserCreateManyWithoutAuthorInput\\n  id: ID\\n}\\n\\ninput PostCreateManyWithoutPostsInput {\\n  connect: [PostWhereUniqueInput!]\\n  create: [PostCreateWithoutAuthorInput!]\\n}\\n\\ninput PostCreateWithoutAuthorInput {\\n  id: ID\\n}\\n\\ninput PostFilter {\\n  every: PostWhereInput\\n  none: PostWhereInput\\n  some: PostWhereInput\\n}\\n\\ninput PostWhereInput {\\n  AND: [PostWhereInput!]\\n  author: UserFilter\\n  id: StringFilter\\n  NOT: [PostWhereInput!]\\n  OR: [PostWhereInput!]\\n}\\n\\ninput PostWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype Query {\\n  post(\\n    where: PostWhereUniqueInput!\\n  ): Post\\n  posts(\\n    after: String\\n    before: String\\n    first: Int\\n    last: Int\\n    skip: Int\\n    where: PostWhereInput\\n  ): [Post!]!\\n  user(\\n    where: UserWhereUniqueInput!\\n  ): User\\n  users(\\n    after: String\\n    before: String\\n    first: Int\\n    last: Int\\n    orderBy: UserOrderByInput\\n    skip: Int\\n  ): [User!]!\\n}\\n\\ninput StringFilter {\\n  contains: String\\n  endsWith: String\\n  equals: String\\n  gt: String\\n  gte: String\\n  in: [String!]\\n  lt: String\\n  lte: String\\n  not: String\\n  notIn: [String!]\\n  startsWith: String\\n}\\n\\ntype User {\\n  birthDate: DateTime!\\n  email: String!\\n  id: ID!\\n  posts(\\n    after: String\\n    before: String\\n    first: Int\\n    last: Int\\n    skip: Int\\n  ): [Post!]!\\n}\\n\\ninput UserCreateInput {\\n  birthDate: DateTime!\\n  email: String!\\n  id: ID\\n  posts: PostCreateManyWithoutPostsInput\\n}\\n\\ninput UserCreateManyWithoutAuthorInput {\\n  connect: [UserWhereUniqueInput!]\\n  create: [UserCreateWithoutPostsInput!]\\n}\\n\\ninput UserCreateWithoutPostsInput {\\n  birthDate: DateTime!\\n  email: String!\\n  id: ID\\n}\\n\\ninput UserFilter {\\n  every: UserWhereInput\\n  none: UserWhereInput\\n  some: UserWhereInput\\n}\\n\\ninput UserOrderByInput {\\n  birthDate: OrderByArg\\n  email: OrderByArg\\n  id: OrderByArg\\n}\\n\\ninput UserWhereInput {\\n  AND: [UserWhereInput!]\\n  birthDate: DateTimeFilter\\n  email: StringFilter\\n  id: StringFilter\\n  NOT: [UserWhereInput!]\\n  OR: [UserWhereInput!]\\n  posts: PostFilter\\n}\\n\\ninput UserWhereUniqueInput {\\n  email: String\\n  id: ID\\n}\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"plugin-settings\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#plugin-settings\",\n    \"aria-label\": \"plugin settings permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Plugin settings\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"optionally\"), \" pass some settings to the plugin.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"type-definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#type-definition\",\n    \"aria-label\": \"type definition permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Type definition\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export type PrismaClientOptions = {\\n  /**\\n   * Options to pass to the Prisma Client instantiated by the plugin.\\n   * If you want to instantiate your own Prisma Client, use `instance` instead.\\n   */\\n  options: ClientOptions\\n}\\n\\nexport type PrismaClientInstance = {\\n  /**\\n   * Instance of your own Prisma Client. You can import it from 'nexus-plugin-prisma/client'.\\n   * If you just want to pass some settings to the Prisma Client, use `options` instead.\\n   */\\n  instance: PrismaClient\\n}\\n\\nexport type Settings = {\\n  /**\\n   * Use this to pass some settings to the Prisma Client instantiated by the plugin or to pass your own Prisma Client\\n   */\\n  client?: PrismaClientOptions | PrismaClientInstance\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Examples\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"configuring-the-prisma-client\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#configuring-the-prisma-client\",\n    \"aria-label\": \"configuring the prisma client permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Configuring the Prisma Client\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { use } from 'nexus'\\nimport { prisma } from 'nexus-plugin-prisma'\\n\\nuse(prisma({\\n  client: { options: { log: ['query'] } }\\n}))\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"using-a-custom-instance-of-the-prisma-client\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#using-a-custom-instance-of-the-prisma-client\",\n    \"aria-label\": \"using a custom instance of the prisma client permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Using a custom instance of the Prisma Client\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { use } from 'nexus'\\nimport { prisma } from 'nexus-plugin-prisma'\\nimport { PrismaClient } from 'nexus-plugin-prisma/client'\\n\\nuse(prisma({\\n  client: { instance: new PrismaClient() }\\n}))\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"recipes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#recipes\",\n    \"aria-label\": \"recipes permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Recipes\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"projecting-prisma-model-fields-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#projecting-prisma-model-fields-docsify-ignore\",\n    \"aria-label\": \"projecting prisma model fields docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Projecting Prisma Model Fields {docsify-ignore}\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Exposing one of your Prisma models in your GraphQL API\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.title()\\n    t.model.content()\\n  },\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"simple-computed-graphql-fields-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#simple-computed-graphql-fields-docsify-ignore\",\n    \"aria-label\": \"simple computed graphql fields docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Simple Computed GraphQL Fields {docsify-ignore}\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can add computed fields to a GraphQL object using the standard GraphQL Nexus API.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: \\\"Post\\\",\\n  definition(t) {\\n    t.model.id()\\n    t.model.title()\\n    t.model.content()\\n    t.string(\\\"uppercaseTitle\\\", {\\n      resolve({ title }, args, ctx) {\\n        return title.toUpperCase(),\\n      }\\n    })\\n  },\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"complex-computed-graphql-fields-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#complex-computed-graphql-fields-docsify-ignore\",\n    \"aria-label\": \"complex computed graphql fields docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Complex Computed GraphQL Fields {docsify-ignore}\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you need more complicated logic for your computed field (e.g. have access to some information from the database), you can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prisma\"), \" instance that's attached to the context and implement your resolver based on that.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.content()\\n    t.string('anotherComputedField', {\\n      async resolve(_parent, _args, ctx) {\\n        const databaseInfo = await ctx.prisma.someModel.someOperation(...)\\n        const result = doSomething(databaseInfo)\\n        return result\\n      }\\n    })\\n  }\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"project-a-prisma-field-to-a-differently-named-graphql-field-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#project-a-prisma-field-to-a-differently-named-graphql-field-docsify-ignore\",\n    \"aria-label\": \"project a prisma field to a differently named graphql field docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Project a Prisma Field to a Differently Named GraphQL Field {docsify-ignore}\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.content({\\n      alias: 'body',\\n    })\\n  },\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"publish-full-featured-reads-on-a-prisma-model-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#publish-full-featured-reads-on-a-prisma-model-docsify-ignore\",\n    \"aria-label\": \"publish full featured reads on a prisma model docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Publish Full-Featured Reads on a Prisma Model {docsify-ignore}\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t) {\\n    t.crud.post()\\n    t.crud.posts({\\n      ordering: true,\\n      filtering: true,\\n    })\\n  },\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"publish-writes-on-a-prisma-model-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#publish-writes-on-a-prisma-model-docsify-ignore\",\n    \"aria-label\": \"publish writes on a prisma model docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Publish Writes on a Prisma Model {docsify-ignore}\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.mutationType({\\n  definition(t) {\\n    t.crud.createPost()\\n    t.crud.updatePost()\\n    t.crud.updateManyPost()\\n    t.crud.upsertPost()\\n    t.crud.deletePost()\\n    t.crud.deleteManyPost()\\n  },\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"publish-customized-reads-on-a-prisma-model-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#publish-customized-reads-on-a-prisma-model-docsify-ignore\",\n    \"aria-label\": \"publish customized reads on a prisma model docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Publish Customized Reads on a Prisma Model {docsify-ignore}\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t) {\\n    t.crud.posts({\\n      filtering: {\\n        id: true,\\n        title: true,\\n      },\\n      ordering: { title: true },\\n    })\\n  },\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"publish-autogenerated-mutations-with-computed-input-values-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#publish-autogenerated-mutations-with-computed-input-values-docsify-ignore\",\n    \"aria-label\": \"publish autogenerated mutations with computed input values docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Publish Autogenerated Mutations with Computed Input Values {docsify-ignore}\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.mutationType({\\n  definition(t) {\\n    /* \\n    Assuming our prisma model for User has a createdByBrowser field,\\n    this removes it from the input type but ensures the value is\\n    inferred from context and passed to Prisma Client.\\n    */\\n    t.crud.createOneUser({\\n      computedInputs: {\\n        createdByBrowser: ({\\n          args,\\n          ctx,\\n          info,\\n        }) => ctx.session.browser,\\n      },\\n    })\\n  },\\n})\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"globally-remove-a-field-from-input-types-and-infer-its-value-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#globally-remove-a-field-from-input-types-and-infer-its-value-docsify-ignore\",\n    \"aria-label\": \"globally remove a field from input types and infer its value docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Globally Remove a Field from Input Types and Infer its Value {docsify-ignore}\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"todo (this is not possible in the framework yet)\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"nexusPrismaPlugin({\\n  ...other config...\\n  /*\\n  Remove fields named \\\"user\\\" from all input types. When resolving\\n  a request whose data contains any of these types, the value is inferred\\n  from context and passed to Prisma Client, even if it's nested. This is great for\\n  creating data associated with one user's account.\\n  */\\n  computedInputs: {\\n    user: ({ args, ctx, info }) => ({\\n      connect: {\\n        id: ctx.userId,\\n      },\\n    }),\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.mutationType({\\n  definition(t) {\\n    t.crud.createOnePost()\\n  },\\n})\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Without computedInputs:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation createOnePost {\\n  createOnePost(\\n    data: {\\n      title: \\\"Automatically generate clean APIs!\\\"\\n      image: {\\n        url: \\\"https://example.com/images/prancing-unicorns\\\"\\n        user: {\\n          connect: { id: 1 }\\n        }\\n      }\\n      user: { connect: { id: 1 } }\\n    }\\n  )\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"With computedInputs:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation createOnePost {\\n  createOnePost(\\n    data: {\\n      title: \\\"Automatically generate clean APIs!\\\"\\n      image: {\\n        url: \\\"https://example.com/images/prancing-unicorns\\\"\\n      }\\n    }\\n  )\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"publish-model-writes-along-side-prisma-client-resolved-fields-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#publish-model-writes-along-side-prisma-client-resolved-fields-docsify-ignore\",\n    \"aria-label\": \"publish model writes along side prisma client resolved fields docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Publish Model Writes Along Side Prisma Client-Resolved Fields {docsify-ignore}\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.mutationType({\\n  definition(t) {\\n    t.crud.createUser()\\n    t.crud.updateUser()\\n    t.crud.deleteUser()\\n    t.crud.deletePost()\\n\\n    t.field('createDraft', {\\n      type: 'Post',\\n      args: {\\n        title: stringArg(),\\n        content: stringArg({\\n          nullable: true,\\n        }),\\n      },\\n      resolve: (\\n        parent,\\n        { title, content },\\n        ctx\\n      ) => {\\n        return ctx.prisma.posts.createPost(\\n          { title, content }\\n        )\\n      },\\n    })\\n\\n    t.field('publish', {\\n      type: 'Post',\\n      nullable: true,\\n      args: {\\n        id: idArg(),\\n      },\\n      resolve(\\n        parent,\\n        { id },\\n        ctx\\n      ) {\\n        return ctx.prisma.posts.updatePost(\\n          {\\n            where: { id },\\n            data: {\\n              published: true,\\n            },\\n          }\\n        )\\n      },\\n    })\\n  },\\n})\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"worktime-integration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#worktime-integration\",\n    \"aria-label\": \"worktime integration permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Worktime Integration\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"nexus-dev\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#nexus-dev\",\n    \"aria-label\": \"nexus dev permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"nexus dev\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus dev\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-plugin-prisma\"), \" will make sure your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Prisma Client\")), \" is up-to-date with your Prisma Schema by running your Prisma generators for you.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Updates to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"schema.prisma\"), \" file will also be detected and will give you hints about the next steps to properly migrate your database.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"nexus-build\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#nexus-build\",\n    \"aria-label\": \"nexus build permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"nexus build\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus build\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-plugin-prisma\"), \" will make sure your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Prisma Client\")), \" is up-to-date with your Prisma Schema, thus making sure your application is safely accessing your database.\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"testtime-integration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#testtime-integration\",\n    \"aria-label\": \"testtime integration permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Testtime Integration\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-plugin-prisma\"), \" augments the testing component of Nexus with an instance of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Prisma Client\")), \", to help you easily seed your database for your tests.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To learn more about its usage, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/guides/testing?id=with-a-database\"\n  }), \"head to the Testing section\"), \".\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"runtime-integration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#runtime-integration\",\n    \"aria-label\": \"runtime integration permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Runtime Integration\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"access-to-the-prisma-client\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#access-to-the-prisma-client\",\n    \"aria-label\": \"access to the prisma client permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Access to the Prisma Client\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"At runtime, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-plugin-prisma\"), \" will add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db\"), \" property containing an instance of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Prisma Client\")), \" to your GraphQL resolvers context.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-1\",\n    \"aria-label\": \"example 1 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { schema } from 'nexus'\\n\\nschema.objectType({\\n  name: 'Query',\\n  definition(t) {\\n    t.list.field('users', {\\n      type: 'User',\\n      resolve(parent, args, ctx) {\\n        return ctx.db.user.findMany() // <== `ctx.db` is your Prisma Client instance\\n      },\\n    })\\n  },\\n})\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"tmodel\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#tmodel\",\n    \"aria-label\": \"tmodel permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"t.model\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Only available within \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/api/modules/main/exports/schema?id=objecttype\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"schema.objectType\")), \" definitions.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.model\"), \" contains configurable \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"field projectors\"), \" that you use for projecting fields of your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/data-modeling.md#models\"\n  }), \"Prisma models\"), \" onto your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphql.github.io/graphql-spec/June2018/#sec-Objects\"\n  }), \"GraphQL Objects\"), \". The precise behaviour of field projectors vary by the Prisma type being projected. Refer to the respective sub-sections for details.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"model-object-mapping\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#model-object-mapping\",\n    \"aria-label\": \"model object mapping permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Model-Object Mapping\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.model\"), \" will either have field projectors for the Prisma model whose name matches that of the GraphQL \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object\"), \", or if the GraphQL \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object\"), \" is of a name that does not match any of your Prisma models then \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.model\"), \" becomes a function allowing you to specify the mapping, after which the field projectors become available.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-2\",\n    \"aria-label\": \"example 2 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id String @id @default(cuid())\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.id()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'Person',\\n  definition(t) {\\n    t.model('User').id()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type User {\\n  id: ID!\\n}\\n\\ntype Person {\\n  id: ID!\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"enum\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#enum\",\n    \"aria-label\": \"enum permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Enum\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Auto-Projection\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When a Prisma enum field is projected, the corresponding enum type will be automatically projected too (added to the GraphQL schema).\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Member Customization\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can customize the projected enum members by defining the enum yourself in Nexus. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-prisma\"), \" will treat the name collision as an intent to override and so disable auto-projection.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Option Notes\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Currently Prisma enums cannot be \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), \"aliased\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/474\"\n  }), \"issue\"), \"). They also cannot be \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), \"type mapped\"), \" since enum types cannot be mapped yet (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/473\"\n  }), \"issue\"), \").\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options\",\n    \"aria-label\": \"options permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"n/a\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this\",\n    \"aria-label\": \"graphql schema contributions how to read this permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type M {\\n  MEF: E # ! <-- if not ? or @default\\n}\\n\\n# if not defined by user\\nenum E {\\n  EV\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-3\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-3\",\n    \"aria-label\": \"example 3 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  role Role\\n  mood Mood\\n}\\n\\nenum Mood {\\n  HAPPY\\n  SAD\\n  COMFUSED\\n}\\n\\nenum Role {\\n  MEMBER\\n  EDITOR\\n  ADMIN\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"enumType({\\n  name: 'Role',\\n  members: ['MEMBER', 'EDITOR'],\\n})\\n\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.role()\\n    t.model.mood()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"enum Mood {\\n  HAPPY\\n  SAD\\n  CONFUSED\\n}\\n\\nenum Role {\\n  MEMBER\\n  EDITOR\\n}\\n\\ntype User {\\n  role: Role\\n  mood: Mood\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"scalar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#scalar\",\n    \"aria-label\": \"scalar permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Scalar\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Scalar Mapping\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/data-modeling.md#scalar-types\"\n  }), \"Prisma scalars\"), \" are mapped to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphql.org/learn/schema/#scalar-types\"\n  }), \"GraphQL scalars\"), \" as follows:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Prisma       GraphQL\\n------       -------\\nBoolean   <>  Boolean\\nString    <>  String\\nInt       <>  Int\\nFloat     <>  Float\\ncuid()    <>  ID\\nDateTime  <>  DateTime (custom scalar)\\nuuid()    <>  UUID (custom scalar)\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Auto-Projection\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When a Prisma scalar is encountered that does not map to the standard GraphQL scalar types, it will be automatically projected (custom scalar added to the GraphQL schema). Examples include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DateTime\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UUID\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Option Notes\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"It is not possible to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" because there is currently no way for a Prisma scalar to map to a differently named GraphQL scalar.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-1\",\n    \"aria-label\": \"graphql schema contributions how to read this 1 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type M {\\n  MSF: S # ! <-- if not ? or @default\\n}\\n\\n# if not matching a standard GQL scalar\\nscalar S\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-1\",\n    \"aria-label\": \"options 1 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-4\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-4\",\n    \"aria-label\": \"example 4 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Post {\\n  id: Int!\\n  email: String!\\n  scheduledPublish: DateTime\\n  rating: Float!\\n  active: Boolean!\\n}\\n\\nscalar DateTime\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.id()\\n    t.model.email()\\n    t.model.scheduledPublish()\\n    t.model.rating()\\n    t.model.active()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"\\nmodel User {\\n  id               String     @id @default(cuid())\\n  email            String\\n  scheduledPublish DateTime?\\n  rating           Float\\n  active           Boolean\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"relation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#relation\",\n    \"aria-label\": \"relation permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Relation\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Projecting relational fields only affects the current GraphQL object being defined. That is, the model that the field relates to is not auto-projected. This is a design choice intended to keep the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-prisma\"), \" system predictable for you. If you forget to project a relation you will receive feedback at build/boot time letting you know.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-2\",\n    \"aria-label\": \"options 2 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-2\",\n    \"aria-label\": \"graphql schema contributions how to read this 2 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type M {\\n  MRF: RM # ! <-- if not ?\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-5\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-5\",\n    \"aria-label\": \"example 5 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  latestPost Post?\\n}\\n\\nmodel Post {\\n  title String\\n  body String\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.latestPost()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type User {\\n  latestPost: Post\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"list-enum\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#list-enum\",\n    \"aria-label\": \"list enum permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"List Enum\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#enum\"\n  }), \"enums\"), \". It is not possible to order (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/466\"\n  }), \"issue\"), \") paginate (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/468\"\n  }), \"issue\"), \") or filter (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/467\"\n  }), \"issue\"), \") enum lists.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-3\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-3\",\n    \"aria-label\": \"graphql schema contributions how to read this 3 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type M {\\n  MLEF: [E!]!\\n}\\n\\n# if not defined by user\\nenum E {\\n  EV\\n}\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"list-scalar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#list-scalar\",\n    \"aria-label\": \"list scalar permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"List Scalar\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#scalar\"\n  }), \"scalars\"), \". It is not possible to order (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/470\"\n  }), \"issue\"), \") paginate (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/471\"\n  }), \"issue\"), \") or filter (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/469\"\n  }), \"issue\"), \") scalar lists.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-4\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-4\",\n    \"aria-label\": \"graphql schema contributions how to read this 4 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type M {\\n  MLSF: [S!]!\\n}\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"list-relation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#list-relation\",\n    \"aria-label\": \"list relation permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"List Relation\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#relation\"\n  }), \"relations\"), \" but also supports batch related options.\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-3\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-3\",\n    \"aria-label\": \"options 3 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#filtering\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"filtering\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#pagination\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"pagination\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#ordering\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ordering\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-5\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-5\",\n    \"aria-label\": \"graphql schema contributions how to read this 5 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type M {\\n  MLRF: [RM!]!\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"tcrud\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#tcrud\",\n    \"aria-label\": \"tcrud permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"t.crud\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Only available within GraphQL \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Query\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Mutation\"), \" definitions.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.crud\"), \" contains configurable \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"operation publishers\"), \" that you use for exposing create, read, update, and delete mutations against your projected Prisma models.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There are 8 kinds of operations (reflecting a subset of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js\"\n  }), \"Prisma Client\"), \"'s capabilities). An \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"operation publisher\"), \" is the combination of some operation kind and a particular Prisma model. Thus the number of operation publishers on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.crud\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Prisma model count \\xD7 operation kind count\"), \". So for example if you defined 20 Prisma models then you would see 160 operation publishers on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.crud\"), \".\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-6\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-6\",\n    \"aria-label\": \"example 6 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  ...\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t) {\\n    t.crud.user()\\n    t.crud.users()\\n  },\\n})\\n\\nschema.mutationType({\\n  definition(t) {\\n    t.crud.createOneUser()\\n    t.crud.updateOneUser()\\n    t.crud.upsertOneUser()\\n    t.crud.deleteOneUser()\\n\\n    t.crud.updateManyUser()\\n    t.crud.deleteManyUser()\\n  },\\n})\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"create\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#create\",\n    \"aria-label\": \"create permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Create\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.createOne<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to create one record at at time of the respective Prisma model.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Relation fields may be connected with an existing record or a sub-create may be inlined (generally referred to as \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"nested mutations\"), \"). If the relation is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"List\"), \" then multiple connections or sub-creates are permitted.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Inlined creates are very similar to top-level ones but have the important difference that the sub-create has excluded the field where supplying its relation to the type of parent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object\"), \" being created would \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"normally be\"), \". This is because a sub-create forces its record to relate to the parent one.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#create\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"create\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-4\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-4\",\n    \"aria-label\": \"options 4 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-6\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-6\",\n    \"aria-label\": \"graphql schema contributions how to read this 6 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  createOne_M(data: M_CreateInput): M!\\n}\\n\\ninput M_CreateInput {\\n  MSF: S                       # ! <-- if not ? or @default\\n  MRF: RM_CreateManyWithout_M  # ! <-- if not ? or @default\\n}\\n\\ninput RM_CreateManyWithout_M {\\n  connect: [RM_WhereUniqueInput!]\\n  create: [RM_CreateWithout_M_Input!]\\n}\\n\\ninput RM_WhereUniqueInput {\\n  MRF@unique: S\\n}\\n\\ninput RM_CreateWithout_M_Input = RM_CreateInput - RMRF: M\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-7\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-7\",\n    \"aria-label\": \"example 7 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    Int    @id @unique\\n  email String @unique\\n  posts Post[]\\n}\\n\\nmodel Post {\\n  id     Int    @id\\n  title  String @unique\\n  body   String\\n  author User\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.mutationType({\\n  definition(t) {\\n    t.crud.createOneUser()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.id()\\n    t.model.email()\\n    t.model.posts()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.title()\\n    t.model.body()\\n    t.model.author()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Mutation {\\n  createOneUser(\\n    data: UserCreateInput!\\n  ): User!\\n}\\n\\ntype Post {\\n  author: User!\\n  id: Int!\\n  title: String!\\n  body: String!\\n}\\n\\ninput PostCreateManyWithoutPostsInput {\\n  connect: [PostWhereUniqueInput!]\\n  create: [PostCreateWithoutAuthorInput!]\\n}\\n\\ninput PostCreateWithoutAuthorInput {\\n  title: String!\\n  body: String!\\n}\\n\\ninput PostWhereUniqueInput {\\n  id: Int\\n  title: String\\n}\\n\\ntype User {\\n  email: String!\\n  id: Int!\\n  posts: [Post!]!\\n}\\n\\ninput UserCreateInput {\\n  email: String!\\n  posts: PostCreateManyWithoutPostsInput\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation simple {\\n  createOneUser(\\n    data: {\\n      email: \\\"newton@prisma.io\\\"\\n    }\\n  ) {\\n    id\\n  }\\n}\\n\\nmutation connectRelation {\\n  createOneUser(\\n    data: {\\n      email: \\\"newton@prisma.io\\\"\\n      posts: { connect: [1643] }\\n    }\\n  ) {\\n    id\\n  }\\n}\\n\\nmutation createRelation {\\n  createOneUser(\\n    data: {\\n      email: \\\"newton@prisma.io\\\"\\n      posts: {\\n        create: [\\n          {\\n            title: \\\"...\\\"\\n            body: \\\"...\\\"\\n          }\\n        ]\\n      }\\n    }\\n  ) {\\n    id\\n    posts {\\n      title\\n    }\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"read\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#read\",\n    \"aria-label\": \"read permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Read\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to find one particular record of the respective Prisma model. They may search by any Prisma model field that has been marked with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@unique\"), \" attribute.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The ability for list fields to be \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#filtering\"\n  }), \"filtered\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#ordering\"\n  }), \"ordered\"), \", or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#pagination\"\n  }), \"paginated\"), \" depends upon if those features have been enabled for those GraphQL objects via \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#list-relation\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.model.<ListRelation>\")), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#findone\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"findOne\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-5\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-5\",\n    \"aria-label\": \"options 5 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-7\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-7\",\n    \"aria-label\": \"graphql schema contributions how to read this 7 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  M(where: M_WhereUniqueInput): M!\\n}\\n\\ninput M_WhereUniqueInput {\\n  MF: S # if @unique\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-8\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-8\",\n    \"aria-label\": \"example 8 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    Int    @id @unique\\n  email String @unique\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t) {\\n    t.user()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Query {\\n  user(\\n    where: UserWhereUniqueInput!\\n  ): User\\n}\\n\\ntype User {\\n  id: Int!\\n  email: String!\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: Int\\n  email: String\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query simple {\\n  user(\\n    where: {\\n      email: \\\"newton@prisma.io\\\"\\n    }\\n  ) {\\n    id\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"update\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#update\",\n    \"aria-label\": \"update permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Update\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.updateOne<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to update one particular record at a time of the respective Prisma model.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#update\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"update\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-6\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-6\",\n    \"aria-label\": \"options 6 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-8\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-8\",\n    \"aria-label\": \"graphql schema contributions how to read this 8 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  updateOne_M(data: M_UpdateInput!, where: M_WhereUniqueInput!): M\\n}\\n\\ninput M_WhereUniqueInput {\\n  MF: S # if @unique\\n}\\n\\ninput M_UpdateInput {\\n  MSF: S\\n  MRF: RM_UpdateManyWithout_M_Input\\n}\\n\\ninput RM_UpdateManyWithout_M_Input {\\n  connect: [RM_WhereUniqueInput!]\\n  create: [RM_CreateWithout_M_Input!]\\n  delete: [RM_WhereUniqueInput!]\\n  deleteMany: [RM_ScalarWhereInput!] # see batch filtering reference\\n  disconnect: [RM_WhereUniqueInput!]\\n  set: [RM_WhereUniqueInput!]\\n  update: [RM_UpdateWithWhereUniqueWithout_M_Input!]\\n  updateMany: [RM_UpdateManyWithWhereNestedInput!]\\n  upsert: [RM_UpsertWithWhereUniqueWithout_M_Input!]\\n}\\n\\ninput RM_WhereUniqueInput {} # recurse pattern like M_WhereUniqueInput\\n\\ninput RM_CreateWithout_M_Input {} # RM_CreateInput - RMRF: M\\n\\ninput RM_UpdateWithWhereUniqueWithout_M_Input {\\n  data: RM_UpdateWithout_M_DataInput!\\n  where: RM_WhereUniqueInput!\\n}\\ninput RM_UpdateWithout_M_DataInput {\\n  RMSF: S\\n}\\n\\ninput RM_UpdateManyWithWhereNestedInput {\\n  data: RM_UpdateManyDataInput!\\n  where: RM_ScalarWhereInput! # see batch filering reference\\n}\\n\\ninput RM_UpsertWithWhereUniqueWithout_M_Input {\\n  create: RM_CreateWithout_M_Input!\\n  update: RM_UpdateWithout_M_DataInput!\\n  where: RM_WhereUniqueInput!\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"S_ScalarWhereInput\"), \" see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#batch-filtering\"\n  }), \"batch filtering\"), \" contributions.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-9\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-9\",\n    \"aria-label\": \"example 9 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    Int    @id @unique\\n  email String @unique\\n  posts Post[]\\n}\\n\\nmodel Post {\\n  id     Int    @id\\n  title  String @unique\\n  body   String\\n  author User\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.mutationType({\\n  definition(t) {\\n    t.crud.updateOneUser()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.id()\\n    t.model.email()\\n    t.model.posts()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.title()\\n    t.model.author()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"input IntFilter {\\n  equals: Int\\n  gt: Int\\n  gte: Int\\n  in: [Int!]\\n  lt: Int\\n  lte: Int\\n  not: Int\\n  notIn: [Int!]\\n}\\n\\ntype Mutation {\\n  updateOneUser(\\n    data: UserUpdateInput!\\n    where: UserWhereUniqueInput!\\n  ): User\\n}\\n\\ntype Post {\\n  author: User!\\n  id: Int!\\n  title: String!\\n}\\n\\ninput PostCreateWithoutAuthorInput {\\n  body: String!\\n  title: String!\\n}\\n\\ninput PostScalarWhereInput {\\n  AND: [PostScalarWhereInput!]\\n  body: StringFilter\\n  id: IntFilter\\n  NOT: [PostScalarWhereInput!]\\n  OR: [PostScalarWhereInput!]\\n  title: StringFilter\\n}\\n\\ninput PostUpdateManyDataInput {\\n  body: String\\n  id: Int\\n  title: String\\n}\\n\\ninput PostUpdateManyWithoutAuthorInput {\\n  connect: [PostWhereUniqueInput!]\\n  create: [PostCreateWithoutAuthorInput!]\\n  delete: [PostWhereUniqueInput!]\\n  deleteMany: [PostScalarWhereInput!]\\n  disconnect: [PostWhereUniqueInput!]\\n  set: [PostWhereUniqueInput!]\\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\\n}\\n\\ninput PostUpdateManyWithWhereNestedInput {\\n  data: PostUpdateManyDataInput!\\n  where: PostScalarWhereInput!\\n}\\n\\ninput PostUpdateWithoutAuthorDataInput {\\n  body: String\\n  id: Int\\n  title: String\\n}\\n\\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\\n  data: PostUpdateWithoutAuthorDataInput!\\n  where: PostWhereUniqueInput!\\n}\\n\\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\\n  create: PostCreateWithoutAuthorInput!\\n  update: PostUpdateWithoutAuthorDataInput!\\n  where: PostWhereUniqueInput!\\n}\\n\\ninput PostWhereUniqueInput {\\n  id: Int\\n  title: String\\n}\\n\\ntype Query {\\n  ok: Boolean!\\n}\\n\\ninput StringFilter {\\n  contains: String\\n  endsWith: String\\n  equals: String\\n  gt: String\\n  gte: String\\n  in: [String!]\\n  lt: String\\n  lte: String\\n  not: String\\n  notIn: [String!]\\n  startsWith: String\\n}\\n\\ntype User {\\n  email: String!\\n  id: Int!\\n  posts: [Post!]!\\n}\\n\\ninput UserUpdateInput {\\n  email: String\\n  id: Int\\n  posts: PostUpdateManyWithoutAuthorInput\\n}\\n\\ninput UserWhereUniqueInput {\\n  email: String\\n  id: Int\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation simple {\\n  updateOneUser(\\n    where: { id: 1643 }\\n    data: {\\n      email: \\\"locke@prisma.io\\\"\\n    }\\n  ) {\\n    id\\n    email\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"upsert\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#upsert\",\n    \"aria-label\": \"upsert permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Upsert\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.upsertOne<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to update or create (aka. insert) one particular record at a time of the respective Prisma model. This operation is a combination of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#create\"\n  }), \"create\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#update\"\n  }), \"update\"), \". The generated GraphQL mutation matches \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"where\"), \" args to those of update, and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"create\"), \" to that of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" arg in create. Unlike update, upsert guarantees a return value.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#upsert\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"upsert\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-7\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-7\",\n    \"aria-label\": \"options 7 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-9\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-9\",\n    \"aria-label\": \"graphql schema contributions how to read this 9 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  upsertOne_M(\\n    create: M_CreateInput!      # like createOne(data ...)\\n    data: M_UpdateInput!        # like updateOne(data ...)\\n    where: M_WhereUniqueInput!  # like updateOne(where ...)\\n  ): M!\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"M_UpdateInput\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"M_WhereUniqueInput\"), \" see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#update\"\n  }), \"update\"), \" contributions.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"For \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"M_CreateInput\"), \" see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#create\"\n  }), \"create\"), \" contributions.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-10\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-10\",\n    \"aria-label\": \"example 10 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Refer to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#update\"\n  }), \"update\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#create\"\n  }), \"create\"), \".\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"delete\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#delete\",\n    \"aria-label\": \"delete permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Delete\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.deleteOne<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to delete one particular record at a time of the respective Prisma model.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#delete\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"delete\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-8\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-8\",\n    \"aria-label\": \"options 8 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-10\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-10\",\n    \"aria-label\": \"graphql schema contributions how to read this 10 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  deleteOne_M(where: M_WhereUniqueInput): M\\n}\\n\\ninput M_WhereUniqueInput {\\n  MF@unique: S\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-11\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-11\",\n    \"aria-label\": \"example 11 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    Int    @id @unique\\n  email String @unique\\n  posts Post[]\\n}\\n\\nmodel Post {\\n  id     Int    @id\\n  title  String @unique\\n  body   String\\n  author User\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.mutationType({\\n  definition(t) {\\n    t.crud.deleteOneUser()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.id()\\n    t.model.email()\\n    t.model.posts()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.title()\\n    t.model.author()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Mutation {\\n  deleteOneUser(\\n    where: UserWhereUniqueInput!\\n  ): User\\n}\\n\\ntype Post {\\n  author: User!\\n  id: Int!\\n  title: String!\\n}\\n\\ntype User {\\n  email: String!\\n  id: Int!\\n  posts: [Post!]!\\n}\\n\\ninput UserWhereUniqueInput {\\n  email: String\\n  id: Int\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation simple {\\n  deleteOneUser(\\n    where: { id: 1643 }\\n  ) {\\n    id\\n    email\\n    posts {\\n      id\\n      title\\n    }\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"batch-read\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#batch-read\",\n    \"aria-label\": \"batch read permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Batch Read\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.<M Pluralized>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to fetch multiple records at once of the respective Prisma model.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#findMany\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"findMany\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-9\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-9\",\n    \"aria-label\": \"options 9 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#filtering\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"filtering\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#pagination\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"pagiantion\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#ordering\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ordering\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#computedInputs-local\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"computedInputs\")), \"(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#computedInputs-local\"\n  }), \"local\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#computedInputs-global\"\n  }), \"global\"), \")\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-11\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-11\",\n    \"aria-label\": \"graphql schema contributions how to read this 11 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Query {\\n  M_s: [M!]!\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-12\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-12\",\n    \"aria-label\": \"example 12 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    Int    @id @unique\\n  email String @unique\\n  posts Post[]\\n}\\n\\nmodel Post {\\n  id     Int    @id\\n  title  String @unique\\n  body   String\\n  author User\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t) {\\n    t.users()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Query {\\n  users: [User!]!\\n}\\n\\ntype Post {\\n  author: User!\\n  id: Int!\\n  title: String!\\n}\\n\\ntype User {\\n  email: String!\\n  id: ID!\\n  posts: [Post!]!\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"batch-update\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#batch-update\",\n    \"aria-label\": \"batch update permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Batch Update\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.updateMany<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to update multiple records of the respective Prisma model at once. Unlike \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#update\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"update\")), \" nested relation-updating is not supported here. Clients get back a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BatchPayload\"), \" object letting them know the number of affected records, but not access to the fields of affected records.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#updateMany\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"updateMany\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-10\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-10\",\n    \"aria-label\": \"options 10 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-12\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-12\",\n    \"aria-label\": \"graphql schema contributions how to read this 12 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  updateMany_M(where: M_WhereInput, data:  M_UpdateManyMutationInput): BatchPayload!\\n}\\n\\ninput M_UpdateManyMutationInput {\\n  MSF: S\\n  MEF: E\\n  # not possible to batch update relations\\n}\\n\\ntype BatchPayload {\\n  count: Int!\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"M_WhereInput\"), \" see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#batch-filtering\"\n  }), \"batch filtering contributions\"), \".\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-13\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-13\",\n    \"aria-label\": \"example 13 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation updateManyUser(where: {...}, data: { status: ACTIVE }) {\\n  count\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#filtering\"\n  }), \"filtering option\"), \" example. Differences are: operation semantics (update things); return type; \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" arg.\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"batch-delete\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#batch-delete\",\n    \"aria-label\": \"batch delete permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Batch Delete\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"t.crud.deleteMany<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to delete multiple records of the respective Prisma model at once. Clients get back a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BatchPayload\"), \" object letting them know the number of affected records, but not access to the fields of affected records.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Underlying Prisma Client Function\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#deleteMany\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"deleteMany\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-11\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#options-11\",\n    \"aria-label\": \"options 11 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#type\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"type\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#alias\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"alias\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-13\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-13\",\n    \"aria-label\": \"graphql schema contributions how to read this 13 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  deleteMany_M(where: M_WhereInput): BatchPayload!\\n}\\n\\ntype BatchPayload {\\n  count: Int!\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"M_WhereInput\"), \" see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#batch-filtering\"\n  }), \"filtering contribution\"), \".\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-14\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-14\",\n    \"aria-label\": \"example 14 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  deleteManyUser(where: {...}) {\\n    count\\n  }\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#filtering\"\n  }), \"filtering option\"), \" example. Differences are: operation semantics (delete things); return type.\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"options-12\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#options-12\",\n    \"aria-label\": \"options 12 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Options\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"alias\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#alias\",\n    \"aria-label\": \"alias permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"alias\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"undefined | String\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Applies To\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.crud.<*>\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.model.<* - enum, list enum>\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"About\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"undefined\"), \" (default) By default Prisma model fields project onto GraphQL object fields of the same name.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"string\"), \" Change which GraphQL object field the Prisma model field projects onto.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-14\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-14\",\n    \"aria-label\": \"graphql schema contributions how to read this 14 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"n/a\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-15\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-15\",\n    \"aria-label\": \"example 15 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model Post  {\\n  body String\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.body({\\n      alias: 'content',\\n    })\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Post {\\n  content: String!\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"type\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#type\",\n    \"aria-label\": \"type permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"type\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"undefined | String\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Applies To\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.crud.<*>\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#relation-field\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.model.<Relation>\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#list-field\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.model.<ListRelation>\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"About\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"undefined\"), \" (default) Point Prisma field to a GraphQL object whose name matches that of the Prisma field model type.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"string\"), \" Point Prisma field to the given GraphQL object. This option can become necessary when you've have done \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#model-object-mapping\"\n  }), \"model-object mapping\"), \" and other Prisma models in your schema have relations to the name-mapped Prisma model. We are interested in developing further the model-object mapping API to automate this better (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/461\"\n  }), \"issue\"), \").\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-15\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-15\",\n    \"aria-label\": \"graphql schema contributions how to read this 15 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"n/a\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-16\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-16\",\n    \"aria-label\": \"example 16 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    String @id @default(cuid())\\n  posts Post[]\\n}\\n\\nmodel Post {\\n  id String @id @default(cuid())\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'Article',\\n  definition(t) {\\n    t.model('Post').id()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.posts({\\n      alias: 'articles',\\n      type: 'Article',\\n    })\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Article {\\n  title: String!\\n}\\n\\ntype User {\\n  articles: [Article]\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"ordering\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#ordering\",\n    \"aria-label\": \"ordering permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"ordering\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"undefined | true | false | ModelWhitelist\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Applies To\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#batch-read\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.crud.<BatchRead>\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#list-relation\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.model.<ListRelation>\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"About\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to order the records in a list field. Records can be ordered by their projected scalar fields in ascending or descending order. Ordering by fields on relations is not currently possible (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma-client-js/issues/249\"\n  }), \"issue\"), \").\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"undefined\"), \" (default) Like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \" Disable ordering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" Enable ordering by all scalar fields\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ModelWhitelist\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Record<string, true>\"), \") Enable ordering by just Model scalar fields appearing in the given whitelist.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-16\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-16\",\n    \"aria-label\": \"graphql schema contributions how to read this 16 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"# t.crud.<BatchRead>\\nM(orderBy: M_OrderByInput)\\n\\n# t.model.<ListRelation>\\ntype M {\\n  MF(orderBy: M_OrderByInput)\\n}\\n\\ninput M_OrderByInput {\\n  MSF: OrderByArg\\n  # It is not possible to order by relations\\n}\\n\\nenum OrderByArg {\\n  asc\\n  desc\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-17\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-17\",\n    \"aria-label\": \"example 17 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    Int @id\\n  name  String\\n  posts Post[]\\n}\\n\\nmodel Post {\\n  id    Int @id\\n  title String\\n  body  String\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.id()\\n    t.model.title()\\n    t.model.body()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.id()\\n    t.model.name()\\n    t.model.posts({\\n      ordering: { title: true },\\n    })\\n  },\\n})\\n\\nschema.queryType({\\n  definition(t) {\\n    t.crud.user()\\n    t.crud.users({\\n      ordering: true,\\n    })\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Query {\\n  user(\\n    where: UserWhereUniqueInput!\\n  ): User\\n  users(\\n    orderBy: UserOrderByInput\\n  ): [User!]!\\n}\\n\\ntype Post {\\n  body: String!\\n  id: Int!\\n  title: String!\\n}\\n\\ntype User {\\n  id: Int!\\n  name: String!\\n  posts(\\n    orderBy: UserPostsOrderByInput\\n  ): [Post!]!\\n}\\n\\ninput UserOrderByInput {\\n  id: OrderByArg\\n  name: OrderByArg\\n}\\n\\ninput UserPostsOrderByInput {\\n  title: OrderByArg\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: Int\\n}\\n\\nenum OrderByArg {\\n  asc\\n  desc\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query entrypointOrdering {\\n  users(orderBy: { name: asc }) {\\n    id\\n    name\\n  }\\n}\\n\\nquery relationOrdering {\\n  user(where: { id: 1643 }) {\\n    posts(\\n      orderBy: { title: dsc }\\n    ) {\\n      title\\n      body\\n    }\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"pagination\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#pagination\",\n    \"aria-label\": \"pagination permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"pagination\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"undefined | true | false\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Applies To\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#batch-read\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.crud.<BatchRead>\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#list-relation\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.model.<ListRelation>\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"About\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"undefined\"), \" (default) Like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" Enable pagination\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \" Disable pagination\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"aria-label\": \"graphql schema contributions permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"# t.crud.<BatchRead>\\nMs(\\n  # The starting object for the list (typically ID or other unique value).\\n  after: M_WhereUniquInout\\n\\n  # The last object for the list (typically ID or other unique value)\\n  before: M_WhereUniquInout\\n\\n  # How many elements, forwards from `after` otherwise head\\n  first: Int\\n\\n  # How many elements, backwards from `before` otherwise tail\\n  last: Int\\n\\n  # The offset\\n  # If `first` used, then forwards from `after` (otherwise head)\\n  # If `last` used, then backwards from `before` (otherwise tail)\\n  skip: Int\\n)\\n\\n# t.model.<ListRelation>\\ntype M {\\n  MRF(after: M_WhereUniquInout, before: M_WhereUniquInout, first: Int, last: Int, skip: Int)\\n}\\n\\ninput M_WhereUniquInout {\\n  MSF@unique: S\\n}\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-18\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-18\",\n    \"aria-label\": \"example 18 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id    Int @id\\n  posts Post[]\\n  // ...\\n}\\n\\nmodel Post {\\n  id    Int @id\\n  // ...\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"...\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.posts({\\n      pagination: true,\\n    })\\n  },\\n})\\n\\nschema.queryType({\\n  definition(t) {\\n    t.crud.users({\\n      pagination: true,\\n    })\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query batchReadAfter {\\n  users(\\n    after: { id: 1234 }\\n    first: 50\\n  ) {\\n    id\\n    name\\n  }\\n}\\n\\n# or\\n\\nquery batchReadSkip {\\n  users(skip: 50, first: 50) {\\n    id\\n    name\\n  }\\n}\\n\\n# or\\n\\nquery batchReadRelation {\\n  user(where: { id: 1643 }) {\\n    posts(last: 10) {\\n      title\\n      body\\n    }\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"filtering\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#filtering\",\n    \"aria-label\": \"filtering permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"filtering\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"undefined | true | false | ModelWhitelist\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Applies To\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#batch-read\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.crud.<BatchRead>\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#list-relation\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.model.<ListRelation>\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"About\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"undefined\"), \" (default) Like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" Enable filtering for all scalar fields\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \" Disable filtering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ModelWhitelist\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Record<string, true>\"), \") Enable ordering by just Model scalar fields appearing in the given whitelist.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-how-to-read-this-17\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-how-to-read-this-17\",\n    \"aria-label\": \"graphql schema contributions how to read this 17 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions \", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions\",\n    \"title\": \"How to read this\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"?\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#batch-filtering\"\n  }), \"batch filtering contributions\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-19\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-19\",\n    \"aria-label\": \"example 19 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id     String     @id @unique @default(cuid())\\n  posts  Post[]\\n  age    Int\\n  status UserStatus\\n}\\n\\nmodel Post {\\n  id       String    @id @unique @default(cuid())\\n  author   User\\n  comments Comment[]\\n  rating   Float\\n}\\n\\nmodel Comment {\\n  id      String     @id @unique @default(cuid())\\n  author  User\\n  post    Post\\n  content String\\n}\\n\\nenum UserStatus {\\n  BANNED\\n  ACTIVE\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.model.age()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'Post',\\n  definition(t) {\\n    t.model.author()\\n    t.model.rating()\\n    t.model.comments()\\n  },\\n})\\n\\nschema.objectType({\\n  name: 'Comment',\\n  definition(t) {\\n    t.model.author()\\n    t.model.post()\\n  },\\n})\\n\\nschema.queryType({\\n  definition(t) {\\n    t.crud.users({\\n      filtering: true,\\n    })\\n    t.crud.user()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Comment {\\n  author: User!\\n  post: Post!\\n}\\n\\ninput CommentFilter {\\n  every: CommentWhereInput\\n  none: CommentWhereInput\\n  some: CommentWhereInput\\n}\\n\\ninput CommentWhereInput {\\n  AND: [CommentWhereInput!]\\n  author: UserWhereInput\\n  content: StringFilter\\n  id: StringFilter\\n  NOT: [CommentWhereInput!]\\n  OR: [CommentWhereInput!]\\n  post: PostWhereInput\\n}\\n\\ninput FloatFilter {\\n  equals: Float\\n  gt: Float\\n  gte: Float\\n  in: [Float!]\\n  lt: Float\\n  lte: Float\\n  not: Float\\n  notIn: [Float!]\\n}\\n\\ninput IntFilter {\\n  equals: Int\\n  gt: Int\\n  gte: Int\\n  in: [Int!]\\n  lt: Int\\n  lte: Int\\n  not: Int\\n  notIn: [Int!]\\n}\\n\\ntype Post {\\n  author: User!\\n  comments(\\n    after: String\\n    before: String\\n    first: Int\\n    last: Int\\n    skip: Int\\n  ): [Comment!]!\\n  rating: Float!\\n}\\n\\ninput PostFilter {\\n  every: PostWhereInput\\n  none: PostWhereInput\\n  some: PostWhereInput\\n}\\n\\ninput PostWhereInput {\\n  AND: [PostWhereInput!]\\n  author: UserWhereInput\\n  comments: CommentFilter\\n  id: StringFilter\\n  NOT: [PostWhereInput!]\\n  OR: [PostWhereInput!]\\n  rating: FloatFilter\\n}\\n\\ntype Query {\\n  user(\\n    where: UserWhereUniqueInput!\\n  ): User\\n  users(\\n    after: String\\n    before: String\\n    first: Int\\n    last: Int\\n    skip: Int\\n    where: UserWhereInput\\n  ): [User!]!\\n}\\n\\ninput StringFilter {\\n  contains: String\\n  endsWith: String\\n  equals: String\\n  gt: String\\n  gte: String\\n  in: [String!]\\n  lt: String\\n  lte: String\\n  not: String\\n  notIn: [String!]\\n  startsWith: String\\n}\\n\\ntype User {\\n  age: Int!\\n}\\n\\nenum UserStatus {\\n  ACTIVE\\n  BANNED\\n}\\n\\ninput UserWhereInput {\\n  age: IntFilter\\n  AND: [UserWhereInput!]\\n  comments: CommentFilter\\n  id: StringFilter\\n  NOT: [UserWhereInput!]\\n  OR: [UserWhereInput!]\\n  posts: PostFilter\\n  status: UserStatus\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: ID\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query batchReadFilter {\\n  users(where: {\\n    OR: [\\n      { age: { gt: 30 } },\\n      posts: {\\n        every: {\\n          rating: {\\n            lte: \\\"0.5\\\"\\n          }\\n        },\\n        none: {\\n          comments: {\\n            none: {\\n              author: {\\n                status: BANNED\\n              }\\n            }\\n          }\\n        }\\n      }\\n    ]\\n  }) {\\n    id\\n    name\\n  }\\n}\\n\\nquery batchReadRelationFilter {\\n  users {\\n    posts(where: { rating: { gte: 0.9 }}) {\\n      comments {\\n        content\\n      }\\n    }\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"computedinputs-local\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#computedinputs-local\",\n    \"aria-label\": \"computedinputs local permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"computedInputs\"), \" (local)\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Record<string, ({ args, ctx, info }: MutationResolverParams) => unknown>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Note: This is an abbreviated version of the ComputedInputs type. The most important thing to undertand each of the object's values will be a function that takes an object with \\\"args\\\", \\\"ctx\\\", and \\\"info\\\" keys that represent the runtime values of the corresponding parameters that are passed to your resolver. For the full type, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#computedinputs-type-details\"\n  }), \"ComputedInputs Type Details\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Applies To\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#t.crud\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"t.crud.<mutations>\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"About\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to omit fields from one mutation's corresponding input type and infer the value of those fields from the resolver's params (args, context, info) at runtime when determining what to pass to Prisma Client.\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ComputedInputs\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Record<string, ({ args, ctx, info }: MutationResolverParams) => unknown>\"), \") \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#computedinputs-type-details\"\n  }), \"(full type here)\"), \".\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Keys in the ComputedInputs object will be omitted from the mutation's corresponding input type. When resolving the mutation at runtime, each omitted key will be passed to Prisma Client based on the return value of that key's corresponding function in the ComputedInputs object when passed that resolver's parameters at runtime.\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-1\",\n    \"aria-label\": \"graphql schema contributions 1 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The mutation's input type fields with a name that is in the ComputedInputs object are omitted from the GraphQL schema. This modifies one existing input type but does not add new types or remove existing types.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-20\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-20\",\n    \"aria-label\": \"example 20 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id  Int @id\\n  name String\\n  createdWithBrowser String\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t: any) {\\n    t.crud.user()\\n  },\\n})\\nschema.mutationType({\\n  definition(t: any) {\\n    t.crud.createOneUser({\\n      computedInputs: {\\n        createdWithBrowser: ({\\n          args,\\n          ctx,\\n          info,\\n        }) => ctx.browser,\\n      },\\n    })\\n  },\\n})\\nschema.objectType({\\n  name: 'User',\\n  definition: (t: any) => {\\n    t.model.id()\\n    t.model.name()\\n    t.model.createdWithBrowser()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Mutation {\\n  createOneUser(\\n    data: UserCreateInput!\\n  ): User!\\n}\\n\\ntype Query {\\n  user(\\n    where: UserWhereUniqueInput!\\n  ): User\\n}\\n\\ntype User {\\n  id: Int!\\n  name: String!\\n  createdWithBrowser: String!\\n}\\n\\ninput UserCreateInput {\\n  name: String!\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: Int\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation createOneUser {\\n  createOneUser({data: {name: \\\"Benedict\\\"}}) {\\n    id\\n    name\\n    createdWithBrowser\\n  }\\n}\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"computedinputs-global\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#computedinputs-global\",\n    \"aria-label\": \"computedinputs global permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"computedInputs\"), \" (global)\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Record<string, ({ args, ctx, info}: MutationResolverParams) => any>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Note: This is an abbreviated version of the ComputedInputs type. The most important thing to undertand each of the object's values will be a function that takes an object with \\\"args\\\", \\\"ctx\\\", and \\\"info\\\" keys that represent the runtime values of the corresponding parameters that are passed to your resolver. For the full type, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#computedinputs-type-details\"\n  }), \"ComputedInputs Type Details\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Applies To\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#Example\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"nexusPrismaPlugin()\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"About\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow clients to omit fields with a given name across all of their GraphQL schema's inputs and infer the value of those fields from context when determining what to pass to Prisma Client\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ComputedInputs\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Record<string, ({ args, ctx, info }: MutationResolverParams) => any>\"), \") \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#computedinputs-type-details\"\n  }), \"(full type here)\"), \".\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Keys in the ComputedInputs object will be omitted from all input types. When resolving any mutation at runtime, that mutation's input type will be recursively searched for the omitted keys. Any time one of those keys would have appeared anywhere in the mutation's input type, a value will be passed to Prisma Client based on the return value of that key's corresponding function in the ComputedInputs object when passed the resolver's parameters at runtime.\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-2\",\n    \"aria-label\": \"graphql schema contributions 2 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"All input type fields with a name that is in the ComputedInputs object are omitted from the GraphQL schema. This modifies existing input types but does not add new types or remove existing types.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"example-21\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#example-21\",\n    \"aria-label\": \"example 21 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Example\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-prisma\"\n  }), \"model User {\\n  id  Int @id\\n  name String\\n  nested Nested[]\\n  createdWithBrowser String\\n}\\n\\nmodel Nested {\\n  id Int @id\\n  name String\\n  createdWithBrowser String\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t: any) {\\n    t.crud.user()\\n  },\\n})\\nschema.mutationType({\\n  definition(t: any) {\\n    t.crud.createOneUser()\\n    t.crud.createOneNested()\\n  },\\n})\\nschema.objectType({\\n  name: 'User',\\n  definition: (t: any) => {\\n    t.model.id()\\n    t.model.name()\\n    t.model.nested()\\n    t.model.createdWithBrowser()\\n  },\\n})\\nschema.objectType({\\n  name: 'Nested',\\n  definition: (t: any) => {\\n    t.model.id()\\n    t.model.createdWithBrowser()\\n    t.model.name()\\n  },\\n})\\n\\nnexusPrismaPlugin({\\n  /*\\n  Remove fields named \\\"createdWithBrowser\\\" from all mutation input types. When resolving\\n  a request whose data contains any of these types, the value is inferred from the resvoler's \\n  params based on the function we defined below and passed to Prisma Client, even if it's nested.\\n  This example assumes a Prisma Client context containing a \\\"browser\\\" key that maps to a string\\n  representing the browser from which the request was made.\\n  */\\n  computedInputs: {\\n    createdWithBrowser: ({\\n      args,\\n      ctx,\\n      info,\\n    }) => ctx.browser,\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Mutation {\\n  createOneUser(\\n    data: UserCreateInput!\\n  ): User!\\n  createOneNested(\\n    data: NestedCreateInput!\\n  ): Nested!\\n}\\n\\ntype Nested {\\n  id: Int!\\n  createdWithBrowser: String!\\n  name: String!\\n}\\n\\ninput NestedCreateInput {\\n  name: String!\\n  user: UserCreateOneWithoutUserInput\\n}\\n\\ninput NestedCreateManyWithoutNestedInput {\\n  create: [NestedCreateWithoutUserInput!]\\n  connect: [NestedWhereUniqueInput!]\\n}\\n\\ninput NestedCreateWithoutUserInput {\\n  name: String!\\n}\\n\\ninput NestedWhereUniqueInput {\\n  id: Int\\n}\\n\\ntype Query {\\n  user(\\n    where: UserWhereUniqueInput!\\n  ): User\\n}\\n\\ntype User {\\n  id: Int!\\n  name: String!\\n  nested(\\n    skip: Int\\n    after: Int\\n    before: Int\\n    first: Int\\n    last: Int\\n  ): [Nested!]!\\n  createdWithBrowser: String!\\n}\\n\\ninput UserCreateInput {\\n  name: String!\\n  nested: NestedCreateManyWithoutNestedInput\\n}\\n\\ninput UserCreateOneWithoutUserInput {\\n  create: UserCreateWithoutNestedInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserCreateWithoutNestedInput {\\n  name: String!\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: Int\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation createOneUser {\\n  createOneUser({data: {name: \\\"Benedict\\\", nested: {name: \\\"Moony\\\"}}) {\\n    id\\n    name\\n    createdWithBrowser\\n    nested {\\n      id\\n      name\\n      createdWithBrowser\\n    }\\n  }\\n}\\n\\nmutation createOneNested {\\n  createOneNested({data: {name: \\\"Moony\\\", user: {connect: {where: {id: 1}}}}}) {\\n    id\\n    name\\n    createdWithBrowser\\n  }\\n}\\n\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{user: {connect: {where: {id: 1}}}}\"), \" looks familiar, global computedInputs can also be used to determine the user making a request and automatically populate mutations affecting a single user accordingly. For example, assuming Prisma Client' context includes a \\\"userId\\\" key, adding a user key to global computedInputs can simplify the \\\"createOneNested\\\" mutation from the previous example:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"nexusPrismaPlugin({\\n  ...other config...\\n  computedInputs: {\\n    createdWithBrowser: ({ctx}) => ctx.browser,\\n    user: ({ctx}) => ({ connect: { where: { id: ctx.userId } } }),\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation createOneNested {\\n  createOneNested({data: {name: \\\"Moony\\\"}}) {\\n    id\\n    name\\n    createdWithBrowser\\n  }\\n}\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"computedinputs-type-details\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#computedinputs-type-details\",\n    \"aria-label\": \"computedinputs type details permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"ComputedInputs\"), \" Type Details\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"/**\\n *  Represents arguments required by Prisma Client that will\\n *  be derived from a request's input (root, args, and context)\\n *  and omitted from the GraphQL API. The object itself maps the\\n *  names of these args to a function that takes an object representing\\n *  the request's input and returns the value to pass to the Prisma Client\\n *  arg of the same name.\\n */\\nexport type LocalComputedInputs<\\n  MethodName extends MutationMethodName\\n> = Record<\\n  string,\\n  (\\n    params: LocalMutationResolverParams<\\n      MethodName\\n    >\\n  ) => unknown\\n>\\n\\nexport type GlobalComputedInputs = Record<\\n  string,\\n  (\\n    params: GlobalMutationResolverParams\\n  ) => unknown\\n>\\n\\ntype BaseMutationResolverParams = {\\n  info: GraphQLResolveInfo\\n  ctx: Context\\n}\\n\\nexport type GlobalMutationResolverParams = BaseMutationResolverParams & {\\n  args: Record<string, any> & {\\n    data: unknown\\n  }\\n}\\n\\nexport type LocalMutationResolverParams<\\n  MethodName extends MutationMethodName\\n> = BaseMutationResolverParams & {\\n  args: core.GetGen<\\n    'argTypes'\\n  >['Mutation'][MethodName]\\n}\\n\\nexport type MutationMethodName = keyof core.GetGen<\\n  'argTypes'\\n>['Mutation']\\n\\nexport type Context = core.GetGen<\\n  'context'\\n>\\n\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"graphql-schema-contributions-3\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#graphql-schema-contributions-3\",\n    \"aria-label\": \"graphql schema contributions 3 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"GraphQL Schema Contributions\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"how-to-read\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#how-to-read\",\n    \"aria-label\": \"how to read permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"How to Read\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"M = model   F = field   L = list   S = scalar   R = relation   E = enum   V = value\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"batch-filtering\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#batch-filtering\",\n    \"aria-label\": \"batch filtering permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Batch Filtering\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sources\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query {\\n  # When filtering option is enabled\\n  Ms(where: M_WhereInput, ...): [M!]!\\n}\\n\\nmutation {\\n  updateMany_M(where: M_WhereInput, ...) BatchPayload!\\n  deleteMany_M(where: M_WhereInput): BatchPayload!\\n}\\n\\ntype M {\\n  # When filtering option is enabled\\n  MRF: RM(where: RM_WhereInput): [RM!]!\\n}\\n\\n# Nested InputObjects from t.crud.update<M>\\n\\n# Nested InputObjects from t.crud.upsert<M>\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Where\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"input M_WhereInput {\\n  AND: [M_WhereInput!]\\n  NOT: [M_WhereInput!]\\n  OR: [M_WhereInput!]\\n  MSF: S_Filter\\n  MRF: RM_Filter\\n}\\n\\ninput RM_Filter {\\n  every: RM_WhereInput # recurse -> M_WhereInput\\n  none: RM_WhereInput # recurse -> M_WhereInput\\n  some: RM_WhereInput # recurse -> M_WhereInput\\n}\\n\\n# This type shows up in the context of t.crud.update<M> and t.crud.upsert<M>\\n\\ninput RM_ScalarWhereInput {\\n  AND: [RM_ScalarWhereInput!]\\n  NOT: [RM_ScalarWhereInput!]\\n  OR: [RM_ScalarWhereInput!]\\n  RMSF: S_Filter\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Scalar Filters\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ID\"), \" scalars use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StringFilter\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/485\"\n  }), \"issue\"), \"). We are considering a tailored \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DateTime\"), \" filter (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/484\"\n  }), \"issue\"), \").\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"input BooleanFilter {\\n  equals: Boolean\\n  not: Boolean\\n}\\n\\ninput IntFilter {\\n  equals: S\\n  gt: S\\n  gte: S\\n  in: [S!]\\n  lt: S\\n  lte: S\\n  not: S\\n  notIn: [S!]\\n}\\n\\ninput FloatFilter {} # like IntFilter\\n\\ninput DateTimeFilter {} # like IntFilter\\n\\ninput StringFilter {\\n  contains: String\\n  endsWith: String\\n  equals: String\\n  gt: String\\n  gte: String\\n  in: [String!]\\n  lt: String\\n  lte: String\\n  not: String\\n  notIn: [String!]\\n  startsWith: String\\n}\\n\\ninput UUIDFilter {} # like StringFilter\\n\"))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"system-behaviours\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#system-behaviours\",\n    \"aria-label\": \"system behaviours permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"System Behaviours\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"null-free-lists\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#null-free-lists\",\n    \"aria-label\": \"null free lists permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Null-Free Lists\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Projection for Prisma list types always project as a fully non-nullable GraphQL type. This is because Prisma list fields (and list member type) can themselves never be null, and because Prisma does not support \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@default\"), \" on list types.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For consistency we also apply the same pattern for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t.crud.<BatchRead>\"), \".\"), mdx(\"div\", {\n    className: \"Row Collapsable\"\n  }, mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Prisma\"\n  }), \"model User {\\n  posts Post[]\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"schema.queryType({\\n  definition(t) {\\n    t.crud.users()\\n  },\\n})\\nschema.objectType({\\n  name: 'User',\\n  definition(t) {\\n    t.crud.posts()\\n  },\\n})\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Query {\\n  users: [User!]!\\n}\\n\\ntype User {\\n  posts: [Post!]!\\n}\\n\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"`prisma`\",\n  \"metaTitle\": \"Prisma Plugin\",\n  \"metaDescription\": \"TODO\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\" {...{\n        \"id\": \"prisma\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h1\" {...{\n          \"href\": \"#prisma\",\n          \"aria-label\": \"prisma permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Prisma`}</h1><p parentName=\"section\"><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma\"\n        }}><inlineCode parentName=\"a\">{`issues`}</inlineCode></a>{` – `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma+label%3Atype%2Ffeat\"\n        }}>{`features`}</a>{` ⬝ `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aplugin%2Fprisma+label%3Atype%2Fbug\"\n        }}>{`bugs`}</a></p><p parentName=\"section\">{`Prisma is a next-generation developer-centric toolkit focused on making the data layer easy. This plugin gives you:`}</p><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\"><strong parentName=\"p\">{`Workflow Integration`}</strong><br parentName=\"p\"></br>{`\n`}{`Nexus `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` workflows are enhanced to run your Prisma generators.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\"><strong parentName=\"p\">{`Runtime Integration`}</strong><br parentName=\"p\"></br>{`\n`}{`Nexus schema component `}<a parentName=\"p\" {...{\n              \"href\": \"/guides/schema#graphql-type-builders\"\n            }}>{`GraphQL type builders`}</a>{` are augmented with `}<inlineCode parentName=\"p\">{`.model`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.crud`}</inlineCode>{` methods. These make it easy for you to project your Prisma models and expose operations against them in your GraphQL API. Resolvers are dynamically created for you removing the need for traditional ORMs/query builders like TypeORM, Sequelize, or Knex. Out-of-box features include pagination, filtering, and ordering. And when you do need to drop down to custom resolvers a `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/prisma/prisma-client-js\"\n            }}><inlineCode parentName=\"a\">{`Prisma Client`}</inlineCode></a>{` instance on `}<inlineCode parentName=\"p\">{`context`}</inlineCode>{` is ready to go.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\"><strong parentName=\"p\">{`Testtime Integration`}</strong><br parentName=\"p\"></br>{`\n`}{`Nexus testing component is augmented with an instance of the `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/prisma/prisma-client-js\"\n            }}><inlineCode parentName=\"a\">{`Prisma Client`}</inlineCode></a>{`, to help you easily seed your database for your tests.`}</p>\n        </li>\n      </ol>{\n        /* START doctoc generated TOC please keep comment here to allow auto update */\n      }{\n        /* DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE */\n      }{\n        /* END doctoc generated TOC please keep comment here to allow auto update */\n      }<section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"installation\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#installation\",\n            \"aria-label\": \"installation permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Installation`}</h2><p parentName=\"section\"><strong parentName=\"p\">{`1. Install the plugin`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n            \"className\": \"language-cli\"\n          }}>{`npm install nexus-plugin-prisma\n`}</code></pre><blockquote parentName=\"section\">\n          <p parentName=\"blockquote\">{`Note: `}<inlineCode parentName=\"p\">{`nexus-plugin-prisma`}</inlineCode>{` bundles the Prisma CLI. You can invoke it using `}<inlineCode parentName=\"p\">{`npm run prisma`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn prisma`}</inlineCode>{`.`}</p>\n        </blockquote><p parentName=\"section\"><strong parentName=\"p\">{`2. Enable the plugin`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\n\nuse(prisma())\n`}</code></pre></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"getting-started\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#getting-started\",\n            \"aria-label\": \"getting started permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Getting started`}</h2><p parentName=\"section\">{`There are two ways you can start with the Prisma plugin. Either from scratch, or using an existing database.`}</p><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"from-scratch\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#from-scratch\",\n              \"aria-label\": \"from scratch permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`From scratch`}</h3><p parentName=\"section\"><strong parentName=\"p\">{`1. Create a `}<inlineCode parentName=\"strong\">{`schema.prisma`}</inlineCode>{` file`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`//schema.prisma\n\ngenerator prisma_client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  id   Int @id @default(autoincrement())\n  name String\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`2. Add a datasource to your schema`}</strong></p><p parentName=\"section\">{`We recommend you use Postgres but MySQL and SQLite are also supported.`}</p><p parentName=\"section\">{`To add your datasource, simply copy/paste one of the block below at the top of your `}<inlineCode parentName=\"p\">{`schema.prisma`}</inlineCode>{` file`}</p><blockquote parentName=\"section\">\n            <p parentName=\"blockquote\">{`Note: You can also pass the database credentials via a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file. `}<a parentName=\"p\" {...{\n                \"href\": \"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file#using-environment-variables\"\n              }}>{`Read more about it here`}</a></p>\n          </blockquote><p parentName=\"section\"><strong parentName=\"p\">{`Using Postgres`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`//schema.prisma\n\ndatasource db {\n  provider = \"postgres\"\n  url = \"postgresql://USER:PASSWORD@localhost:5432/DATABASE\"\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Using MySQL`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`//schema.prisma\n\ndatasource db {\n  provider = \"mysql\"\n  url = \"mysql://USER:PASSWORD@localhost:3306/DATABASE\"\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Using SQLite`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`//schema.prisma\n\ndatasource db {\n  provider = \"sqlite\"\n  url = \"file:./dev.db\"\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`3. Create a migration file`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-sh\"\n            }}>{`npm run prisma migrate save --experimental\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`4. Migrate your database`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-sh\"\n            }}>{`npm run prisma migrate up --experimental\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`5. You're all set`}</strong></p><p parentName=\"section\">{`You're ready to start working!`}</p></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"from-an-existing-database\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#from-an-existing-database\",\n              \"aria-label\": \"from an existing database permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`From an existing database`}</h3><p parentName=\"section\">{`When starting from an existing database, you should use `}<a parentName=\"p\" {...{\n              \"href\": \"https://www.prisma.io/docs/reference/tools-and-interfaces/introspection\"\n            }}>{`Prisma's instrospection`}</a>{` feature.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`1. Create a `}<inlineCode parentName=\"strong\">{`schema.prisma`}</inlineCode>{` file`}</strong></p><p parentName=\"section\">{`Create a `}<inlineCode parentName=\"p\">{`schema.prisma`}</inlineCode>{` file and add your database credentials in it so that Prisma can introspect your database schema.`}</p><blockquote parentName=\"section\">\n            <p parentName=\"blockquote\">{`Note: You can also pass the database credentials via a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file. `}<a parentName=\"p\" {...{\n                \"href\": \"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file#using-environment-variables\"\n              }}>{`Read more about it here`}</a></p>\n          </blockquote><p parentName=\"section\"><strong parentName=\"p\">{`Using Postgres`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`//schema.prisma\n\ndatasource db {\n  provider = \"postgres\"\n  url = \"postgresql://USER:PASSWORD@localhost:5432/DATABASE\"\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Using MySQL`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`//schema.prisma\n\ndatasource db {\n  provider = \"mysql\"\n  url = \"mysql://USER:PASSWORD@localhost:3306/DATABASE\"\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Using SQLite`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`//schema.prisma\n\ndatasource db {\n  provider = \"sqlite\"\n  url = \"file:./dev.db\"\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`2. Introspect your database`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`npm run prisma introspect\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`3. Generate the Prisma Client`}</strong></p><p parentName=\"section\">{`Add the following block at the top of your `}<inlineCode parentName=\"p\">{`schema.prisma`}</inlineCode>{` file:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`generator prisma_client {\n  provider = \"prisma-client-js\"\n}\n`}</code></pre><p parentName=\"section\">{`The plugin will take care of generating the Prisma Client for you after that.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`4. You're all set`}</strong></p><p parentName=\"section\">{`You're ready to start working!`}</p></section></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"example\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#example\",\n            \"aria-label\": \"example permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Example`}</h2><p parentName=\"section\">{`Given a `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-schema-file.md\"\n          }}>{`Prisma schema`}</a>{` (left), you will be able to project these Prisma models onto your API and expose operations against them (middle) resulting in the GraphQL Schema (right).`}</p><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-prisma\"\n            }}>{`generator prisma_client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  birthDate DateTime\n}\n\nmodel Post {\n  id     String   @id @default(cuid())\n  author User[]\n}\n\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`import { schema } from 'nexus'\n\nschema.queryType({\n  definition(t) {\n    t.crud.user()\n    t.crud.users({\n      ordering: true,\n    })\n    t.crud.post()\n    t.crud.posts({\n      filtering: true,\n    })\n  },\n})\n\nschema.mutationType({\n  definition(t) {\n    t.crud.createOneUser()\n    t.crud.createOnePost()\n    t.crud.deleteOneUser()\n    t.crud.deleteOnePost()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.birthDate()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.author()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-graphql\"\n            }}>{`scalar DateTime\n\ninput DateTimeFilter {\n  equals: DateTime\n  gt: DateTime\n  gte: DateTime\n  in: [DateTime!]\n  lt: DateTime\n  lte: DateTime\n  not: DateTime\n  notIn: [DateTime!]\n}\n\ntype Mutation {\n  createOnePost(\n    data: PostCreateInput!\n  ): Post!\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n  deleteOnePost(\n    where: PostWhereUniqueInput!\n  ): Post\n  deleteOneUser(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\nenum OrderByArg {\n  asc\n  desc\n}\n\ntype Post {\n  author(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n  ): [User!]!\n  id: ID!\n}\n\ninput PostCreateInput {\n  author: UserCreateManyWithoutAuthorInput\n  id: ID\n}\n\ninput PostCreateManyWithoutPostsInput {\n  connect: [PostWhereUniqueInput!]\n  create: [PostCreateWithoutAuthorInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  id: ID\n}\n\ninput PostFilter {\n  every: PostWhereInput\n  none: PostWhereInput\n  some: PostWhereInput\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  author: UserFilter\n  id: StringFilter\n  NOT: [PostWhereInput!]\n  OR: [PostWhereInput!]\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  post(\n    where: PostWhereUniqueInput!\n  ): Post\n  posts(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n    where: PostWhereInput\n  ): [Post!]!\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n  users(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    orderBy: UserOrderByInput\n    skip: Int\n  ): [User!]!\n}\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ntype User {\n  birthDate: DateTime!\n  email: String!\n  id: ID!\n  posts(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n  ): [Post!]!\n}\n\ninput UserCreateInput {\n  birthDate: DateTime!\n  email: String!\n  id: ID\n  posts: PostCreateManyWithoutPostsInput\n}\n\ninput UserCreateManyWithoutAuthorInput {\n  connect: [UserWhereUniqueInput!]\n  create: [UserCreateWithoutPostsInput!]\n}\n\ninput UserCreateWithoutPostsInput {\n  birthDate: DateTime!\n  email: String!\n  id: ID\n}\n\ninput UserFilter {\n  every: UserWhereInput\n  none: UserWhereInput\n  some: UserWhereInput\n}\n\ninput UserOrderByInput {\n  birthDate: OrderByArg\n  email: OrderByArg\n  id: OrderByArg\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  birthDate: DateTimeFilter\n  email: StringFilter\n  id: StringFilter\n  NOT: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  posts: PostFilter\n}\n\ninput UserWhereUniqueInput {\n  email: String\n  id: ID\n}\n`}</code></pre></div></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"plugin-settings\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#plugin-settings\",\n            \"aria-label\": \"plugin settings permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Plugin settings`}</h2><p parentName=\"section\">{`You can `}<em parentName=\"p\">{`optionally`}</em>{` pass some settings to the plugin.`}</p><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"type-definition\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#type-definition\",\n              \"aria-label\": \"type definition permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Type definition`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`export type PrismaClientOptions = {\n  /**\n   * Options to pass to the Prisma Client instantiated by the plugin.\n   * If you want to instantiate your own Prisma Client, use \\`instance\\` instead.\n   */\n  options: ClientOptions\n}\n\nexport type PrismaClientInstance = {\n  /**\n   * Instance of your own Prisma Client. You can import it from 'nexus-plugin-prisma/client'.\n   * If you just want to pass some settings to the Prisma Client, use \\`options\\` instead.\n   */\n  instance: PrismaClient\n}\n\nexport type Settings = {\n  /**\n   * Use this to pass some settings to the Prisma Client instantiated by the plugin or to pass your own Prisma Client\n   */\n  client?: PrismaClientOptions | PrismaClientInstance\n}\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"examples\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#examples\",\n              \"aria-label\": \"examples permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Examples`}</h3><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"configuring-the-prisma-client\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#configuring-the-prisma-client\",\n                \"aria-label\": \"configuring the prisma client permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Configuring the Prisma Client`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\n\nuse(prisma({\n  client: { options: { log: ['query'] } }\n}))\n`}</code></pre></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"using-a-custom-instance-of-the-prisma-client\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#using-a-custom-instance-of-the-prisma-client\",\n                \"aria-label\": \"using a custom instance of the prisma client permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Using a custom instance of the Prisma Client`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\nimport { PrismaClient } from 'nexus-plugin-prisma/client'\n\nuse(prisma({\n  client: { instance: new PrismaClient() }\n}))\n`}</code></pre></section></section></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"recipes\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#recipes\",\n            \"aria-label\": \"recipes permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Recipes`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"projecting-prisma-model-fields-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#projecting-prisma-model-fields-docsify-ignore\",\n              \"aria-label\": \"projecting prisma model fields docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Projecting Prisma Model Fields {docsify-ignore}`}</h3><p parentName=\"section\">{`Exposing one of your Prisma models in your GraphQL API`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.content()\n  },\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"simple-computed-graphql-fields-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#simple-computed-graphql-fields-docsify-ignore\",\n              \"aria-label\": \"simple computed graphql fields docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Simple Computed GraphQL Fields {docsify-ignore}`}</h3><p parentName=\"section\">{`You can add computed fields to a GraphQL object using the standard GraphQL Nexus API.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.objectType({\n  name: \"Post\",\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.content()\n    t.string(\"uppercaseTitle\", {\n      resolve({ title }, args, ctx) {\n        return title.toUpperCase(),\n      }\n    })\n  },\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"complex-computed-graphql-fields-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#complex-computed-graphql-fields-docsify-ignore\",\n              \"aria-label\": \"complex computed graphql fields docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Complex Computed GraphQL Fields {docsify-ignore}`}</h3><p parentName=\"section\">{`If you need more complicated logic for your computed field (e.g. have access to some information from the database), you can use the `}<inlineCode parentName=\"p\">{`prisma`}</inlineCode>{` instance that's attached to the context and implement your resolver based on that.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.content()\n    t.string('anotherComputedField', {\n      async resolve(_parent, _args, ctx) {\n        const databaseInfo = await ctx.prisma.someModel.someOperation(...)\n        const result = doSomething(databaseInfo)\n        return result\n      }\n    })\n  }\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"project-a-prisma-field-to-a-differently-named-graphql-field-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#project-a-prisma-field-to-a-differently-named-graphql-field-docsify-ignore\",\n              \"aria-label\": \"project a prisma field to a differently named graphql field docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Project a Prisma Field to a Differently Named GraphQL Field {docsify-ignore}`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.content({\n      alias: 'body',\n    })\n  },\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"publish-full-featured-reads-on-a-prisma-model-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#publish-full-featured-reads-on-a-prisma-model-docsify-ignore\",\n              \"aria-label\": \"publish full featured reads on a prisma model docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Publish Full-Featured Reads on a Prisma Model {docsify-ignore}`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.queryType({\n  definition(t) {\n    t.crud.post()\n    t.crud.posts({\n      ordering: true,\n      filtering: true,\n    })\n  },\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"publish-writes-on-a-prisma-model-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#publish-writes-on-a-prisma-model-docsify-ignore\",\n              \"aria-label\": \"publish writes on a prisma model docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Publish Writes on a Prisma Model {docsify-ignore}`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.mutationType({\n  definition(t) {\n    t.crud.createPost()\n    t.crud.updatePost()\n    t.crud.updateManyPost()\n    t.crud.upsertPost()\n    t.crud.deletePost()\n    t.crud.deleteManyPost()\n  },\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"publish-customized-reads-on-a-prisma-model-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#publish-customized-reads-on-a-prisma-model-docsify-ignore\",\n              \"aria-label\": \"publish customized reads on a prisma model docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Publish Customized Reads on a Prisma Model {docsify-ignore}`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.queryType({\n  definition(t) {\n    t.crud.posts({\n      filtering: {\n        id: true,\n        title: true,\n      },\n      ordering: { title: true },\n    })\n  },\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"publish-autogenerated-mutations-with-computed-input-values-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#publish-autogenerated-mutations-with-computed-input-values-docsify-ignore\",\n              \"aria-label\": \"publish autogenerated mutations with computed input values docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Publish Autogenerated Mutations with Computed Input Values {docsify-ignore}`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.mutationType({\n  definition(t) {\n    /* \n    Assuming our prisma model for User has a createdByBrowser field,\n    this removes it from the input type but ensures the value is\n    inferred from context and passed to Prisma Client.\n    */\n    t.crud.createOneUser({\n      computedInputs: {\n        createdByBrowser: ({\n          args,\n          ctx,\n          info,\n        }) => ctx.session.browser,\n      },\n    })\n  },\n})\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"globally-remove-a-field-from-input-types-and-infer-its-value-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#globally-remove-a-field-from-input-types-and-infer-its-value-docsify-ignore\",\n              \"aria-label\": \"globally remove a field from input types and infer its value docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Globally Remove a Field from Input Types and Infer its Value {docsify-ignore}`}</h3><p parentName=\"section\">{`todo (this is not possible in the framework yet)`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`nexusPrismaPlugin({\n  ...other config...\n  /*\n  Remove fields named \"user\" from all input types. When resolving\n  a request whose data contains any of these types, the value is inferred\n  from context and passed to Prisma Client, even if it's nested. This is great for\n  creating data associated with one user's account.\n  */\n  computedInputs: {\n    user: ({ args, ctx, info }) => ({\n      connect: {\n        id: ctx.userId,\n      },\n    }),\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.mutationType({\n  definition(t) {\n    t.crud.createOnePost()\n  },\n})\n`}</code></pre><p parentName=\"section\">{`Without computedInputs:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-graphql\"\n            }}>{`mutation createOnePost {\n  createOnePost(\n    data: {\n      title: \"Automatically generate clean APIs!\"\n      image: {\n        url: \"https://example.com/images/prancing-unicorns\"\n        user: {\n          connect: { id: 1 }\n        }\n      }\n      user: { connect: { id: 1 } }\n    }\n  )\n}\n`}</code></pre><p parentName=\"section\">{`With computedInputs:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-graphql\"\n            }}>{`mutation createOnePost {\n  createOnePost(\n    data: {\n      title: \"Automatically generate clean APIs!\"\n      image: {\n        url: \"https://example.com/images/prancing-unicorns\"\n      }\n    }\n  )\n}\n`}</code></pre></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"publish-model-writes-along-side-prisma-client-resolved-fields-docsify-ignore\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#publish-model-writes-along-side-prisma-client-resolved-fields-docsify-ignore\",\n              \"aria-label\": \"publish model writes along side prisma client resolved fields docsify ignore permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Publish Model Writes Along Side Prisma Client-Resolved Fields {docsify-ignore}`}</h3><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`schema.mutationType({\n  definition(t) {\n    t.crud.createUser()\n    t.crud.updateUser()\n    t.crud.deleteUser()\n    t.crud.deletePost()\n\n    t.field('createDraft', {\n      type: 'Post',\n      args: {\n        title: stringArg(),\n        content: stringArg({\n          nullable: true,\n        }),\n      },\n      resolve: (\n        parent,\n        { title, content },\n        ctx\n      ) => {\n        return ctx.prisma.posts.createPost(\n          { title, content }\n        )\n      },\n    })\n\n    t.field('publish', {\n      type: 'Post',\n      nullable: true,\n      args: {\n        id: idArg(),\n      },\n      resolve(\n        parent,\n        { id },\n        ctx\n      ) {\n        return ctx.prisma.posts.updatePost(\n          {\n            where: { id },\n            data: {\n              published: true,\n            },\n          }\n        )\n      },\n    })\n  },\n})\n`}</code></pre></section></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"worktime-integration\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#worktime-integration\",\n            \"aria-label\": \"worktime integration permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Worktime Integration`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"nexus-dev\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#nexus-dev\",\n              \"aria-label\": \"nexus dev permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h3\">{`nexus dev`}</inlineCode></h3><p parentName=\"section\">{`When running `}<inlineCode parentName=\"p\">{`nexus dev`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`nexus-plugin-prisma`}</inlineCode>{` will make sure your `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/prisma/prisma-client-js\"\n            }}><inlineCode parentName=\"a\">{`Prisma Client`}</inlineCode></a>{` is up-to-date with your Prisma Schema by running your Prisma generators for you.`}</p><p parentName=\"section\">{`Updates to your `}<inlineCode parentName=\"p\">{`schema.prisma`}</inlineCode>{` file will also be detected and will give you hints about the next steps to properly migrate your database.`}</p></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"nexus-build\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#nexus-build\",\n              \"aria-label\": \"nexus build permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h3\">{`nexus build`}</inlineCode></h3><p parentName=\"section\">{`When running `}<inlineCode parentName=\"p\">{`nexus build`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`nexus-plugin-prisma`}</inlineCode>{` will make sure your `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/prisma/prisma-client-js\"\n            }}><inlineCode parentName=\"a\">{`Prisma Client`}</inlineCode></a>{` is up-to-date with your Prisma Schema, thus making sure your application is safely accessing your database.`}</p></section></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"testtime-integration\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#testtime-integration\",\n            \"aria-label\": \"testtime integration permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Testtime Integration`}</h2><p parentName=\"section\"><inlineCode parentName=\"p\">{`nexus-plugin-prisma`}</inlineCode>{` augments the testing component of Nexus with an instance of the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/prisma/prisma-client-js\"\n          }}><inlineCode parentName=\"a\">{`Prisma Client`}</inlineCode></a>{`, to help you easily seed your database for your tests.`}</p><p parentName=\"section\">{`To learn more about its usage, `}<a parentName=\"p\" {...{\n            \"href\": \"/guides/testing?id=with-a-database\"\n          }}>{`head to the Testing section`}</a>{`.`}</p></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"runtime-integration\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#runtime-integration\",\n            \"aria-label\": \"runtime integration permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Runtime Integration`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"access-to-the-prisma-client\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#access-to-the-prisma-client\",\n              \"aria-label\": \"access to the prisma client permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Access to the Prisma Client`}</h3><p parentName=\"section\">{`At runtime, `}<inlineCode parentName=\"p\">{`nexus-plugin-prisma`}</inlineCode>{` will add a `}<inlineCode parentName=\"p\">{`db`}</inlineCode>{` property containing an instance of the `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/prisma/prisma-client-js\"\n            }}><inlineCode parentName=\"a\">{`Prisma Client`}</inlineCode></a>{` to your GraphQL resolvers context.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n              \"id\": \"example-1\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h5\" {...{\n                \"href\": \"#example-1\",\n                \"aria-label\": \"example 1 permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Example`}</h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`import { schema } from 'nexus'\n\nschema.objectType({\n  name: 'Query',\n  definition(t) {\n    t.list.field('users', {\n      type: 'User',\n      resolve(parent, args, ctx) {\n        return ctx.db.user.findMany() // <== \\`ctx.db\\` is your Prisma Client instance\n      },\n    })\n  },\n})\n`}</code></pre></section></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"tmodel\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#tmodel\",\n              \"aria-label\": \"tmodel permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h3\">{`t.model`}</inlineCode></h3><p parentName=\"section\">{`Only available within `}<a parentName=\"p\" {...{\n              \"href\": \"/api/modules/main/exports/schema?id=objecttype\"\n            }}><inlineCode parentName=\"a\">{`schema.objectType`}</inlineCode></a>{` definitions.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`t.model`}</inlineCode>{` contains configurable `}<em parentName=\"p\">{`field projectors`}</em>{` that you use for projecting fields of your `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/data-modeling.md#models\"\n            }}>{`Prisma models`}</a>{` onto your `}<a parentName=\"p\" {...{\n              \"href\": \"https://graphql.github.io/graphql-spec/June2018/#sec-Objects\"\n            }}>{`GraphQL Objects`}</a>{`. The precise behaviour of field projectors vary by the Prisma type being projected. Refer to the respective sub-sections for details.`}</p><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"model-object-mapping\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#model-object-mapping\",\n                \"aria-label\": \"model object mapping permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Model-Object Mapping`}</h4><p parentName=\"section\"><inlineCode parentName=\"p\">{`t.model`}</inlineCode>{` will either have field projectors for the Prisma model whose name matches that of the GraphQL `}<inlineCode parentName=\"p\">{`Object`}</inlineCode>{`, or if the GraphQL `}<inlineCode parentName=\"p\">{`Object`}</inlineCode>{` is of a name that does not match any of your Prisma models then `}<inlineCode parentName=\"p\">{`t.model`}</inlineCode>{` becomes a function allowing you to specify the mapping, after which the field projectors become available.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-2\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-2\",\n                  \"aria-label\": \"example 2 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id String @id @default(cuid())\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n  },\n})\n\nschema.objectType({\n  name: 'Person',\n  definition(t) {\n    t.model('User').id()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type User {\n  id: ID!\n}\n\ntype Person {\n  id: ID!\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"enum\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#enum\",\n                \"aria-label\": \"enum permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Enum`}</h4><p parentName=\"section\"><em parentName=\"p\">{`Auto-Projection`}</em></p><p parentName=\"section\">{`When a Prisma enum field is projected, the corresponding enum type will be automatically projected too (added to the GraphQL schema).`}</p><p parentName=\"section\"><em parentName=\"p\">{`Member Customization`}</em></p><p parentName=\"section\">{`You can customize the projected enum members by defining the enum yourself in Nexus. `}<inlineCode parentName=\"p\">{`nexus-prisma`}</inlineCode>{` will treat the name collision as an intent to override and so disable auto-projection.`}</p><p parentName=\"section\"><em parentName=\"p\">{`Option Notes`}</em></p><p parentName=\"section\">{`Currently Prisma enums cannot be `}<a parentName=\"p\" {...{\n                \"href\": \"#alias\"\n              }}>{`aliased`}</a>{` (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/474\"\n              }}>{`issue`}</a>{`). They also cannot be `}<a parentName=\"p\" {...{\n                \"href\": \"#type\"\n              }}>{`type mapped`}</a>{` since enum types cannot be mapped yet (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/473\"\n              }}>{`issue`}</a>{`).`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options\",\n                  \"aria-label\": \"options permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\">{`n/a`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this\",\n                  \"aria-label\": \"graphql schema contributions how to read this permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`type M {\n  MEF: E # ! <-- if not ? or @default\n}\n\n# if not defined by user\nenum E {\n  EV\n}\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-3\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-3\",\n                  \"aria-label\": \"example 3 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  role Role\n  mood Mood\n}\n\nenum Mood {\n  HAPPY\n  SAD\n  COMFUSED\n}\n\nenum Role {\n  MEMBER\n  EDITOR\n  ADMIN\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`enumType({\n  name: 'Role',\n  members: ['MEMBER', 'EDITOR'],\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.role()\n    t.model.mood()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`enum Mood {\n  HAPPY\n  SAD\n  CONFUSED\n}\n\nenum Role {\n  MEMBER\n  EDITOR\n}\n\ntype User {\n  role: Role\n  mood: Mood\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"scalar\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#scalar\",\n                \"aria-label\": \"scalar permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Scalar`}</h4><p parentName=\"section\"><em parentName=\"p\">{`Scalar Mapping`}</em></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/data-modeling.md#scalar-types\"\n              }}>{`Prisma scalars`}</a>{` are mapped to `}<a parentName=\"p\" {...{\n                \"href\": \"https://graphql.org/learn/schema/#scalar-types\"\n              }}>{`GraphQL scalars`}</a>{` as follows:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`Prisma       GraphQL\n------       -------\nBoolean   <>  Boolean\nString    <>  String\nInt       <>  Int\nFloat     <>  Float\ncuid()    <>  ID\nDateTime  <>  DateTime (custom scalar)\nuuid()    <>  UUID (custom scalar)\n`}</code></pre><p parentName=\"section\"><em parentName=\"p\">{`Auto-Projection`}</em></p><p parentName=\"section\">{`When a Prisma scalar is encountered that does not map to the standard GraphQL scalar types, it will be automatically projected (custom scalar added to the GraphQL schema). Examples include `}<inlineCode parentName=\"p\">{`DateTime`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`UUID`}</inlineCode>{`.`}</p><p parentName=\"section\"><em parentName=\"p\">{`Option Notes`}</em></p><p parentName=\"section\">{`It is not possible to use `}<a parentName=\"p\" {...{\n                \"href\": \"#type\"\n              }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` because there is currently no way for a Prisma scalar to map to a differently named GraphQL scalar.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-1\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-1\",\n                  \"aria-label\": \"graphql schema contributions how to read this 1 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`type M {\n  MSF: S # ! <-- if not ? or @default\n}\n\n# if not matching a standard GQL scalar\nscalar S\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-1\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-1\",\n                  \"aria-label\": \"options 1 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-4\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-4\",\n                  \"aria-label\": \"example 4 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Post {\n  id: Int!\n  email: String!\n  scheduledPublish: DateTime\n  rating: Float!\n  active: Boolean!\n}\n\nscalar DateTime\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.scheduledPublish()\n    t.model.rating()\n    t.model.active()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`\nmodel User {\n  id               String     @id @default(cuid())\n  email            String\n  scheduledPublish DateTime?\n  rating           Float\n  active           Boolean\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"relation\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#relation\",\n                \"aria-label\": \"relation permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Relation`}</h4><p parentName=\"section\">{`Projecting relational fields only affects the current GraphQL object being defined. That is, the model that the field relates to is not auto-projected. This is a design choice intended to keep the `}<inlineCode parentName=\"p\">{`nexus-prisma`}</inlineCode>{` system predictable for you. If you forget to project a relation you will receive feedback at build/boot time letting you know.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-2\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-2\",\n                  \"aria-label\": \"options 2 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-2\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-2\",\n                  \"aria-label\": \"graphql schema contributions how to read this 2 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`type M {\n  MRF: RM # ! <-- if not ?\n}\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-5\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-5\",\n                  \"aria-label\": \"example 5 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  latestPost Post?\n}\n\nmodel Post {\n  title String\n  body String\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.latestPost()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type User {\n  latestPost: Post\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"list-enum\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#list-enum\",\n                \"aria-label\": \"list enum permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`List Enum`}</h4><p parentName=\"section\">{`Like `}<a parentName=\"p\" {...{\n                \"href\": \"#enum\"\n              }}>{`enums`}</a>{`. It is not possible to order (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/466\"\n              }}>{`issue`}</a>{`) paginate (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/468\"\n              }}>{`issue`}</a>{`) or filter (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/467\"\n              }}>{`issue`}</a>{`) enum lists.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-3\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-3\",\n                  \"aria-label\": \"graphql schema contributions how to read this 3 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`type M {\n  MLEF: [E!]!\n}\n\n# if not defined by user\nenum E {\n  EV\n}\n`}</code></pre></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"list-scalar\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#list-scalar\",\n                \"aria-label\": \"list scalar permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`List Scalar`}</h4><p parentName=\"section\">{`Like `}<a parentName=\"p\" {...{\n                \"href\": \"#scalar\"\n              }}>{`scalars`}</a>{`. It is not possible to order (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/470\"\n              }}>{`issue`}</a>{`) paginate (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/471\"\n              }}>{`issue`}</a>{`) or filter (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/469\"\n              }}>{`issue`}</a>{`) scalar lists.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-4\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-4\",\n                  \"aria-label\": \"graphql schema contributions how to read this 4 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`type M {\n  MLSF: [S!]!\n}\n`}</code></pre></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"list-relation\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#list-relation\",\n                \"aria-label\": \"list relation permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`List Relation`}</h4><p parentName=\"section\">{`Like `}<a parentName=\"p\" {...{\n                \"href\": \"#relation\"\n              }}>{`relations`}</a>{` but also supports batch related options.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-3\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-3\",\n                  \"aria-label\": \"options 3 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#filtering\"\n                }}><inlineCode parentName=\"a\">{`filtering`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#pagination\"\n                }}><inlineCode parentName=\"a\">{`pagination`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#ordering\"\n                }}><inlineCode parentName=\"a\">{`ordering`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-5\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-5\",\n                  \"aria-label\": \"graphql schema contributions how to read this 5 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`type M {\n  MLRF: [RM!]!\n}\n`}</code></pre></section></section></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"tcrud\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#tcrud\",\n              \"aria-label\": \"tcrud permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h3\">{`t.crud`}</inlineCode></h3><p parentName=\"section\">{`Only available within GraphQL `}<inlineCode parentName=\"p\">{`Query`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Mutation`}</inlineCode>{` definitions.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`t.crud`}</inlineCode>{` contains configurable `}<em parentName=\"p\">{`operation publishers`}</em>{` that you use for exposing create, read, update, and delete mutations against your projected Prisma models.`}</p><p parentName=\"section\">{`There are 8 kinds of operations (reflecting a subset of `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/prisma/prisma-client-js\"\n            }}>{`Prisma Client`}</a>{`'s capabilities). An `}<em parentName=\"p\">{`operation publisher`}</em>{` is the combination of some operation kind and a particular Prisma model. Thus the number of operation publishers on `}<inlineCode parentName=\"p\">{`t.crud`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`Prisma model count × operation kind count`}</inlineCode>{`. So for example if you defined 20 Prisma models then you would see 160 operation publishers on `}<inlineCode parentName=\"p\">{`t.crud`}</inlineCode>{`.`}</p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n              \"id\": \"example-6\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h5\" {...{\n                \"href\": \"#example-6\",\n                \"aria-label\": \"example 6 permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-prisma\"\n                }}>{`model User {\n  ...\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-ts\"\n                }}>{`schema.queryType({\n  definition(t) {\n    t.crud.user()\n    t.crud.users()\n  },\n})\n\nschema.mutationType({\n  definition(t) {\n    t.crud.createOneUser()\n    t.crud.updateOneUser()\n    t.crud.upsertOneUser()\n    t.crud.deleteOneUser()\n\n    t.crud.updateManyUser()\n    t.crud.deleteManyUser()\n  },\n})\n`}</code></pre></div></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"create\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#create\",\n                \"aria-label\": \"create permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Create`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.createOne<M>\n`}</code></pre><p parentName=\"section\">{`Allow clients to create one record at at time of the respective Prisma model.`}</p><p parentName=\"section\">{`Relation fields may be connected with an existing record or a sub-create may be inlined (generally referred to as `}<em parentName=\"p\">{`nested mutations`}</em>{`). If the relation is a `}<inlineCode parentName=\"p\">{`List`}</inlineCode>{` then multiple connections or sub-creates are permitted.`}</p><p parentName=\"section\">{`Inlined creates are very similar to top-level ones but have the important difference that the sub-create has excluded the field where supplying its relation to the type of parent `}<inlineCode parentName=\"p\">{`Object`}</inlineCode>{` being created would `}<em parentName=\"p\">{`normally be`}</em>{`. This is because a sub-create forces its record to relate to the parent one.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#create\"\n              }}><inlineCode parentName=\"a\">{`create`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-4\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-4\",\n                  \"aria-label\": \"options 4 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-6\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-6\",\n                  \"aria-label\": \"graphql schema contributions how to read this 6 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  createOne_M(data: M_CreateInput): M!\n}\n\ninput M_CreateInput {\n  MSF: S                       # ! <-- if not ? or @default\n  MRF: RM_CreateManyWithout_M  # ! <-- if not ? or @default\n}\n\ninput RM_CreateManyWithout_M {\n  connect: [RM_WhereUniqueInput!]\n  create: [RM_CreateWithout_M_Input!]\n}\n\ninput RM_WhereUniqueInput {\n  MRF@unique: S\n}\n\ninput RM_CreateWithout_M_Input = RM_CreateInput - RMRF: M\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-7\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-7\",\n                  \"aria-label\": \"example 7 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.mutationType({\n  definition(t) {\n    t.crud.createOneUser()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.body()\n    t.model.author()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Mutation {\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n  body: String!\n}\n\ninput PostCreateManyWithoutPostsInput {\n  connect: [PostWhereUniqueInput!]\n  create: [PostCreateWithoutAuthorInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  title: String!\n  body: String!\n}\n\ninput PostWhereUniqueInput {\n  id: Int\n  title: String\n}\n\ntype User {\n  email: String!\n  id: Int!\n  posts: [Post!]!\n}\n\ninput UserCreateInput {\n  email: String!\n  posts: PostCreateManyWithoutPostsInput\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`mutation simple {\n  createOneUser(\n    data: {\n      email: \"newton@prisma.io\"\n    }\n  ) {\n    id\n  }\n}\n\nmutation connectRelation {\n  createOneUser(\n    data: {\n      email: \"newton@prisma.io\"\n      posts: { connect: [1643] }\n    }\n  ) {\n    id\n  }\n}\n\nmutation createRelation {\n  createOneUser(\n    data: {\n      email: \"newton@prisma.io\"\n      posts: {\n        create: [\n          {\n            title: \"...\"\n            body: \"...\"\n          }\n        ]\n      }\n    }\n  ) {\n    id\n    posts {\n      title\n    }\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"read\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#read\",\n                \"aria-label\": \"read permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Read`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.<M>\n`}</code></pre><p parentName=\"section\">{`Allow clients to find one particular record of the respective Prisma model. They may search by any Prisma model field that has been marked with `}<inlineCode parentName=\"p\">{`@unique`}</inlineCode>{` attribute.`}</p><p parentName=\"section\">{`The ability for list fields to be `}<a parentName=\"p\" {...{\n                \"href\": \"#filtering\"\n              }}>{`filtered`}</a>{`, `}<a parentName=\"p\" {...{\n                \"href\": \"#ordering\"\n              }}>{`ordered`}</a>{`, or `}<a parentName=\"p\" {...{\n                \"href\": \"#pagination\"\n              }}>{`paginated`}</a>{` depends upon if those features have been enabled for those GraphQL objects via `}<a parentName=\"p\" {...{\n                \"href\": \"#list-relation\"\n              }}><inlineCode parentName=\"a\">{`t.model.<ListRelation>`}</inlineCode></a>{`.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#findone\"\n              }}><inlineCode parentName=\"a\">{`findOne`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-5\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-5\",\n                  \"aria-label\": \"options 5 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-7\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-7\",\n                  \"aria-label\": \"graphql schema contributions how to read this 7 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  M(where: M_WhereUniqueInput): M!\n}\n\ninput M_WhereUniqueInput {\n  MF: S # if @unique\n}\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-8\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-8\",\n                  \"aria-label\": \"example 8 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    Int    @id @unique\n  email String @unique\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.queryType({\n  definition(t) {\n    t.user()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype User {\n  id: Int!\n  email: String!\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n  email: String\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`query simple {\n  user(\n    where: {\n      email: \"newton@prisma.io\"\n    }\n  ) {\n    id\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"update\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#update\",\n                \"aria-label\": \"update permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Update`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.updateOne<M>\n`}</code></pre><p parentName=\"section\">{`Allow clients to update one particular record at a time of the respective Prisma model.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#update\"\n              }}><inlineCode parentName=\"a\">{`update`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-6\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-6\",\n                  \"aria-label\": \"options 6 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-8\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-8\",\n                  \"aria-label\": \"graphql schema contributions how to read this 8 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  updateOne_M(data: M_UpdateInput!, where: M_WhereUniqueInput!): M\n}\n\ninput M_WhereUniqueInput {\n  MF: S # if @unique\n}\n\ninput M_UpdateInput {\n  MSF: S\n  MRF: RM_UpdateManyWithout_M_Input\n}\n\ninput RM_UpdateManyWithout_M_Input {\n  connect: [RM_WhereUniqueInput!]\n  create: [RM_CreateWithout_M_Input!]\n  delete: [RM_WhereUniqueInput!]\n  deleteMany: [RM_ScalarWhereInput!] # see batch filtering reference\n  disconnect: [RM_WhereUniqueInput!]\n  set: [RM_WhereUniqueInput!]\n  update: [RM_UpdateWithWhereUniqueWithout_M_Input!]\n  updateMany: [RM_UpdateManyWithWhereNestedInput!]\n  upsert: [RM_UpsertWithWhereUniqueWithout_M_Input!]\n}\n\ninput RM_WhereUniqueInput {} # recurse pattern like M_WhereUniqueInput\n\ninput RM_CreateWithout_M_Input {} # RM_CreateInput - RMRF: M\n\ninput RM_UpdateWithWhereUniqueWithout_M_Input {\n  data: RM_UpdateWithout_M_DataInput!\n  where: RM_WhereUniqueInput!\n}\ninput RM_UpdateWithout_M_DataInput {\n  RMSF: S\n}\n\ninput RM_UpdateManyWithWhereNestedInput {\n  data: RM_UpdateManyDataInput!\n  where: RM_ScalarWhereInput! # see batch filering reference\n}\n\ninput RM_UpsertWithWhereUniqueWithout_M_Input {\n  create: RM_CreateWithout_M_Input!\n  update: RM_UpdateWithout_M_DataInput!\n  where: RM_WhereUniqueInput!\n}\n`}</code></pre><p parentName=\"section\">{`For `}<inlineCode parentName=\"p\">{`S_ScalarWhereInput`}</inlineCode>{` see `}<a parentName=\"p\" {...{\n                  \"href\": \"#batch-filtering\"\n                }}>{`batch filtering`}</a>{` contributions.`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-9\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-9\",\n                  \"aria-label\": \"example 9 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.mutationType({\n  definition(t) {\n    t.crud.updateOneUser()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.author()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`input IntFilter {\n  equals: Int\n  gt: Int\n  gte: Int\n  in: [Int!]\n  lt: Int\n  lte: Int\n  not: Int\n  notIn: [Int!]\n}\n\ntype Mutation {\n  updateOneUser(\n    data: UserUpdateInput!\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n}\n\ninput PostCreateWithoutAuthorInput {\n  body: String!\n  title: String!\n}\n\ninput PostScalarWhereInput {\n  AND: [PostScalarWhereInput!]\n  body: StringFilter\n  id: IntFilter\n  NOT: [PostScalarWhereInput!]\n  OR: [PostScalarWhereInput!]\n  title: StringFilter\n}\n\ninput PostUpdateManyDataInput {\n  body: String\n  id: Int\n  title: String\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  connect: [PostWhereUniqueInput!]\n  create: [PostCreateWithoutAuthorInput!]\n  delete: [PostWhereUniqueInput!]\n  deleteMany: [PostScalarWhereInput!]\n  disconnect: [PostWhereUniqueInput!]\n  set: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  data: PostUpdateManyDataInput!\n  where: PostScalarWhereInput!\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  body: String\n  id: Int\n  title: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  data: PostUpdateWithoutAuthorDataInput!\n  where: PostWhereUniqueInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  create: PostCreateWithoutAuthorInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  where: PostWhereUniqueInput!\n}\n\ninput PostWhereUniqueInput {\n  id: Int\n  title: String\n}\n\ntype Query {\n  ok: Boolean!\n}\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ntype User {\n  email: String!\n  id: Int!\n  posts: [Post!]!\n}\n\ninput UserUpdateInput {\n  email: String\n  id: Int\n  posts: PostUpdateManyWithoutAuthorInput\n}\n\ninput UserWhereUniqueInput {\n  email: String\n  id: Int\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`mutation simple {\n  updateOneUser(\n    where: { id: 1643 }\n    data: {\n      email: \"locke@prisma.io\"\n    }\n  ) {\n    id\n    email\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"upsert\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#upsert\",\n                \"aria-label\": \"upsert permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Upsert`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.upsertOne<M>\n`}</code></pre><p parentName=\"section\">{`Allow clients to update or create (aka. insert) one particular record at a time of the respective Prisma model. This operation is a combination of `}<a parentName=\"p\" {...{\n                \"href\": \"#create\"\n              }}>{`create`}</a>{` and `}<a parentName=\"p\" {...{\n                \"href\": \"#update\"\n              }}>{`update`}</a>{`. The generated GraphQL mutation matches `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`where`}</inlineCode>{` args to those of update, and `}<inlineCode parentName=\"p\">{`create`}</inlineCode>{` to that of `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` arg in create. Unlike update, upsert guarantees a return value.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#upsert\"\n              }}><inlineCode parentName=\"a\">{`upsert`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-7\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-7\",\n                  \"aria-label\": \"options 7 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-9\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-9\",\n                  \"aria-label\": \"graphql schema contributions how to read this 9 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  upsertOne_M(\n    create: M_CreateInput!      # like createOne(data ...)\n    data: M_UpdateInput!        # like updateOne(data ...)\n    where: M_WhereUniqueInput!  # like updateOne(where ...)\n  ): M!\n}\n`}</code></pre><p parentName=\"section\">{`For `}<inlineCode parentName=\"p\">{`M_UpdateInput`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`M_WhereUniqueInput`}</inlineCode>{` see `}<a parentName=\"p\" {...{\n                  \"href\": \"#update\"\n                }}>{`update`}</a>{` contributions.`}<br parentName=\"p\"></br>{`\n`}{`For `}<inlineCode parentName=\"p\">{`M_CreateInput`}</inlineCode>{` see `}<a parentName=\"p\" {...{\n                  \"href\": \"#create\"\n                }}>{`create`}</a>{` contributions.`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-10\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-10\",\n                  \"aria-label\": \"example 10 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><p parentName=\"section\">{`Refer to `}<a parentName=\"p\" {...{\n                  \"href\": \"#update\"\n                }}>{`update`}</a>{` and `}<a parentName=\"p\" {...{\n                  \"href\": \"#create\"\n                }}>{`create`}</a>{`.`}</p></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"delete\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#delete\",\n                \"aria-label\": \"delete permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Delete`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.deleteOne<M>\n`}</code></pre><p parentName=\"section\">{`Allow clients to delete one particular record at a time of the respective Prisma model.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#delete\"\n              }}><inlineCode parentName=\"a\">{`delete`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-8\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-8\",\n                  \"aria-label\": \"options 8 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-10\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-10\",\n                  \"aria-label\": \"graphql schema contributions how to read this 10 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  deleteOne_M(where: M_WhereUniqueInput): M\n}\n\ninput M_WhereUniqueInput {\n  MF@unique: S\n}\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-11\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-11\",\n                  \"aria-label\": \"example 11 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.mutationType({\n  definition(t) {\n    t.crud.deleteOneUser()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.email()\n    t.model.posts()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.author()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Mutation {\n  deleteOneUser(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n}\n\ntype User {\n  email: String!\n  id: Int!\n  posts: [Post!]!\n}\n\ninput UserWhereUniqueInput {\n  email: String\n  id: Int\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`mutation simple {\n  deleteOneUser(\n    where: { id: 1643 }\n  ) {\n    id\n    email\n    posts {\n      id\n      title\n    }\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"batch-read\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#batch-read\",\n                \"aria-label\": \"batch read permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Batch Read`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.<M Pluralized>\n`}</code></pre><p parentName=\"section\">{`Allow clients to fetch multiple records at once of the respective Prisma model.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#findMany\"\n              }}><inlineCode parentName=\"a\">{`findMany`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-9\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-9\",\n                  \"aria-label\": \"options 9 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#filtering\"\n                }}><inlineCode parentName=\"a\">{`filtering`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#pagination\"\n                }}><inlineCode parentName=\"a\">{`pagiantion`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#ordering\"\n                }}><inlineCode parentName=\"a\">{`ordering`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#computedInputs-local\"\n                }}><inlineCode parentName=\"a\">{`computedInputs`}</inlineCode></a>{`(`}<a parentName=\"p\" {...{\n                  \"href\": \"#computedInputs-local\"\n                }}>{`local`}</a>{` and `}<a parentName=\"p\" {...{\n                  \"href\": \"#computedInputs-global\"\n                }}>{`global`}</a>{`)`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-11\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-11\",\n                  \"aria-label\": \"graphql schema contributions how to read this 11 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`type Query {\n  M_s: [M!]!\n}\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-12\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-12\",\n                  \"aria-label\": \"example 12 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    Int    @id @unique\n  email String @unique\n  posts Post[]\n}\n\nmodel Post {\n  id     Int    @id\n  title  String @unique\n  body   String\n  author User\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.queryType({\n  definition(t) {\n    t.users()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Query {\n  users: [User!]!\n}\n\ntype Post {\n  author: User!\n  id: Int!\n  title: String!\n}\n\ntype User {\n  email: String!\n  id: ID!\n  posts: [Post!]!\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"batch-update\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#batch-update\",\n                \"aria-label\": \"batch update permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Batch Update`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.updateMany<M>\n`}</code></pre><p parentName=\"section\">{`Allow clients to update multiple records of the respective Prisma model at once. Unlike `}<a parentName=\"p\" {...{\n                \"href\": \"#update\"\n              }}><inlineCode parentName=\"a\">{`update`}</inlineCode></a>{` nested relation-updating is not supported here. Clients get back a `}<inlineCode parentName=\"p\">{`BatchPayload`}</inlineCode>{` object letting them know the number of affected records, but not access to the fields of affected records.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#updateMany\"\n              }}><inlineCode parentName=\"a\">{`updateMany`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-10\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-10\",\n                  \"aria-label\": \"options 10 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-12\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-12\",\n                  \"aria-label\": \"graphql schema contributions how to read this 12 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  updateMany_M(where: M_WhereInput, data:  M_UpdateManyMutationInput): BatchPayload!\n}\n\ninput M_UpdateManyMutationInput {\n  MSF: S\n  MEF: E\n  # not possible to batch update relations\n}\n\ntype BatchPayload {\n  count: Int!\n}\n`}</code></pre><p parentName=\"section\">{`For `}<inlineCode parentName=\"p\">{`M_WhereInput`}</inlineCode>{` see `}<a parentName=\"p\" {...{\n                  \"href\": \"#batch-filtering\"\n                }}>{`batch filtering contributions`}</a>{`.`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-13\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-13\",\n                  \"aria-label\": \"example 13 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation updateManyUser(where: {...}, data: { status: ACTIVE }) {\n  count\n}\n`}</code></pre><p parentName=\"section\">{`See `}<a parentName=\"p\" {...{\n                  \"href\": \"#filtering\"\n                }}>{`filtering option`}</a>{` example. Differences are: operation semantics (update things); return type; `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` arg.`}</p></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"batch-delete\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#batch-delete\",\n                \"aria-label\": \"batch delete permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Batch Delete`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`t.crud.deleteMany<M>\n`}</code></pre><p parentName=\"section\">{`Allow clients to delete multiple records of the respective Prisma model at once. Clients get back a `}<inlineCode parentName=\"p\">{`BatchPayload`}</inlineCode>{` object letting them know the number of affected records, but not access to the fields of affected records.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Underlying Prisma Client Function`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md#deleteMany\"\n              }}><inlineCode parentName=\"a\">{`deleteMany`}</inlineCode></a></p><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"options-11\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#options-11\",\n                  \"aria-label\": \"options 11 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Options`}</h5><p parentName=\"section\"><a parentName=\"p\" {...{\n                  \"href\": \"#type\"\n                }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                  \"href\": \"#alias\"\n                }}><inlineCode parentName=\"a\">{`alias`}</inlineCode></a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-13\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-13\",\n                  \"aria-label\": \"graphql schema contributions how to read this 13 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  deleteMany_M(where: M_WhereInput): BatchPayload!\n}\n\ntype BatchPayload {\n  count: Int!\n}\n`}</code></pre><p parentName=\"section\">{`For `}<inlineCode parentName=\"p\">{`M_WhereInput`}</inlineCode>{` see `}<a parentName=\"p\" {...{\n                  \"href\": \"#batch-filtering\"\n                }}>{`filtering contribution`}</a>{`.`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-14\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-14\",\n                  \"aria-label\": \"example 14 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation {\n  deleteManyUser(where: {...}) {\n    count\n  }\n}\n`}</code></pre><p parentName=\"section\">{`See `}<a parentName=\"p\" {...{\n                  \"href\": \"#filtering\"\n                }}>{`filtering option`}</a>{` example. Differences are: operation semantics (delete things); return type.`}</p></section></section></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"options-12\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#options-12\",\n              \"aria-label\": \"options 12 permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Options`}</h3><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"alias\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#alias\",\n                \"aria-label\": \"alias permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`alias`}</inlineCode></h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`undefined | String\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Applies To`}</strong></p><p parentName=\"section\"><inlineCode parentName=\"p\">{`t.crud.<*>`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`t.model.<* - enum, list enum>`}</inlineCode></p><p parentName=\"section\"><strong parentName=\"p\">{`About`}</strong></p><ul parentName=\"section\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`undefined`}</inlineCode>{` (default) By default Prisma model fields project onto GraphQL object fields of the same name.`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`string`}</inlineCode>{` Change which GraphQL object field the Prisma model field projects onto.`}</li>\n            </ul><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-14\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-14\",\n                  \"aria-label\": \"graphql schema contributions how to read this 14 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><p parentName=\"section\">{`n/a`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-15\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-15\",\n                  \"aria-label\": \"example 15 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model Post  {\n  body String\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.body({\n      alias: 'content',\n    })\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Post {\n  content: String!\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"type\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#type\",\n                \"aria-label\": \"type permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`type`}</inlineCode></h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`undefined | String\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Applies To`}</strong></p><p parentName=\"section\"><inlineCode parentName=\"p\">{`t.crud.<*>`}</inlineCode>{` `}<a parentName=\"p\" {...{\n                \"href\": \"#relation-field\"\n              }}><inlineCode parentName=\"a\">{`t.model.<Relation>`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                \"href\": \"#list-field\"\n              }}><inlineCode parentName=\"a\">{`t.model.<ListRelation>`}</inlineCode></a></p><p parentName=\"section\"><strong parentName=\"p\">{`About`}</strong></p><ul parentName=\"section\">\n              <li parentName=\"ul\">\n                <p parentName=\"li\"><inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` (default) Point Prisma field to a GraphQL object whose name matches that of the Prisma field model type.`}</p>\n              </li>\n              <li parentName=\"ul\">\n                <p parentName=\"li\"><inlineCode parentName=\"p\">{`string`}</inlineCode>{` Point Prisma field to the given GraphQL object. This option can become necessary when you've have done `}<a parentName=\"p\" {...{\n                    \"href\": \"#model-object-mapping\"\n                  }}>{`model-object mapping`}</a>{` and other Prisma models in your schema have relations to the name-mapped Prisma model. We are interested in developing further the model-object mapping API to automate this better (`}<a parentName=\"p\" {...{\n                    \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/461\"\n                  }}>{`issue`}</a>{`).`}</p>\n              </li>\n            </ul><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-15\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-15\",\n                  \"aria-label\": \"graphql schema contributions how to read this 15 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><p parentName=\"section\">{`n/a`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-16\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-16\",\n                  \"aria-label\": \"example 16 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    String @id @default(cuid())\n  posts Post[]\n}\n\nmodel Post {\n  id String @id @default(cuid())\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'Article',\n  definition(t) {\n    t.model('Post').id()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.posts({\n      alias: 'articles',\n      type: 'Article',\n    })\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Article {\n  title: String!\n}\n\ntype User {\n  articles: [Article]\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"ordering\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#ordering\",\n                \"aria-label\": \"ordering permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`ordering`}</inlineCode></h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`undefined | true | false | ModelWhitelist\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Applies To`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"#batch-read\"\n              }}><inlineCode parentName=\"a\">{`t.crud.<BatchRead>`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                \"href\": \"#list-relation\"\n              }}><inlineCode parentName=\"a\">{`t.model.<ListRelation>`}</inlineCode></a></p><p parentName=\"section\"><strong parentName=\"p\">{`About`}</strong></p><p parentName=\"section\">{`Allow clients to order the records in a list field. Records can be ordered by their projected scalar fields in ascending or descending order. Ordering by fields on relations is not currently possible (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma/prisma-client-js/issues/249\"\n              }}>{`issue`}</a>{`).`}</p><ul parentName=\"section\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`undefined`}</inlineCode>{` (default) Like `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`false`}</inlineCode>{` Disable ordering`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`true`}</inlineCode>{` Enable ordering by all scalar fields`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ModelWhitelist`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`Record<string, true>`}</inlineCode>{`) Enable ordering by just Model scalar fields appearing in the given whitelist.`}</li>\n            </ul><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-16\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-16\",\n                  \"aria-label\": \"graphql schema contributions how to read this 16 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`# t.crud.<BatchRead>\nM(orderBy: M_OrderByInput)\n\n# t.model.<ListRelation>\ntype M {\n  MF(orderBy: M_OrderByInput)\n}\n\ninput M_OrderByInput {\n  MSF: OrderByArg\n  # It is not possible to order by relations\n}\n\nenum OrderByArg {\n  asc\n  desc\n}\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-17\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-17\",\n                  \"aria-label\": \"example 17 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    Int @id\n  name  String\n  posts Post[]\n}\n\nmodel Post {\n  id    Int @id\n  title String\n  body  String\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id()\n    t.model.title()\n    t.model.body()\n  },\n})\n\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id()\n    t.model.name()\n    t.model.posts({\n      ordering: { title: true },\n    })\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.crud.user()\n    t.crud.users({\n      ordering: true,\n    })\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n  users(\n    orderBy: UserOrderByInput\n  ): [User!]!\n}\n\ntype Post {\n  body: String!\n  id: Int!\n  title: String!\n}\n\ntype User {\n  id: Int!\n  name: String!\n  posts(\n    orderBy: UserPostsOrderByInput\n  ): [Post!]!\n}\n\ninput UserOrderByInput {\n  id: OrderByArg\n  name: OrderByArg\n}\n\ninput UserPostsOrderByInput {\n  title: OrderByArg\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n}\n\nenum OrderByArg {\n  asc\n  desc\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`query entrypointOrdering {\n  users(orderBy: { name: asc }) {\n    id\n    name\n  }\n}\n\nquery relationOrdering {\n  user(where: { id: 1643 }) {\n    posts(\n      orderBy: { title: dsc }\n    ) {\n      title\n      body\n    }\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"pagination\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#pagination\",\n                \"aria-label\": \"pagination permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`pagination`}</inlineCode></h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`undefined | true | false\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Applies To`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"#batch-read\"\n              }}><inlineCode parentName=\"a\">{`t.crud.<BatchRead>`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                \"href\": \"#list-relation\"\n              }}><inlineCode parentName=\"a\">{`t.model.<ListRelation>`}</inlineCode></a></p><p parentName=\"section\"><strong parentName=\"p\">{`About`}</strong></p><ul parentName=\"section\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`undefined`}</inlineCode>{` (default) Like `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`true`}</inlineCode>{` Enable pagination`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`false`}</inlineCode>{` Disable pagination`}</li>\n            </ul><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"aria-label\": \"graphql schema contributions permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions`}</h5><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`# t.crud.<BatchRead>\nMs(\n  # The starting object for the list (typically ID or other unique value).\n  after: M_WhereUniquInout\n\n  # The last object for the list (typically ID or other unique value)\n  before: M_WhereUniquInout\n\n  # How many elements, forwards from \\`after\\` otherwise head\n  first: Int\n\n  # How many elements, backwards from \\`before\\` otherwise tail\n  last: Int\n\n  # The offset\n  # If \\`first\\` used, then forwards from \\`after\\` (otherwise head)\n  # If \\`last\\` used, then backwards from \\`before\\` (otherwise tail)\n  skip: Int\n)\n\n# t.model.<ListRelation>\ntype M {\n  MRF(after: M_WhereUniquInout, before: M_WhereUniquInout, first: Int, last: Int, skip: Int)\n}\n\ninput M_WhereUniquInout {\n  MSF@unique: S\n}\n`}</code></pre></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-18\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-18\",\n                  \"aria-label\": \"example 18 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id    Int @id\n  posts Post[]\n  // ...\n}\n\nmodel Post {\n  id    Int @id\n  // ...\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`...\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.posts({\n      pagination: true,\n    })\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.crud.users({\n      pagination: true,\n    })\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`query batchReadAfter {\n  users(\n    after: { id: 1234 }\n    first: 50\n  ) {\n    id\n    name\n  }\n}\n\n# or\n\nquery batchReadSkip {\n  users(skip: 50, first: 50) {\n    id\n    name\n  }\n}\n\n# or\n\nquery batchReadRelation {\n  user(where: { id: 1643 }) {\n    posts(last: 10) {\n      title\n      body\n    }\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"filtering\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#filtering\",\n                \"aria-label\": \"filtering permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`filtering`}</inlineCode></h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`undefined | true | false | ModelWhitelist\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Applies To`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"#batch-read\"\n              }}><inlineCode parentName=\"a\">{`t.crud.<BatchRead>`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n                \"href\": \"#list-relation\"\n              }}><inlineCode parentName=\"a\">{`t.model.<ListRelation>`}</inlineCode></a></p><p parentName=\"section\"><strong parentName=\"p\">{`About`}</strong></p><ul parentName=\"section\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`undefined`}</inlineCode>{` (default) Like `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`true`}</inlineCode>{` Enable filtering for all scalar fields`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`false`}</inlineCode>{` Disable filtering`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ModelWhitelist`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`Record<string, true>`}</inlineCode>{`) Enable ordering by just Model scalar fields appearing in the given whitelist.`}</li>\n            </ul><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-how-to-read-this-17\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-how-to-read-this-17\",\n                  \"aria-label\": \"graphql schema contributions how to read this 17 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions `}<a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions\",\n                  \"title\": \"How to read this\"\n                }}><inlineCode parentName=\"a\">{`?`}</inlineCode></a></h5><p parentName=\"section\">{`See `}<a parentName=\"p\" {...{\n                  \"href\": \"#batch-filtering\"\n                }}>{`batch filtering contributions`}</a></p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-19\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-19\",\n                  \"aria-label\": \"example 19 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id     String     @id @unique @default(cuid())\n  posts  Post[]\n  age    Int\n  status UserStatus\n}\n\nmodel Post {\n  id       String    @id @unique @default(cuid())\n  author   User\n  comments Comment[]\n  rating   Float\n}\n\nmodel Comment {\n  id      String     @id @unique @default(cuid())\n  author  User\n  post    Post\n  content String\n}\n\nenum UserStatus {\n  BANNED\n  ACTIVE\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.objectType({\n  name: 'User',\n  definition(t) {\n    t.model.age()\n  },\n})\n\nschema.objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.author()\n    t.model.rating()\n    t.model.comments()\n  },\n})\n\nschema.objectType({\n  name: 'Comment',\n  definition(t) {\n    t.model.author()\n    t.model.post()\n  },\n})\n\nschema.queryType({\n  definition(t) {\n    t.crud.users({\n      filtering: true,\n    })\n    t.crud.user()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Comment {\n  author: User!\n  post: Post!\n}\n\ninput CommentFilter {\n  every: CommentWhereInput\n  none: CommentWhereInput\n  some: CommentWhereInput\n}\n\ninput CommentWhereInput {\n  AND: [CommentWhereInput!]\n  author: UserWhereInput\n  content: StringFilter\n  id: StringFilter\n  NOT: [CommentWhereInput!]\n  OR: [CommentWhereInput!]\n  post: PostWhereInput\n}\n\ninput FloatFilter {\n  equals: Float\n  gt: Float\n  gte: Float\n  in: [Float!]\n  lt: Float\n  lte: Float\n  not: Float\n  notIn: [Float!]\n}\n\ninput IntFilter {\n  equals: Int\n  gt: Int\n  gte: Int\n  in: [Int!]\n  lt: Int\n  lte: Int\n  not: Int\n  notIn: [Int!]\n}\n\ntype Post {\n  author: User!\n  comments(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n  ): [Comment!]!\n  rating: Float!\n}\n\ninput PostFilter {\n  every: PostWhereInput\n  none: PostWhereInput\n  some: PostWhereInput\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  author: UserWhereInput\n  comments: CommentFilter\n  id: StringFilter\n  NOT: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  rating: FloatFilter\n}\n\ntype Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n  users(\n    after: String\n    before: String\n    first: Int\n    last: Int\n    skip: Int\n    where: UserWhereInput\n  ): [User!]!\n}\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ntype User {\n  age: Int!\n}\n\nenum UserStatus {\n  ACTIVE\n  BANNED\n}\n\ninput UserWhereInput {\n  age: IntFilter\n  AND: [UserWhereInput!]\n  comments: CommentFilter\n  id: StringFilter\n  NOT: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  posts: PostFilter\n  status: UserStatus\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`query batchReadFilter {\n  users(where: {\n    OR: [\n      { age: { gt: 30 } },\n      posts: {\n        every: {\n          rating: {\n            lte: \"0.5\"\n          }\n        },\n        none: {\n          comments: {\n            none: {\n              author: {\n                status: BANNED\n              }\n            }\n          }\n        }\n      }\n    ]\n  }) {\n    id\n    name\n  }\n}\n\nquery batchReadRelationFilter {\n  users {\n    posts(where: { rating: { gte: 0.9 }}) {\n      comments {\n        content\n      }\n    }\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"computedinputs-local\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#computedinputs-local\",\n                \"aria-label\": \"computedinputs local permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`computedInputs`}</inlineCode>{` (local)`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`Record<string, ({ args, ctx, info }: MutationResolverParams) => unknown>\n`}</code></pre><p parentName=\"section\">{`Note: This is an abbreviated version of the ComputedInputs type. The most important thing to undertand each of the object's values will be a function that takes an object with \"args\", \"ctx\", and \"info\" keys that represent the runtime values of the corresponding parameters that are passed to your resolver. For the full type, see `}<a parentName=\"p\" {...{\n                \"href\": \"#computedinputs-type-details\"\n              }}>{`ComputedInputs Type Details`}</a>{`.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Applies To`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"#t.crud\"\n              }}><inlineCode parentName=\"a\">{`t.crud.<mutations>`}</inlineCode></a></p><p parentName=\"section\"><strong parentName=\"p\">{`About`}</strong></p><p parentName=\"section\">{`Allow clients to omit fields from one mutation's corresponding input type and infer the value of those fields from the resolver's params (args, context, info) at runtime when determining what to pass to Prisma Client.`}</p><ul parentName=\"section\">\n              <li parentName=\"ul\">\n                <p parentName=\"li\"><inlineCode parentName=\"p\">{`ComputedInputs`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`Record<string, ({ args, ctx, info }: MutationResolverParams) => unknown>`}</inlineCode>{`) `}<a parentName=\"p\" {...{\n                    \"href\": \"#computedinputs-type-details\"\n                  }}>{`(full type here)`}</a>{`.`}</p>\n                <p parentName=\"li\">{`Keys in the ComputedInputs object will be omitted from the mutation's corresponding input type. When resolving the mutation at runtime, each omitted key will be passed to Prisma Client based on the return value of that key's corresponding function in the ComputedInputs object when passed that resolver's parameters at runtime.`}</p>\n              </li>\n            </ul><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-1\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-1\",\n                  \"aria-label\": \"graphql schema contributions 1 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions`}</h5><p parentName=\"section\">{`The mutation's input type fields with a name that is in the ComputedInputs object are omitted from the GraphQL schema. This modifies one existing input type but does not add new types or remove existing types.`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-20\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-20\",\n                  \"aria-label\": \"example 20 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id  Int @id\n  name String\n  createdWithBrowser String\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.queryType({\n  definition(t: any) {\n    t.crud.user()\n  },\n})\nschema.mutationType({\n  definition(t: any) {\n    t.crud.createOneUser({\n      computedInputs: {\n        createdWithBrowser: ({\n          args,\n          ctx,\n          info,\n        }) => ctx.browser,\n      },\n    })\n  },\n})\nschema.objectType({\n  name: 'User',\n  definition: (t: any) => {\n    t.model.id()\n    t.model.name()\n    t.model.createdWithBrowser()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Mutation {\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n}\n\ntype Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype User {\n  id: Int!\n  name: String!\n  createdWithBrowser: String!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`mutation createOneUser {\n  createOneUser({data: {name: \"Benedict\"}}) {\n    id\n    name\n    createdWithBrowser\n  }\n}\n`}</code></pre></div></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"computedinputs-global\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#computedinputs-global\",\n                \"aria-label\": \"computedinputs global permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`computedInputs`}</inlineCode>{` (global)`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`Record<string, ({ args, ctx, info}: MutationResolverParams) => any>\n`}</code></pre><p parentName=\"section\">{`Note: This is an abbreviated version of the ComputedInputs type. The most important thing to undertand each of the object's values will be a function that takes an object with \"args\", \"ctx\", and \"info\" keys that represent the runtime values of the corresponding parameters that are passed to your resolver. For the full type, see `}<a parentName=\"p\" {...{\n                \"href\": \"#computedinputs-type-details\"\n              }}>{`ComputedInputs Type Details`}</a>{`.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Applies To`}</strong></p><p parentName=\"section\"><a parentName=\"p\" {...{\n                \"href\": \"#Example\"\n              }}><inlineCode parentName=\"a\">{`nexusPrismaPlugin()`}</inlineCode></a></p><p parentName=\"section\"><strong parentName=\"p\">{`About`}</strong></p><p parentName=\"section\">{`Allow clients to omit fields with a given name across all of their GraphQL schema's inputs and infer the value of those fields from context when determining what to pass to Prisma Client`}</p><ul parentName=\"section\">\n              <li parentName=\"ul\">\n                <p parentName=\"li\"><inlineCode parentName=\"p\">{`ComputedInputs`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`Record<string, ({ args, ctx, info }: MutationResolverParams) => any>`}</inlineCode>{`) `}<a parentName=\"p\" {...{\n                    \"href\": \"#computedinputs-type-details\"\n                  }}>{`(full type here)`}</a>{`.`}</p>\n                <p parentName=\"li\">{`Keys in the ComputedInputs object will be omitted from all input types. When resolving any mutation at runtime, that mutation's input type will be recursively searched for the omitted keys. Any time one of those keys would have appeared anywhere in the mutation's input type, a value will be passed to Prisma Client based on the return value of that key's corresponding function in the ComputedInputs object when passed the resolver's parameters at runtime.`}</p>\n              </li>\n            </ul><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"graphql-schema-contributions-2\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#graphql-schema-contributions-2\",\n                  \"aria-label\": \"graphql schema contributions 2 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions`}</h5><p parentName=\"section\">{`All input type fields with a name that is in the ComputedInputs object are omitted from the GraphQL schema. This modifies existing input types but does not add new types or remove existing types.`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n                \"id\": \"example-21\",\n                \"style\": {\n                  \"position\": \"relative\"\n                }\n              }}><a parentName=\"h5\" {...{\n                  \"href\": \"#example-21\",\n                  \"aria-label\": \"example 21 permalink\",\n                  \"className\": \"title-link before\"\n                }}><svg parentName=\"a\" {...{\n                    \"width\": \"17\",\n                    \"height\": \"18\",\n                    \"viewBox\": \"0 0 17 18\",\n                    \"fill\": \"none\",\n                    \"xmlns\": \"http://www.w3.org/2000/svg\"\n                  }}>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 6.33337H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M1.5 11.6666H15.5\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M6.75 1L5 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                      \"d\": \"M12 1L10.25 17\",\n                      \"stroke\": \"#CBD5E0\",\n                      \"strokeWidth\": \"2\",\n                      \"strokeLineCap\": \"round\",\n                      \"strokeLineJoin\": \"round\"\n                    }}></path>{`\n      `}</svg></a>{`Example`}</h5><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-prisma\"\n                  }}>{`model User {\n  id  Int @id\n  name String\n  nested Nested[]\n  createdWithBrowser String\n}\n\nmodel Nested {\n  id Int @id\n  name String\n  createdWithBrowser String\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-ts\"\n                  }}>{`schema.queryType({\n  definition(t: any) {\n    t.crud.user()\n  },\n})\nschema.mutationType({\n  definition(t: any) {\n    t.crud.createOneUser()\n    t.crud.createOneNested()\n  },\n})\nschema.objectType({\n  name: 'User',\n  definition: (t: any) => {\n    t.model.id()\n    t.model.name()\n    t.model.nested()\n    t.model.createdWithBrowser()\n  },\n})\nschema.objectType({\n  name: 'Nested',\n  definition: (t: any) => {\n    t.model.id()\n    t.model.createdWithBrowser()\n    t.model.name()\n  },\n})\n\nnexusPrismaPlugin({\n  /*\n  Remove fields named \"createdWithBrowser\" from all mutation input types. When resolving\n  a request whose data contains any of these types, the value is inferred from the resvoler's \n  params based on the function we defined below and passed to Prisma Client, even if it's nested.\n  This example assumes a Prisma Client context containing a \"browser\" key that maps to a string\n  representing the browser from which the request was made.\n  */\n  computedInputs: {\n    createdWithBrowser: ({\n      args,\n      ctx,\n      info,\n    }) => ctx.browser,\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`type Mutation {\n  createOneUser(\n    data: UserCreateInput!\n  ): User!\n  createOneNested(\n    data: NestedCreateInput!\n  ): Nested!\n}\n\ntype Nested {\n  id: Int!\n  createdWithBrowser: String!\n  name: String!\n}\n\ninput NestedCreateInput {\n  name: String!\n  user: UserCreateOneWithoutUserInput\n}\n\ninput NestedCreateManyWithoutNestedInput {\n  create: [NestedCreateWithoutUserInput!]\n  connect: [NestedWhereUniqueInput!]\n}\n\ninput NestedCreateWithoutUserInput {\n  name: String!\n}\n\ninput NestedWhereUniqueInput {\n  id: Int\n}\n\ntype Query {\n  user(\n    where: UserWhereUniqueInput!\n  ): User\n}\n\ntype User {\n  id: Int!\n  name: String!\n  nested(\n    skip: Int\n    after: Int\n    before: Int\n    first: Int\n    last: Int\n  ): [Nested!]!\n  createdWithBrowser: String!\n}\n\ninput UserCreateInput {\n  name: String!\n  nested: NestedCreateManyWithoutNestedInput\n}\n\ninput UserCreateOneWithoutUserInput {\n  create: UserCreateWithoutNestedInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutNestedInput {\n  name: String!\n}\n\ninput UserWhereUniqueInput {\n  id: Int\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-graphql\"\n                  }}>{`mutation createOneUser {\n  createOneUser({data: {name: \"Benedict\", nested: {name: \"Moony\"}}) {\n    id\n    name\n    createdWithBrowser\n    nested {\n      id\n      name\n      createdWithBrowser\n    }\n  }\n}\n\nmutation createOneNested {\n  createOneNested({data: {name: \"Moony\", user: {connect: {where: {id: 1}}}}}) {\n    id\n    name\n    createdWithBrowser\n  }\n}\n`}</code></pre></div><p parentName=\"section\">{`If `}<inlineCode parentName=\"p\">{`{user: {connect: {where: {id: 1}}}}`}</inlineCode>{` looks familiar, global computedInputs can also be used to determine the user making a request and automatically populate mutations affecting a single user accordingly. For example, assuming Prisma Client' context includes a \"userId\" key, adding a user key to global computedInputs can simplify the \"createOneNested\" mutation from the previous example:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-ts\"\n                }}>{`nexusPrismaPlugin({\n  ...other config...\n  computedInputs: {\n    createdWithBrowser: ({ctx}) => ctx.browser,\n    user: ({ctx}) => ({ connect: { where: { id: ctx.userId } } }),\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-graphql\"\n                }}>{`mutation createOneNested {\n  createOneNested({data: {name: \"Moony\"}}) {\n    id\n    name\n    createdWithBrowser\n  }\n}\n`}</code></pre></section></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"computedinputs-type-details\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#computedinputs-type-details\",\n                \"aria-label\": \"computedinputs type details permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a><inlineCode parentName=\"h4\">{`ComputedInputs`}</inlineCode>{` Type Details`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`/**\n *  Represents arguments required by Prisma Client that will\n *  be derived from a request's input (root, args, and context)\n *  and omitted from the GraphQL API. The object itself maps the\n *  names of these args to a function that takes an object representing\n *  the request's input and returns the value to pass to the Prisma Client\n *  arg of the same name.\n */\nexport type LocalComputedInputs<\n  MethodName extends MutationMethodName\n> = Record<\n  string,\n  (\n    params: LocalMutationResolverParams<\n      MethodName\n    >\n  ) => unknown\n>\n\nexport type GlobalComputedInputs = Record<\n  string,\n  (\n    params: GlobalMutationResolverParams\n  ) => unknown\n>\n\ntype BaseMutationResolverParams = {\n  info: GraphQLResolveInfo\n  ctx: Context\n}\n\nexport type GlobalMutationResolverParams = BaseMutationResolverParams & {\n  args: Record<string, any> & {\n    data: unknown\n  }\n}\n\nexport type LocalMutationResolverParams<\n  MethodName extends MutationMethodName\n> = BaseMutationResolverParams & {\n  args: core.GetGen<\n    'argTypes'\n  >['Mutation'][MethodName]\n}\n\nexport type MutationMethodName = keyof core.GetGen<\n  'argTypes'\n>['Mutation']\n\nexport type Context = core.GetGen<\n  'context'\n>\n`}</code></pre></section></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"graphql-schema-contributions-3\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#graphql-schema-contributions-3\",\n              \"aria-label\": \"graphql schema contributions 3 permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`GraphQL Schema Contributions`}</h3><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"how-to-read\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#how-to-read\",\n                \"aria-label\": \"how to read permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`How to Read`}</h4><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`M = model   F = field   L = list   S = scalar   R = relation   E = enum   V = value\n`}</code></pre></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n              \"id\": \"batch-filtering\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h4\" {...{\n                \"href\": \"#batch-filtering\",\n                \"aria-label\": \"batch filtering permalink\",\n                \"className\": \"title-link before\"\n              }}><svg parentName=\"a\" {...{\n                  \"width\": \"17\",\n                  \"height\": \"18\",\n                  \"viewBox\": \"0 0 17 18\",\n                  \"fill\": \"none\",\n                  \"xmlns\": \"http://www.w3.org/2000/svg\"\n                }}>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 6.33337H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M1.5 11.6666H15.5\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M6.75 1L5 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                    \"d\": \"M12 1L10.25 17\",\n                    \"stroke\": \"#CBD5E0\",\n                    \"strokeWidth\": \"2\",\n                    \"strokeLineCap\": \"round\",\n                    \"strokeLineJoin\": \"round\"\n                  }}></path>{`\n      `}</svg></a>{`Batch Filtering`}</h4><p parentName=\"section\"><strong parentName=\"p\">{`Sources`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-graphql\"\n              }}>{`query {\n  # When filtering option is enabled\n  Ms(where: M_WhereInput, ...): [M!]!\n}\n\nmutation {\n  updateMany_M(where: M_WhereInput, ...) BatchPayload!\n  deleteMany_M(where: M_WhereInput): BatchPayload!\n}\n\ntype M {\n  # When filtering option is enabled\n  MRF: RM(where: RM_WhereInput): [RM!]!\n}\n\n# Nested InputObjects from t.crud.update<M>\n\n# Nested InputObjects from t.crud.upsert<M>\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Where`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-graphql\"\n              }}>{`input M_WhereInput {\n  AND: [M_WhereInput!]\n  NOT: [M_WhereInput!]\n  OR: [M_WhereInput!]\n  MSF: S_Filter\n  MRF: RM_Filter\n}\n\ninput RM_Filter {\n  every: RM_WhereInput # recurse -> M_WhereInput\n  none: RM_WhereInput # recurse -> M_WhereInput\n  some: RM_WhereInput # recurse -> M_WhereInput\n}\n\n# This type shows up in the context of t.crud.update<M> and t.crud.upsert<M>\n\ninput RM_ScalarWhereInput {\n  AND: [RM_ScalarWhereInput!]\n  NOT: [RM_ScalarWhereInput!]\n  OR: [RM_ScalarWhereInput!]\n  RMSF: S_Filter\n}\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Scalar Filters`}</strong></p><p parentName=\"section\"><inlineCode parentName=\"p\">{`ID`}</inlineCode>{` scalars use `}<inlineCode parentName=\"p\">{`StringFilter`}</inlineCode>{` (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/485\"\n              }}>{`issue`}</a>{`). We are considering a tailored `}<inlineCode parentName=\"p\">{`DateTime`}</inlineCode>{` filter (`}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/prisma-labs/nexus-prisma/issues/484\"\n              }}>{`issue`}</a>{`).`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-graphql\"\n              }}>{`input BooleanFilter {\n  equals: Boolean\n  not: Boolean\n}\n\ninput IntFilter {\n  equals: S\n  gt: S\n  gte: S\n  in: [S!]\n  lt: S\n  lte: S\n  not: S\n  notIn: [S!]\n}\n\ninput FloatFilter {} # like IntFilter\n\ninput DateTimeFilter {} # like IntFilter\n\ninput StringFilter {\n  contains: String\n  endsWith: String\n  equals: String\n  gt: String\n  gte: String\n  in: [String!]\n  lt: String\n  lte: String\n  not: String\n  notIn: [String!]\n  startsWith: String\n}\n\ninput UUIDFilter {} # like StringFilter\n`}</code></pre></section></section></section><section parentName=\"section\"><h2 parentName=\"section\" {...{\n          \"id\": \"system-behaviours\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h2\" {...{\n            \"href\": \"#system-behaviours\",\n            \"aria-label\": \"system behaviours permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`System Behaviours`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n            \"id\": \"null-free-lists\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h3\" {...{\n              \"href\": \"#null-free-lists\",\n              \"aria-label\": \"null free lists permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Null-Free Lists`}</h3><p parentName=\"section\">{`Projection for Prisma list types always project as a fully non-nullable GraphQL type. This is because Prisma list fields (and list member type) can themselves never be null, and because Prisma does not support `}<inlineCode parentName=\"p\">{`@default`}</inlineCode>{` on list types.`}</p><p parentName=\"section\">{`For consistency we also apply the same pattern for `}<inlineCode parentName=\"p\">{`t.crud.<BatchRead>`}</inlineCode>{`.`}</p><div class=\"Row Collapsable\"><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-Prisma\"\n              }}>{`model User {\n  posts Post[]\n}\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`schema.queryType({\n  definition(t) {\n    t.crud.users()\n  },\n})\nschema.objectType({\n  name: 'User',\n  definition(t) {\n    t.crud.posts()\n  },\n})\n`}</code></pre><pre parentName=\"section\"><code parentName=\"pre\" {...{\n                \"className\": \"language-graphql\"\n              }}>{`type Query {\n  users: [User!]!\n}\n\ntype User {\n  posts: [Post!]!\n}\n`}</code></pre></div></section></section></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}