{"expireTime":9007200846064530000,"key":"gatsby-plugin-mdx-entire-payload-c41df3429711211cd71b3655fef953d4-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Use Prisma","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":14,"offset":13},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":14,"offset":13},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install the prisma plugin","position":{"start":{"line":3,"column":4,"offset":18},"end":{"line":3,"column":29,"offset":43},"indent":[]}}],"position":{"start":{"line":3,"column":4,"offset":18},"end":{"line":3,"column":29,"offset":43},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"npm install nexus-plugin-prisma","position":{"start":{"line":5,"column":4,"offset":48},"end":{"line":7,"column":7,"offset":96},"indent":[4,4]}}],"position":{"start":{"line":3,"column":1,"offset":15},"end":{"line":8,"column":1,"offset":97},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Enable the plugin","position":{"start":{"line":9,"column":4,"offset":101},"end":{"line":9,"column":21,"offset":118},"indent":[]}}],"position":{"start":{"line":9,"column":4,"offset":101},"end":{"line":9,"column":21,"offset":118},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\n\nuse(prisma())","position":{"start":{"line":11,"column":4,"offset":123},"end":{"line":16,"column":7,"offset":232},"indent":[4,4,1,4,4]}}],"position":{"start":{"line":9,"column":1,"offset":98},"end":{"line":17,"column":1,"offset":233},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Add a ","position":{"start":{"line":18,"column":4,"offset":237},"end":{"line":18,"column":10,"offset":243},"indent":[]}},{"type":"inlineCode","value":"schema.prisma","position":{"start":{"line":18,"column":10,"offset":243},"end":{"line":18,"column":25,"offset":258},"indent":[]}},{"type":"text","value":" file. Add a datasource. Here we're working with SQLite. Add Prisma Client.","position":{"start":{"line":18,"column":25,"offset":258},"end":{"line":18,"column":100,"offset":333},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":237},"end":{"line":18,"column":100,"offset":333},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"+++ prisma/schema.prisma\n+\n+  datasource db {\n+    provider = \"sqlite\"\n+    url      = \"file:dev.db\"\n+  }\n+\n+  generator prisma_client {\n+    provider = \"prisma-client-js\"\n+  }","position":{"start":{"line":20,"column":4,"offset":338},"end":{"line":31,"column":7,"offset":559},"indent":[4,4,4,4,4,4,4,4,4,4,4]}}],"position":{"start":{"line":18,"column":1,"offset":234},"end":{"line":32,"column":1,"offset":560},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Initialize your database","position":{"start":{"line":33,"column":4,"offset":564},"end":{"line":33,"column":28,"offset":588},"indent":[]}}],"position":{"start":{"line":33,"column":4,"offset":564},"end":{"line":33,"column":28,"offset":588},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"yarn prisma migrate save --experimental && yarn prisma migrate up --experimental","position":{"start":{"line":35,"column":4,"offset":593},"end":{"line":37,"column":7,"offset":690},"indent":[4,4]}}],"position":{"start":{"line":33,"column":1,"offset":561},"end":{"line":38,"column":1,"offset":691},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Now your app has the following","position":{"start":{"line":39,"column":4,"offset":695},"end":{"line":39,"column":34,"offset":725},"indent":[]}}],"position":{"start":{"line":39,"column":4,"offset":695},"end":{"line":39,"column":34,"offset":725},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"nexus-prisma","position":{"start":{"line":41,"column":7,"offset":733},"end":{"line":41,"column":21,"offset":747},"indent":[]}},{"type":"text","value":" Nexus plugin allowing e.g.:","position":{"start":{"line":41,"column":21,"offset":747},"end":{"line":41,"column":49,"offset":775},"indent":[]}}],"position":{"start":{"line":41,"column":7,"offset":733},"end":{"line":41,"column":49,"offset":775},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"+++ src/graphql.ts\n  objectType({\n    name: 'User',\n    definition(t) {\n-     t.id('id)\n-     t.string('name')\n+     t.model.id()\n+     t.model.name()\n    },\n  })","position":{"start":{"line":43,"column":7,"offset":783},"end":{"line":54,"column":10,"offset":1023},"indent":[7,7,7,7,7,7,7,7,7,7,7]}}],"position":{"start":{"line":41,"column":4,"offset":730},"end":{"line":55,"column":1,"offset":1024},"indent":[1,4,4,4,4,4,4,4,4,4,4,4,4,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An instance of the generated Prisma Client is a added to context under the ","position":{"start":{"line":56,"column":7,"offset":1031},"end":{"line":56,"column":82,"offset":1106},"indent":[]}},{"type":"inlineCode","value":"db","position":{"start":{"line":56,"column":82,"offset":1106},"end":{"line":56,"column":86,"offset":1110},"indent":[]}},{"type":"text","value":" property, allowing e.g.:","position":{"start":{"line":56,"column":86,"offset":1110},"end":{"line":56,"column":111,"offset":1135},"indent":[]}}],"position":{"start":{"line":56,"column":7,"offset":1031},"end":{"line":56,"column":111,"offset":1135},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"+++ src/graphql.ts\n  queryType({\n    definition(t) {\n      t.list.field('users', {\n        type: 'User',\n-       resolve() {\n-         return [{ id: '1643', name: 'newton' }]\n+       resolve(_root, _args, ctx) {\n+         return ctx.db.users.findMany()\n        },\n      })\n    },\n  })","position":{"start":{"line":58,"column":7,"offset":1143},"end":{"line":72,"column":10,"offset":1523},"indent":[7,7,7,7,7,7,7,7,7,7,7,7,7,7]}}],"position":{"start":{"line":56,"column":4,"offset":1028},"end":{"line":73,"column":1,"offset":1524},"indent":[1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The TypeScript types representing your Prisma models are registered as a Nexus data source. In short this enables proper typing of ","position":{"start":{"line":74,"column":7,"offset":1531},"end":{"line":74,"column":138,"offset":1662},"indent":[]}},{"type":"inlineCode","value":"parent","position":{"start":{"line":74,"column":138,"offset":1662},"end":{"line":74,"column":146,"offset":1670},"indent":[]}},{"type":"text","value":" parameters in your resolves. They reflect the data of the correspondingly named Prisma model.","position":{"start":{"line":74,"column":146,"offset":1670},"end":{"line":74,"column":240,"offset":1764},"indent":[]}}],"position":{"start":{"line":74,"column":7,"offset":1531},"end":{"line":74,"column":240,"offset":1764},"indent":[]}}],"position":{"start":{"line":74,"column":4,"offset":1528},"end":{"line":74,"column":240,"offset":1764},"indent":[]}}],"position":{"start":{"line":41,"column":4,"offset":730},"end":{"line":74,"column":240,"offset":1764},"indent":[1,4,4,4,4,4,4,4,4,4,4,4,4,1,4,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4]}}],"position":{"start":{"line":39,"column":1,"offset":692},"end":{"line":74,"column":240,"offset":1764},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":3,"column":1,"offset":15},"end":{"line":74,"column":240,"offset":1764},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Create a Consumable Plugin","position":{"start":{"line":76,"column":4,"offset":1769},"end":{"line":76,"column":30,"offset":1795},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1766},"end":{"line":76,"column":30,"offset":1795},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Scaffold Your plugin project","position":{"start":{"line":78,"column":4,"offset":1800},"end":{"line":78,"column":32,"offset":1828},"indent":[]}}],"position":{"start":{"line":78,"column":4,"offset":1800},"end":{"line":78,"column":32,"offset":1828},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"npx nexus create plugin","position":{"start":{"line":80,"column":4,"offset":1833},"end":{"line":82,"column":7,"offset":1873},"indent":[4,4]}}],"position":{"start":{"line":78,"column":1,"offset":1797},"end":{"line":83,"column":1,"offset":1874},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Publish it","position":{"start":{"line":84,"column":4,"offset":1878},"end":{"line":84,"column":14,"offset":1888},"indent":[]}}],"position":{"start":{"line":84,"column":4,"offset":1878},"end":{"line":84,"column":14,"offset":1888},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"yarn publish","position":{"start":{"line":86,"column":4,"offset":1893},"end":{"line":88,"column":7,"offset":1922},"indent":[4,4]}}],"position":{"start":{"line":84,"column":1,"offset":1875},"end":{"line":88,"column":7,"offset":1922},"indent":[1,1,1,1]}}],"position":{"start":{"line":78,"column":1,"offset":1797},"end":{"line":88,"column":7,"offset":1922},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting up PostgreSQL","position":{"start":{"line":90,"column":4,"offset":1927},"end":{"line":90,"column":25,"offset":1948},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":1924},"end":{"line":90,"column":25,"offset":1948},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Hosted","position":{"start":{"line":92,"column":7,"offset":1956},"end":{"line":92,"column":13,"offset":1962},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":1950},"end":{"line":92,"column":13,"offset":1962},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For trying things out in a deployed setting you can try Heroku's free postgres tier. Setting it up is simple:","position":{"start":{"line":94,"column":1,"offset":1964},"end":{"line":94,"column":110,"offset":2073},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":1964},"end":{"line":94,"column":110,"offset":2073},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"heroku create\nheroku addons:create heroku-postgresql\n\n# Now get the connection URL\nheroku pg:credentials:url","position":{"start":{"line":96,"column":1,"offset":2075},"end":{"line":102,"column":4,"offset":2195},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For a more complete explanation of this approach see ","position":{"start":{"line":104,"column":1,"offset":2197},"end":{"line":104,"column":54,"offset":2250},"indent":[]}},{"type":"link","title":null,"url":"https://dev.to/prisma/how-to-setup-a-free-postgresql-database-on-heroku-1dc1","children":[{"type":"text","value":"this blog post by Nikolas Burk","position":{"start":{"line":104,"column":55,"offset":2251},"end":{"line":104,"column":85,"offset":2281},"indent":[]}}],"position":{"start":{"line":104,"column":54,"offset":2250},"end":{"line":104,"column":164,"offset":2360},"indent":[]}},{"type":"text","value":" using the the Heroku UI.","position":{"start":{"line":104,"column":164,"offset":2360},"end":{"line":104,"column":189,"offset":2385},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2197},"end":{"line":104,"column":189,"offset":2385},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Local","position":{"start":{"line":106,"column":7,"offset":2393},"end":{"line":106,"column":12,"offset":2398},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2387},"end":{"line":106,"column":12,"offset":2398},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The reccommended way to run postgres locally is with docker, because it is easy flexible and reliable.","position":{"start":{"line":108,"column":1,"offset":2400},"end":{"line":108,"column":103,"offset":2502},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2400},"end":{"line":108,"column":103,"offset":2502},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Start a postgres server for your app:","position":{"start":{"line":110,"column":4,"offset":2507},"end":{"line":110,"column":41,"offset":2544},"indent":[]}}],"position":{"start":{"line":110,"column":4,"offset":2507},"end":{"line":110,"column":41,"offset":2544},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"docker run --detach --publish 5432:5432 -e POSTGRES_PASSWORD=postgres --name 'postgres' postgres:10.12","position":{"start":{"line":112,"column":4,"offset":2549},"end":{"line":114,"column":7,"offset":2668},"indent":[4,4]}}],"position":{"start":{"line":110,"column":1,"offset":2504},"end":{"line":115,"column":1,"offset":2669},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Now you can use a connection URL like:","position":{"start":{"line":116,"column":4,"offset":2673},"end":{"line":116,"column":42,"offset":2711},"indent":[]}}],"position":{"start":{"line":116,"column":4,"offset":2673},"end":{"line":116,"column":42,"offset":2711},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"postgresql://postgres:postgres@localhost:5432/myapp","position":{"start":{"line":118,"column":4,"offset":2716},"end":{"line":120,"column":7,"offset":2781},"indent":[4,4]}}],"position":{"start":{"line":116,"column":1,"offset":2670},"end":{"line":120,"column":7,"offset":2781},"indent":[1,1,1,1]}}],"position":{"start":{"line":110,"column":1,"offset":2504},"end":{"line":120,"column":7,"offset":2781},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you don't want to use a docker, here are some links to alternative approaches for macOS users:","position":{"start":{"line":122,"column":1,"offset":2783},"end":{"line":122,"column":98,"offset":2880},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":2783},"end":{"line":122,"column":98,"offset":2880},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://wiki.postgresql.org/wiki/Homebrew","children":[{"type":"text","value":"With Homebrew","position":{"start":{"line":124,"column":4,"offset":2885},"end":{"line":124,"column":17,"offset":2898},"indent":[]}}],"position":{"start":{"line":124,"column":3,"offset":2884},"end":{"line":124,"column":61,"offset":2942},"indent":[]}}],"position":{"start":{"line":124,"column":3,"offset":2884},"end":{"line":124,"column":61,"offset":2942},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":2882},"end":{"line":124,"column":61,"offset":2942},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://postgresapp.com","children":[{"type":"text","value":"With Postgres.app","position":{"start":{"line":125,"column":4,"offset":2946},"end":{"line":125,"column":21,"offset":2963},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":2945},"end":{"line":125,"column":47,"offset":2989},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":2945},"end":{"line":125,"column":47,"offset":2989},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":2943},"end":{"line":125,"column":47,"offset":2989},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":2882},"end":{"line":125,"column":47,"offset":2989},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Go to production","position":{"start":{"line":127,"column":4,"offset":2994},"end":{"line":127,"column":20,"offset":3010},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2991},"end":{"line":127,"column":20,"offset":3010},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Add a build script","position":{"start":{"line":129,"column":4,"offset":3015},"end":{"line":129,"column":22,"offset":3033},"indent":[]}}],"position":{"start":{"line":129,"column":4,"offset":3015},"end":{"line":129,"column":22,"offset":3033},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"+++ package.json\n+ \"build\": \"nexus build\"","position":{"start":{"line":131,"column":4,"offset":3038},"end":{"line":134,"column":7,"offset":3100},"indent":[4,4,4]}}],"position":{"start":{"line":129,"column":1,"offset":3012},"end":{"line":135,"column":1,"offset":3101},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Add a start script","position":{"start":{"line":136,"column":4,"offset":3105},"end":{"line":136,"column":22,"offset":3123},"indent":[]}}],"position":{"start":{"line":136,"column":4,"offset":3105},"end":{"line":136,"column":22,"offset":3123},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"+++ package.json\n+ \"start\": \"node .nexus/build/api\"","position":{"start":{"line":138,"column":4,"offset":3128},"end":{"line":141,"column":7,"offset":3200},"indent":[4,4,4]}}],"position":{"start":{"line":136,"column":1,"offset":3102},"end":{"line":142,"column":1,"offset":3201},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In many cases this will be enough. Many deployment platforms will call into these scripts by default. You can customize where ","position":{"start":{"line":143,"column":4,"offset":3205},"end":{"line":143,"column":130,"offset":3331},"indent":[]}},{"type":"inlineCode","value":"build","position":{"start":{"line":143,"column":130,"offset":3331},"end":{"line":143,"column":137,"offset":3338},"indent":[]}},{"type":"text","value":" outputs to if your deployment platform requires it. There are built in guides for ","position":{"start":{"line":143,"column":137,"offset":3338},"end":{"line":143,"column":220,"offset":3421},"indent":[]}},{"type":"inlineCode","value":"vercel","position":{"start":{"line":143,"column":220,"offset":3421},"end":{"line":143,"column":228,"offset":3429},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":143,"column":228,"offset":3429},"end":{"line":143,"column":233,"offset":3434},"indent":[]}},{"type":"inlineCode","value":"heroku","position":{"start":{"line":143,"column":233,"offset":3434},"end":{"line":143,"column":241,"offset":3442},"indent":[]}},{"type":"text","value":" which will check your project is prepared for deployment to those respective platforms. Take advantage of them if applicable:","position":{"start":{"line":143,"column":241,"offset":3442},"end":{"line":143,"column":367,"offset":3568},"indent":[]}}],"position":{"start":{"line":143,"column":4,"offset":3205},"end":{"line":143,"column":367,"offset":3568},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"+++ package.json\n+ \"build\": \"nexus build --deployment vercel\"","position":{"start":{"line":145,"column":4,"offset":3573},"end":{"line":148,"column":7,"offset":3655},"indent":[4,4,4]}},{"type":"code","lang":"diff","meta":null,"value":"+++ package.json\n+ \"build\": \"nexus build --deployment heroku\"","position":{"start":{"line":150,"column":4,"offset":3660},"end":{"line":153,"column":7,"offset":3742},"indent":[4,4,4]}}],"position":{"start":{"line":143,"column":1,"offset":3202},"end":{"line":153,"column":7,"offset":3742},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":129,"column":1,"offset":3012},"end":{"line":153,"column":7,"offset":3742},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prisma + Heroku + PostgreSQL","position":{"start":{"line":155,"column":4,"offset":3747},"end":{"line":155,"column":32,"offset":3775},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3744},"end":{"line":155,"column":32,"offset":3775},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Confirm the name of the environment variable that Heroku will inject into your app at runtime for the database connection URL. In a simple setup, with a single attached atabase, it is ","position":{"start":{"line":157,"column":4,"offset":3780},"end":{"line":157,"column":188,"offset":3964},"indent":[]}},{"type":"inlineCode","value":"DATABASE_URL","position":{"start":{"line":157,"column":188,"offset":3964},"end":{"line":157,"column":202,"offset":3978},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":157,"column":202,"offset":3978},"end":{"line":157,"column":203,"offset":3979},"indent":[]}}],"position":{"start":{"line":157,"column":4,"offset":3780},"end":{"line":157,"column":203,"offset":3979},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3777},"end":{"line":157,"column":203,"offset":3979},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Update your Prisma Schema file to get the database connection URL from an environment variable of the same name as in step 1. Example:","position":{"start":{"line":158,"column":4,"offset":3983},"end":{"line":158,"column":138,"offset":4117},"indent":[]}}],"position":{"start":{"line":158,"column":4,"offset":3983},"end":{"line":158,"column":138,"offset":4117},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"--- prisma/schema.prisma\n+++ prisma/schema.prisma\n  datasource postgresql {\n    provider = \"postgresql\"\n-   url      = \"postgresql://<user>:<pass>@localhost:5432/<db-name>\"\n+   url      = env(\"DATABASE_URL\")\n  }","position":{"start":{"line":160,"column":4,"offset":4122},"end":{"line":168,"column":7,"offset":4369},"indent":[4,4,4,4,4,4,4,4]}}],"position":{"start":{"line":158,"column":1,"offset":3980},"end":{"line":169,"column":1,"offset":4370},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Update your local development environment to pass the local development database connection URL via an environment variable of the same name as in step 1. Example with ","position":{"start":{"line":170,"column":4,"offset":4374},"end":{"line":170,"column":172,"offset":4542},"indent":[]}},{"type":"link","title":null,"url":"https://direnv.net/","children":[{"type":"text","value":"direnv","position":{"start":{"line":170,"column":173,"offset":4543},"end":{"line":170,"column":179,"offset":4549},"indent":[]}}],"position":{"start":{"line":170,"column":172,"offset":4542},"end":{"line":170,"column":201,"offset":4571},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":170,"column":201,"offset":4571},"end":{"line":170,"column":202,"offset":4572},"indent":[]}}],"position":{"start":{"line":170,"column":4,"offset":4374},"end":{"line":170,"column":202,"offset":4572},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install ","position":{"start":{"line":172,"column":7,"offset":4580},"end":{"line":172,"column":15,"offset":4588},"indent":[]}},{"type":"inlineCode","value":"direnv","position":{"start":{"line":172,"column":15,"offset":4588},"end":{"line":172,"column":23,"offset":4596},"indent":[]}}],"position":{"start":{"line":172,"column":7,"offset":4580},"end":{"line":172,"column":23,"offset":4596},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"brew install direnv","position":{"start":{"line":174,"column":7,"offset":4604},"end":{"line":176,"column":10,"offset":4646},"indent":[7,7]}}],"position":{"start":{"line":172,"column":4,"offset":4577},"end":{"line":177,"column":1,"offset":4647},"indent":[1,4,4,4,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Hook ","position":{"start":{"line":178,"column":7,"offset":4654},"end":{"line":178,"column":12,"offset":4659},"indent":[]}},{"type":"inlineCode","value":"direnv","position":{"start":{"line":178,"column":12,"offset":4659},"end":{"line":178,"column":20,"offset":4667},"indent":[]}},{"type":"text","value":" into your shell (","position":{"start":{"line":178,"column":20,"offset":4667},"end":{"line":178,"column":38,"offset":4685},"indent":[]}},{"type":"link","title":null,"url":"https://direnv.net/docs/hook.html","children":[{"type":"text","value":"instructions","position":{"start":{"line":178,"column":39,"offset":4686},"end":{"line":178,"column":51,"offset":4698},"indent":[]}}],"position":{"start":{"line":178,"column":38,"offset":4685},"end":{"line":178,"column":87,"offset":4734},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":178,"column":87,"offset":4734},"end":{"line":178,"column":88,"offset":4735},"indent":[]}}],"position":{"start":{"line":178,"column":7,"offset":4654},"end":{"line":178,"column":88,"offset":4735},"indent":[]}}],"position":{"start":{"line":178,"column":4,"offset":4651},"end":{"line":178,"column":88,"offset":4735},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Setup an ","position":{"start":{"line":179,"column":7,"offset":4742},"end":{"line":179,"column":16,"offset":4751},"indent":[]}},{"type":"inlineCode","value":".envrc","position":{"start":{"line":179,"column":16,"offset":4751},"end":{"line":179,"column":24,"offset":4759},"indent":[]}},{"type":"text","value":" file inside your project","position":{"start":{"line":179,"column":24,"offset":4759},"end":{"line":179,"column":49,"offset":4784},"indent":[]}}],"position":{"start":{"line":179,"column":7,"offset":4742},"end":{"line":179,"column":49,"offset":4784},"indent":[]}},{"type":"code","lang":"diff","meta":null,"value":"+++ .envrc\n+ DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/myapp\"","position":{"start":{"line":181,"column":7,"offset":4792},"end":{"line":184,"column":10,"offset":4901},"indent":[7,7,7]}}],"position":{"start":{"line":179,"column":4,"offset":4739},"end":{"line":185,"column":1,"offset":4902},"indent":[1,4,4,4,4,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Approve the ","position":{"start":{"line":186,"column":7,"offset":4909},"end":{"line":186,"column":19,"offset":4921},"indent":[]}},{"type":"inlineCode","value":".envrc","position":{"start":{"line":186,"column":19,"offset":4921},"end":{"line":186,"column":27,"offset":4929},"indent":[]}},{"type":"text","value":" file (one time, every time the envrc file changes).","position":{"start":{"line":186,"column":27,"offset":4929},"end":{"line":186,"column":79,"offset":4981},"indent":[]}}],"position":{"start":{"line":186,"column":7,"offset":4909},"end":{"line":186,"column":79,"offset":4981},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"direnv allow .","position":{"start":{"line":187,"column":7,"offset":4988},"end":{"line":189,"column":10,"offset":5025},"indent":[7,7]}}],"position":{"start":{"line":186,"column":4,"offset":4906},"end":{"line":189,"column":10,"offset":5025},"indent":[4,4,4]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Done. Now when you work within your project with a shell, all your commands will be run with access to the environment variables defined in your ","position":{"start":{"line":190,"column":7,"offset":5032},"end":{"line":190,"column":152,"offset":5177},"indent":[]}},{"type":"inlineCode","value":".envrc","position":{"start":{"line":190,"column":152,"offset":5177},"end":{"line":190,"column":160,"offset":5185},"indent":[]}},{"type":"text","value":" file. The magic of ","position":{"start":{"line":190,"column":160,"offset":5185},"end":{"line":190,"column":180,"offset":5205},"indent":[]}},{"type":"inlineCode","value":"direnv","position":{"start":{"line":190,"column":180,"offset":5205},"end":{"line":190,"column":188,"offset":5213},"indent":[]}},{"type":"text","value":" is that these environment variables are automatically exported to and removed from your environment based on you being within your prject directory or not.","position":{"start":{"line":190,"column":188,"offset":5213},"end":{"line":190,"column":344,"offset":5369},"indent":[]}}],"position":{"start":{"line":190,"column":7,"offset":5032},"end":{"line":190,"column":344,"offset":5369},"indent":[]}}],"position":{"start":{"line":190,"column":4,"offset":5029},"end":{"line":190,"column":344,"offset":5369},"indent":[]}}],"position":{"start":{"line":172,"column":4,"offset":4577},"end":{"line":190,"column":344,"offset":5369},"indent":[1,4,4,4,1,4,4,1,4,4,4,4,1,4,4,4,4,4]}}],"position":{"start":{"line":170,"column":1,"offset":4371},"end":{"line":190,"column":344,"offset":5369},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":157,"column":1,"offset":3777},"end":{"line":190,"column":344,"offset":5369},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Integrate ","position":{"start":{"line":192,"column":4,"offset":5374},"end":{"line":192,"column":14,"offset":5384},"indent":[]}},{"type":"inlineCode","value":"createTestContext","position":{"start":{"line":192,"column":14,"offset":5384},"end":{"line":192,"column":33,"offset":5403},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":192,"column":33,"offset":5403},"end":{"line":192,"column":39,"offset":5409},"indent":[]}},{"type":"inlineCode","value":"jest","position":{"start":{"line":192,"column":39,"offset":5409},"end":{"line":192,"column":45,"offset":5415},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":5371},"end":{"line":192,"column":45,"offset":5415},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Wrap ","position":{"start":{"line":194,"column":4,"offset":5420},"end":{"line":194,"column":9,"offset":5425},"indent":[]}},{"type":"inlineCode","value":"createTestContext","position":{"start":{"line":194,"column":9,"offset":5425},"end":{"line":194,"column":28,"offset":5444},"indent":[]}},{"type":"text","value":" so that it is integrated with the ","position":{"start":{"line":194,"column":28,"offset":5444},"end":{"line":194,"column":63,"offset":5479},"indent":[]}},{"type":"inlineCode","value":"jest","position":{"start":{"line":194,"column":63,"offset":5479},"end":{"line":194,"column":69,"offset":5485},"indent":[]}},{"type":"text","value":" test suite lifecycle hooks:","position":{"start":{"line":194,"column":69,"offset":5485},"end":{"line":194,"column":97,"offset":5513},"indent":[]}}],"position":{"start":{"line":194,"column":4,"offset":5420},"end":{"line":194,"column":97,"offset":5513},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"// tests/__helpers.ts\nimport { createTestContext, TestContext } from 'nexus/testing'\n\nexport function createTestContext(): TestContext {\n  let ctx: TestContext\n\n  beforeAll(async () => {\n    Object.assign(ctx, await createTestContext())\n    await ctx.app.start()\n  })\n\n  afterAll(async () => {\n    await ctx.app.stop()\n  })\n\n  return ctx\n}","position":{"start":{"line":196,"column":4,"offset":5518},"end":{"line":214,"column":7,"offset":5909},"indent":[4,4,1,4,4,1,4,4,4,4,1,4,4,4,1,4,4,4]}}],"position":{"start":{"line":194,"column":1,"offset":5417},"end":{"line":215,"column":1,"offset":5910},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Import your wrapped version into all test suites needing it:","position":{"start":{"line":216,"column":4,"offset":5914},"end":{"line":216,"column":64,"offset":5974},"indent":[]}}],"position":{"start":{"line":216,"column":4,"offset":5914},"end":{"line":216,"column":64,"offset":5974},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"// tests/foo.spec.ts\nimport { createTestContext } from './__helpers'\n\nconst ctx = createTestContext()\n\nit('foo', () => {\n  // use `ctx` in here\n})","position":{"start":{"line":218,"column":4,"offset":5979},"end":{"line":227,"column":7,"offset":6156},"indent":[4,4,1,4,1,4,4,4,4]}},{"type":"paragraph","children":[{"type":"text","value":"Note that ","position":{"start":{"line":229,"column":4,"offset":6161},"end":{"line":229,"column":14,"offset":6171},"indent":[]}},{"type":"inlineCode","value":"ctx","position":{"start":{"line":229,"column":14,"offset":6171},"end":{"line":229,"column":19,"offset":6176},"indent":[]}},{"type":"text","value":" is not usable outside of ","position":{"start":{"line":229,"column":19,"offset":6176},"end":{"line":229,"column":45,"offset":6202},"indent":[]}},{"type":"inlineCode","value":"jest","position":{"start":{"line":229,"column":45,"offset":6202},"end":{"line":229,"column":51,"offset":6208},"indent":[]}},{"type":"text","value":" blocks (","position":{"start":{"line":229,"column":51,"offset":6208},"end":{"line":229,"column":60,"offset":6217},"indent":[]}},{"type":"inlineCode","value":"it","position":{"start":{"line":229,"column":60,"offset":6217},"end":{"line":229,"column":64,"offset":6221},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":229,"column":64,"offset":6221},"end":{"line":229,"column":65,"offset":6222},"indent":[]}},{"type":"inlineCode","value":"before","position":{"start":{"line":229,"column":65,"offset":6222},"end":{"line":229,"column":73,"offset":6230},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":229,"column":73,"offset":6230},"end":{"line":229,"column":74,"offset":6231},"indent":[]}},{"type":"inlineCode","value":"after","position":{"start":{"line":229,"column":74,"offset":6231},"end":{"line":229,"column":81,"offset":6238},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":229,"column":81,"offset":6238},"end":{"line":229,"column":82,"offset":6239},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":229,"column":82,"offset":6239},"end":{"line":229,"column":87,"offset":6244},"indent":[]}},{"type":"text","value":"). If you try to you'll find it to be ","position":{"start":{"line":229,"column":87,"offset":6244},"end":{"line":229,"column":125,"offset":6282},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":229,"column":125,"offset":6282},"end":{"line":229,"column":136,"offset":6293},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":229,"column":136,"offset":6293},"end":{"line":229,"column":137,"offset":6294},"indent":[]}}],"position":{"start":{"line":229,"column":4,"offset":6161},"end":{"line":229,"column":137,"offset":6294},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { createTestContext } from './__helpers'\n\nconst { app } = createTestContext() // Error!","position":{"start":{"line":231,"column":4,"offset":6299},"end":{"line":235,"column":7,"offset":6412},"indent":[4,1,4,4]}}],"position":{"start":{"line":216,"column":1,"offset":5911},"end":{"line":235,"column":7,"offset":6412},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":194,"column":1,"offset":5417},"end":{"line":235,"column":7,"offset":6412},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Debugging","position":{"start":{"line":237,"column":4,"offset":6417},"end":{"line":237,"column":13,"offset":6426},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":6414},"end":{"line":237,"column":13,"offset":6426},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"With VS Code","position":{"start":{"line":239,"column":5,"offset":6432},"end":{"line":239,"column":17,"offset":6444},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":6428},"end":{"line":239,"column":17,"offset":6444},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We made it very simple to debug your app with VS Code.","position":{"start":{"line":241,"column":1,"offset":6446},"end":{"line":241,"column":55,"offset":6500},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":6446},"end":{"line":241,"column":55,"offset":6500},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note: If you used ","position":{"start":{"line":243,"column":3,"offset":6504},"end":{"line":243,"column":21,"offset":6522},"indent":[]}},{"type":"inlineCode","value":"npx nexus","position":{"start":{"line":243,"column":21,"offset":6522},"end":{"line":243,"column":32,"offset":6533},"indent":[]}},{"type":"text","value":" to initialize your project, jump straight to step 2.","position":{"start":{"line":243,"column":32,"offset":6533},"end":{"line":243,"column":85,"offset":6586},"indent":[]}}],"position":{"start":{"line":243,"column":3,"offset":6504},"end":{"line":243,"column":85,"offset":6586},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":6502},"end":{"line":243,"column":85,"offset":6586},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a ","position":{"start":{"line":245,"column":4,"offset":6591},"end":{"line":245,"column":13,"offset":6600},"indent":[]}},{"type":"inlineCode","value":".vscode/launch.json","position":{"start":{"line":245,"column":13,"offset":6600},"end":{"line":245,"column":34,"offset":6621},"indent":[]}},{"type":"text","value":" file and paste the following content","position":{"start":{"line":245,"column":34,"offset":6621},"end":{"line":245,"column":71,"offset":6658},"indent":[]}}],"position":{"start":{"line":245,"column":4,"offset":6591},"end":{"line":245,"column":71,"offset":6658},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":6588},"end":{"line":245,"column":71,"offset":6658},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":6588},"end":{"line":245,"column":71,"offset":6658},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"name\": \"Debug Nexus App\",\n      \"protocol\": \"inspector\",\n      \"runtimeExecutable\": \"${workspaceRoot}/node_modules/.bin/nexus\",\n      \"runtimeArgs\": [\"dev\"],\n      \"sourceMaps\": true,\n      \"console\": \"integratedTerminal\"\n    }\n  ]\n}","position":{"start":{"line":247,"column":1,"offset":6660},"end":{"line":263,"column":4,"offset":7013},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":true,"start":2,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Click on the ","position":{"start":{"line":265,"column":4,"offset":7018},"end":{"line":265,"column":17,"offset":7031},"indent":[]}},{"type":"inlineCode","value":"Run","position":{"start":{"line":265,"column":17,"offset":7031},"end":{"line":265,"column":22,"offset":7036},"indent":[]}},{"type":"text","value":" tab on the left side of VS Code","position":{"start":{"line":265,"column":22,"offset":7036},"end":{"line":265,"column":54,"offset":7068},"indent":[]}}],"position":{"start":{"line":265,"column":4,"offset":7018},"end":{"line":265,"column":54,"offset":7068},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":7015},"end":{"line":266,"column":1,"offset":7069},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure ","position":{"start":{"line":267,"column":4,"offset":7073},"end":{"line":267,"column":14,"offset":7083},"indent":[]}},{"type":"inlineCode","value":"Debug Nexus App","position":{"start":{"line":267,"column":14,"offset":7083},"end":{"line":267,"column":31,"offset":7100},"indent":[]}},{"type":"text","value":" is selected in the dropdown located at the top of the panel that the ","position":{"start":{"line":267,"column":31,"offset":7100},"end":{"line":267,"column":101,"offset":7170},"indent":[]}},{"type":"inlineCode","value":"Run","position":{"start":{"line":267,"column":101,"offset":7170},"end":{"line":267,"column":106,"offset":7175},"indent":[]}},{"type":"text","value":" tab opened","position":{"start":{"line":267,"column":106,"offset":7175},"end":{"line":267,"column":117,"offset":7186},"indent":[]}}],"position":{"start":{"line":267,"column":4,"offset":7073},"end":{"line":267,"column":117,"offset":7186},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":7070},"end":{"line":268,"column":1,"offset":7187},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Set some breaking points where you want to inspect your code","position":{"start":{"line":269,"column":4,"offset":7191},"end":{"line":269,"column":64,"offset":7251},"indent":[]}}],"position":{"start":{"line":269,"column":4,"offset":7191},"end":{"line":269,"column":64,"offset":7251},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":7188},"end":{"line":270,"column":1,"offset":7252},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Click the green \"Start debugging\" button located next to the dropdown","position":{"start":{"line":271,"column":4,"offset":7256},"end":{"line":271,"column":73,"offset":7325},"indent":[]}}],"position":{"start":{"line":271,"column":4,"offset":7256},"end":{"line":271,"column":73,"offset":7325},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":7253},"end":{"line":272,"column":1,"offset":7326},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"That's it. VS Code should run your code and stop wherever your set some breakpoints","position":{"start":{"line":273,"column":4,"offset":7330},"end":{"line":273,"column":87,"offset":7413},"indent":[]}}],"position":{"start":{"line":273,"column":4,"offset":7330},"end":{"line":273,"column":87,"offset":7413},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":7327},"end":{"line":273,"column":87,"offset":7413},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":7015},"end":{"line":273,"column":87,"offset":7413},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Use with Next.js","position":{"start":{"line":275,"column":4,"offset":7418},"end":{"line":275,"column":20,"offset":7434},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":7415},"end":{"line":275,"column":20,"offset":7434},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Steps","position":{"start":{"line":277,"column":5,"offset":7440},"end":{"line":277,"column":10,"offset":7445},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":7436},"end":{"line":277,"column":10,"offset":7445},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Your Next.js project must be ","position":{"start":{"line":279,"column":4,"offset":7450},"end":{"line":279,"column":33,"offset":7479},"indent":[]}},{"type":"link","title":null,"url":"https://nextjs.org/docs/basic-features/typescript","children":[{"type":"text","value":"a TypeSript","position":{"start":{"line":279,"column":34,"offset":7480},"end":{"line":279,"column":45,"offset":7491},"indent":[]}}],"position":{"start":{"line":279,"column":33,"offset":7479},"end":{"line":279,"column":97,"offset":7543},"indent":[]}},{"type":"text","value":", not JavaScript, one","position":{"start":{"line":279,"column":97,"offset":7543},"end":{"line":279,"column":118,"offset":7564},"indent":[]}}],"position":{"start":{"line":279,"column":4,"offset":7450},"end":{"line":279,"column":118,"offset":7564},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":7447},"end":{"line":279,"column":118,"offset":7564},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install ","position":{"start":{"line":280,"column":4,"offset":7568},"end":{"line":280,"column":12,"offset":7576},"indent":[]}},{"type":"inlineCode","value":"nexus","position":{"start":{"line":280,"column":12,"offset":7576},"end":{"line":280,"column":19,"offset":7583},"indent":[]}}],"position":{"start":{"line":280,"column":4,"offset":7568},"end":{"line":280,"column":19,"offset":7583},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":7565},"end":{"line":280,"column":19,"offset":7583},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create ","position":{"start":{"line":281,"column":4,"offset":7587},"end":{"line":281,"column":11,"offset":7594},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"one","position":{"start":{"line":281,"column":12,"offset":7595},"end":{"line":281,"column":15,"offset":7598},"indent":[]}}],"position":{"start":{"line":281,"column":11,"offset":7594},"end":{"line":281,"column":16,"offset":7599},"indent":[]}},{"type":"text","value":" GraphQL endpoint, e.g. ","position":{"start":{"line":281,"column":16,"offset":7599},"end":{"line":281,"column":40,"offset":7623},"indent":[]}},{"type":"inlineCode","value":"<project root>/pages/api/graphql.ts","position":{"start":{"line":281,"column":40,"offset":7623},"end":{"line":281,"column":77,"offset":7660},"indent":[]}}],"position":{"start":{"line":281,"column":4,"offset":7587},"end":{"line":281,"column":77,"offset":7660},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":7584},"end":{"line":281,"column":77,"offset":7660},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The minimum boilerplate needed in your GraphQL endpoint is:","position":{"start":{"line":282,"column":4,"offset":7664},"end":{"line":282,"column":63,"offset":7723},"indent":[]}}],"position":{"start":{"line":282,"column":4,"offset":7664},"end":{"line":282,"column":63,"offset":7723},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"// <project root>/pages/api/graphql.ts\n\nif (process.env.NODE_ENV === 'development') require('nexus').default.reset()\n\nconst app = require('nexus').default\n\n// Require your nexus modules here.\n// Do not write them inline, since the Nexus API is typed `any` because of `require` import.\n// require('...')\n\napp.assemble()\n\nexport default app.server.handlers.graphql","position":{"start":{"line":284,"column":4,"offset":7728},"end":{"line":298,"column":7,"offset":8127},"indent":[4,1,4,1,4,1,4,4,4,1,4,1,4,4]}}],"position":{"start":{"line":282,"column":1,"offset":7661},"end":{"line":299,"column":1,"offset":8128},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"While developing, you should run Nexus reflection a separate terminal apart from your normal ","position":{"start":{"line":300,"column":4,"offset":8132},"end":{"line":300,"column":97,"offset":8225},"indent":[]}},{"type":"inlineCode","value":"next dev","position":{"start":{"line":300,"column":97,"offset":8225},"end":{"line":300,"column":107,"offset":8235},"indent":[]}},{"type":"text","value":". This is in order to benefit from the type safety that Nexus can give you. One of its primary benefits. For example:","position":{"start":{"line":300,"column":107,"offset":8235},"end":{"line":300,"column":224,"offset":8352},"indent":[]}}],"position":{"start":{"line":300,"column":4,"offset":8132},"end":{"line":300,"column":224,"offset":8352},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"nexus:reflection\": \"nexus dev --reflection --entrypoint pages/api/graphql.ts\",","position":{"start":{"line":302,"column":4,"offset":8357},"end":{"line":304,"column":7,"offset":8454},"indent":[4,4]}}],"position":{"start":{"line":300,"column":1,"offset":8129},"end":{"line":305,"column":1,"offset":8455},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":306,"column":4,"offset":8459},"end":{"line":306,"column":9,"offset":8464},"indent":[]}},{"type":"inlineCode","value":"compilerOptions.noEmit","position":{"start":{"line":306,"column":9,"offset":8464},"end":{"line":306,"column":33,"offset":8488},"indent":[]}},{"type":"text","value":" set to ","position":{"start":{"line":306,"column":33,"offset":8488},"end":{"line":306,"column":41,"offset":8496},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":306,"column":41,"offset":8496},"end":{"line":306,"column":47,"offset":8502},"indent":[]}},{"type":"text","value":" in your tsconfig (forced by Next.js), treat ","position":{"start":{"line":306,"column":47,"offset":8502},"end":{"line":306,"column":92,"offset":8547},"indent":[]}},{"type":"inlineCode","value":"nexus build","position":{"start":{"line":306,"column":92,"offset":8547},"end":{"line":306,"column":105,"offset":8560},"indent":[]}},{"type":"text","value":" as a check step in your ci process.","position":{"start":{"line":306,"column":105,"offset":8560},"end":{"line":306,"column":141,"offset":8596},"indent":[]}}],"position":{"start":{"line":306,"column":4,"offset":8459},"end":{"line":306,"column":141,"offset":8596},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":8456},"end":{"line":306,"column":141,"offset":8596},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":7447},"end":{"line":306,"column":141,"offset":8596},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Notes","position":{"start":{"line":308,"column":5,"offset":8602},"end":{"line":308,"column":10,"offset":8607},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":8598},"end":{"line":308,"column":10,"offset":8607},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Overall, here are the limitations with Next.js integration that you will not find in a \"normal\" Nexus project.","position":{"start":{"line":310,"column":3,"offset":8611},"end":{"line":310,"column":113,"offset":8721},"indent":[]}}],"position":{"start":{"line":310,"column":3,"offset":8611},"end":{"line":310,"column":113,"offset":8721},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You must use CommonJS ","position":{"start":{"line":312,"column":6,"offset":8728},"end":{"line":312,"column":28,"offset":8750},"indent":[]}},{"type":"inlineCode","value":"require","position":{"start":{"line":312,"column":28,"offset":8750},"end":{"line":312,"column":37,"offset":8759},"indent":[]}},{"type":"text","value":" as opposed to ES module ","position":{"start":{"line":312,"column":37,"offset":8759},"end":{"line":312,"column":62,"offset":8784},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":312,"column":62,"offset":8784},"end":{"line":312,"column":70,"offset":8792},"indent":[]}},{"type":"text","value":" syntax for your Nexus api module. This is to preserve import order.","position":{"start":{"line":312,"column":70,"offset":8792},"end":{"line":312,"column":138,"offset":8860},"indent":[]}}],"position":{"start":{"line":312,"column":6,"offset":8728},"end":{"line":312,"column":138,"offset":8860},"indent":[]}}],"position":{"start":{"line":312,"column":3,"offset":8725},"end":{"line":312,"column":138,"offset":8860},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You must run ","position":{"start":{"line":313,"column":6,"offset":8866},"end":{"line":313,"column":19,"offset":8879},"indent":[]}},{"type":"inlineCode","value":"app.assemble()","position":{"start":{"line":313,"column":19,"offset":8879},"end":{"line":313,"column":35,"offset":8895},"indent":[]}},{"type":"text","value":" before accessing the server handlers.","position":{"start":{"line":313,"column":35,"offset":8895},"end":{"line":313,"column":73,"offset":8933},"indent":[]}}],"position":{"start":{"line":313,"column":6,"offset":8866},"end":{"line":313,"column":73,"offset":8933},"indent":[]}}],"position":{"start":{"line":313,"column":3,"offset":8863},"end":{"line":313,"column":73,"offset":8933},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In development, you must run ","position":{"start":{"line":314,"column":6,"offset":8939},"end":{"line":314,"column":35,"offset":8968},"indent":[]}},{"type":"inlineCode","value":"app.reset()","position":{"start":{"line":314,"column":35,"offset":8968},"end":{"line":314,"column":48,"offset":8981},"indent":[]}},{"type":"text","value":" in your Nexus api module, before anything else.","position":{"start":{"line":314,"column":48,"offset":8981},"end":{"line":314,"column":96,"offset":9029},"indent":[]}}],"position":{"start":{"line":314,"column":6,"offset":8939},"end":{"line":314,"column":96,"offset":9029},"indent":[]}}],"position":{"start":{"line":314,"column":3,"offset":8936},"end":{"line":314,"column":96,"offset":9029},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure that you only have one Nexus api module, or else you may experience difficulties in development.","position":{"start":{"line":315,"column":6,"offset":9035},"end":{"line":315,"column":112,"offset":9141},"indent":[]}}],"position":{"start":{"line":315,"column":6,"offset":9035},"end":{"line":315,"column":112,"offset":9141},"indent":[]}}],"position":{"start":{"line":315,"column":3,"offset":9032},"end":{"line":315,"column":112,"offset":9141},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure that your Nexus modules (ones using the ","position":{"start":{"line":316,"column":6,"offset":9147},"end":{"line":316,"column":56,"offset":9197},"indent":[]}},{"type":"inlineCode","value":"nexus","position":{"start":{"line":316,"column":56,"offset":9197},"end":{"line":316,"column":63,"offset":9204},"indent":[]}},{"type":"text","value":" package) are only part of the import graph of your Nexus api module.","position":{"start":{"line":316,"column":63,"offset":9204},"end":{"line":316,"column":132,"offset":9273},"indent":[]}}],"position":{"start":{"line":316,"column":6,"offset":9147},"end":{"line":316,"column":132,"offset":9273},"indent":[]}}],"position":{"start":{"line":316,"column":3,"offset":9144},"end":{"line":316,"column":132,"offset":9273},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you would like to use GraphQL Playground, do not rely on the one packaged with Nexus. Instead you can use an external one like ","position":{"start":{"line":317,"column":6,"offset":9279},"end":{"line":317,"column":136,"offset":9409},"indent":[]}},{"type":"link","title":null,"url":"https://www.electronjs.org/apps/graphql-playground","children":[{"type":"text","value":"this standalone electron one","position":{"start":{"line":317,"column":137,"offset":9410},"end":{"line":317,"column":165,"offset":9438},"indent":[]}}],"position":{"start":{"line":317,"column":136,"offset":9409},"end":{"line":317,"column":218,"offset":9491},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":317,"column":218,"offset":9491},"end":{"line":317,"column":219,"offset":9492},"indent":[]}}],"position":{"start":{"line":317,"column":6,"offset":9279},"end":{"line":317,"column":219,"offset":9492},"indent":[]}}],"position":{"start":{"line":317,"column":3,"offset":9276},"end":{"line":317,"column":219,"offset":9492},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You will not be able to use the Nexus testing component","position":{"start":{"line":318,"column":6,"offset":9498},"end":{"line":318,"column":61,"offset":9553},"indent":[]}}],"position":{"start":{"line":318,"column":6,"offset":9498},"end":{"line":318,"column":61,"offset":9553},"indent":[]}}],"position":{"start":{"line":318,"column":3,"offset":9495},"end":{"line":318,"column":61,"offset":9553},"indent":[]}}],"position":{"start":{"line":312,"column":3,"offset":8725},"end":{"line":318,"column":61,"offset":9553},"indent":[3,3,3,3,3,3]}}],"position":{"start":{"line":310,"column":1,"offset":8609},"end":{"line":319,"column":1,"offset":9554},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Integration with Next.js should improve ","position":{"start":{"line":320,"column":3,"offset":9557},"end":{"line":320,"column":43,"offset":9597},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/zeit/next.js/issues/9133","children":[{"type":"text","value":"once it supports plugins","position":{"start":{"line":320,"column":44,"offset":9598},"end":{"line":320,"column":68,"offset":9622},"indent":[]}}],"position":{"start":{"line":320,"column":43,"offset":9597},"end":{"line":320,"column":114,"offset":9668},"indent":[]}},{"type":"text","value":". For example you will probably not need to think about ","position":{"start":{"line":320,"column":114,"offset":9668},"end":{"line":320,"column":170,"offset":9724},"indent":[]}},{"type":"inlineCode","value":"app.assemble()","position":{"start":{"line":320,"column":170,"offset":9724},"end":{"line":320,"column":186,"offset":9740},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":320,"column":186,"offset":9740},"end":{"line":320,"column":191,"offset":9745},"indent":[]}},{"type":"inlineCode","value":"app.reset()","position":{"start":{"line":320,"column":191,"offset":9745},"end":{"line":320,"column":204,"offset":9758},"indent":[]}},{"type":"text","value":" anymore and be able to use ES module syntax in your Nexus api module.","position":{"start":{"line":320,"column":204,"offset":9758},"end":{"line":320,"column":274,"offset":9828},"indent":[]}}],"position":{"start":{"line":320,"column":3,"offset":9557},"end":{"line":320,"column":274,"offset":9828},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":9555},"end":{"line":320,"column":274,"offset":9828},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":8609},"end":{"line":320,"column":274,"offset":9828},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Recipes\",\"metaTitle\":\"Recipes\"}","position":{"start":{"line":323,"column":1,"offset":9831},"end":{"line":323,"column":70,"offset":9900},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":323,"column":70,"offset":9900}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Recipes\",\n  \"metaTitle\": \"Recipes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"use-prisma\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#use-prisma\",\n    \"aria-label\": \"use prisma permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Use Prisma\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install the prisma plugin\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"npm install nexus-plugin-prisma\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enable the plugin\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { use } from 'nexus'\\nimport { prisma } from 'nexus-plugin-prisma'\\n\\nuse(prisma())\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"schema.prisma\"), \" file. Add a datasource. Here we're working with SQLite. Add Prisma Client.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ prisma/schema.prisma\\n+\\n+  datasource db {\\n+    provider = \\\"sqlite\\\"\\n+    url      = \\\"file:dev.db\\\"\\n+  }\\n+\\n+  generator prisma_client {\\n+    provider = \\\"prisma-client-js\\\"\\n+  }\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Initialize your database\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"yarn prisma migrate save --experimental && yarn prisma migrate up --experimental\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Now your app has the following\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-prisma\"), \" Nexus plugin allowing e.g.:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ src/graphql.ts\\n  objectType({\\n    name: 'User',\\n    definition(t) {\\n-     t.id('id)\\n-     t.string('name')\\n+     t.model.id()\\n+     t.model.name()\\n    },\\n  })\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"An instance of the generated Prisma Client is a added to context under the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db\"), \" property, allowing e.g.:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ src/graphql.ts\\n  queryType({\\n    definition(t) {\\n      t.list.field('users', {\\n        type: 'User',\\n-       resolve() {\\n-         return [{ id: '1643', name: 'newton' }]\\n+       resolve(_root, _args, ctx) {\\n+         return ctx.db.users.findMany()\\n        },\\n      })\\n    },\\n  })\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The TypeScript types representing your Prisma models are registered as a Nexus data source. In short this enables proper typing of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parent\"), \" parameters in your resolves. They reflect the data of the correspondingly named Prisma model.\")))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"create-a-consumable-plugin\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#create-a-consumable-plugin\",\n    \"aria-label\": \"create a consumable plugin permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Create a Consumable Plugin\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Scaffold Your plugin project\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"npx nexus create plugin\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Publish it\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"yarn publish\\n\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"setting-up-postgresql\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#setting-up-postgresql\",\n    \"aria-label\": \"setting up postgresql permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Setting up PostgreSQL\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"hosted\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#hosted\",\n    \"aria-label\": \"hosted permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Hosted\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For trying things out in a deployed setting you can try Heroku's free postgres tier. Setting it up is simple:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"heroku create\\nheroku addons:create heroku-postgresql\\n\\n# Now get the connection URL\\nheroku pg:credentials:url\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For a more complete explanation of this approach see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.to/prisma/how-to-setup-a-free-postgresql-database-on-heroku-1dc1\"\n  }), \"this blog post by Nikolas Burk\"), \" using the the Heroku UI.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h5\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"local\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#local\",\n    \"aria-label\": \"local permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Local\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The reccommended way to run postgres locally is with docker, because it is easy flexible and reliable.\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Start a postgres server for your app:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"docker run --detach --publish 5432:5432 -e POSTGRES_PASSWORD=postgres --name 'postgres' postgres:10.12\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Now you can use a connection URL like:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"postgresql://postgres:postgres@localhost:5432/myapp\\n\")))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you don't want to use a docker, here are some links to alternative approaches for macOS users:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://wiki.postgresql.org/wiki/Homebrew\"\n  }), \"With Homebrew\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://postgresapp.com\"\n  }), \"With Postgres.app\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"go-to-production\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#go-to-production\",\n    \"aria-label\": \"go to production permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Go to production\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Add a build script\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ package.json\\n+ \\\"build\\\": \\\"nexus build\\\"\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Add a start script\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ package.json\\n+ \\\"start\\\": \\\"node .nexus/build/api\\\"\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In many cases this will be enough. Many deployment platforms will call into these scripts by default. You can customize where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" outputs to if your deployment platform requires it. There are built in guides for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vercel\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"heroku\"), \" which will check your project is prepared for deployment to those respective platforms. Take advantage of them if applicable:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ package.json\\n+ \\\"build\\\": \\\"nexus build --deployment vercel\\\"\\n\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ package.json\\n+ \\\"build\\\": \\\"nexus build --deployment heroku\\\"\\n\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"prisma--heroku--postgresql\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#prisma--heroku--postgresql\",\n    \"aria-label\": \"prisma  heroku  postgresql permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Prisma + Heroku + PostgreSQL\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Confirm the name of the environment variable that Heroku will inject into your app at runtime for the database connection URL. In a simple setup, with a single attached atabase, it is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DATABASE_URL\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Update your Prisma Schema file to get the database connection URL from an environment variable of the same name as in step 1. Example:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"--- prisma/schema.prisma\\n+++ prisma/schema.prisma\\n  datasource postgresql {\\n    provider = \\\"postgresql\\\"\\n-   url      = \\\"postgresql://<user>:<pass>@localhost:5432/<db-name>\\\"\\n+   url      = env(\\\"DATABASE_URL\\\")\\n  }\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Update your local development environment to pass the local development database connection URL via an environment variable of the same name as in step 1. Example with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://direnv.net/\"\n  }), \"direnv\"), \":\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"direnv\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"brew install direnv\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Hook \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"direnv\"), \" into your shell (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://direnv.net/docs/hook.html\"\n  }), \"instructions\"), \")\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Setup an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".envrc\"), \" file inside your project\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+++ .envrc\\n+ DATABASE_URL=\\\"postgresql://postgres:postgres@localhost:5432/myapp\\\"\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Approve the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".envrc\"), \" file (one time, every time the envrc file changes).\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"direnv allow .\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Done. Now when you work within your project with a shell, all your commands will be run with access to the environment variables defined in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".envrc\"), \" file. The magic of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"direnv\"), \" is that these environment variables are automatically exported to and removed from your environment based on you being within your prject directory or not.\")))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"integrate-createtestcontext-with-jest\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#integrate-createtestcontext-with-jest\",\n    \"aria-label\": \"integrate createtestcontext with jest permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Integrate \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"createTestContext\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"jest\")), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Wrap \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createTestContext\"), \" so that it is integrated with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest\"), \" test suite lifecycle hooks:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// tests/__helpers.ts\\nimport { createTestContext, TestContext } from 'nexus/testing'\\n\\nexport function createTestContext(): TestContext {\\n  let ctx: TestContext\\n\\n  beforeAll(async () => {\\n    Object.assign(ctx, await createTestContext())\\n    await ctx.app.start()\\n  })\\n\\n  afterAll(async () => {\\n    await ctx.app.stop()\\n  })\\n\\n  return ctx\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Import your wrapped version into all test suites needing it:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// tests/foo.spec.ts\\nimport { createTestContext } from './__helpers'\\n\\nconst ctx = createTestContext()\\n\\nit('foo', () => {\\n  // use `ctx` in here\\n})\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Note that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctx\"), \" is not usable outside of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest\"), \" blocks (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"it\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"before\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"after\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"...\"), \"). If you try to you'll find it to be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"undefined\"), \".\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { createTestContext } from './__helpers'\\n\\nconst { app } = createTestContext() // Error!\\n\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"debugging\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#debugging\",\n    \"aria-label\": \"debugging permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Debugging\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"with-vs-code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#with-vs-code\",\n    \"aria-label\": \"with vs code permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"With VS Code\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We made it very simple to debug your app with VS Code.\"), mdx(\"blockquote\", {\n    parentName: \"section\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: If you used \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx nexus\"), \" to initialize your project, jump straight to step 2.\")), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".vscode/launch.json\"), \" file and paste the following content\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"version\\\": \\\"0.2.0\\\",\\n  \\\"configurations\\\": [\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"request\\\": \\\"launch\\\",\\n      \\\"name\\\": \\\"Debug Nexus App\\\",\\n      \\\"protocol\\\": \\\"inspector\\\",\\n      \\\"runtimeExecutable\\\": \\\"${workspaceRoot}/node_modules/.bin/nexus\\\",\\n      \\\"runtimeArgs\\\": [\\\"dev\\\"],\\n      \\\"sourceMaps\\\": true,\\n      \\\"console\\\": \\\"integratedTerminal\\\"\\n    }\\n  ]\\n}\\n\")), mdx(\"ol\", _extends({\n    parentName: \"section\"\n  }, {\n    \"start\": 2\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Run\"), \" tab on the left side of VS Code\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Make sure \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Debug Nexus App\"), \" is selected in the dropdown located at the top of the panel that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Run\"), \" tab opened\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Set some breaking points where you want to inspect your code\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click the green \\\"Start debugging\\\" button located next to the dropdown\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"That's it. VS Code should run your code and stop wherever your set some breakpoints\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"use-with-nextjs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#use-with-nextjs\",\n    \"aria-label\": \"use with nextjs permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Use with Next.js\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Steps\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Your Next.js project must be \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/docs/basic-features/typescript\"\n  }), \"a TypeSript\"), \", not JavaScript, one\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"one\"), \" GraphQL endpoint, e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<project root>/pages/api/graphql.ts\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The minimum boilerplate needed in your GraphQL endpoint is:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// <project root>/pages/api/graphql.ts\\n\\nif (process.env.NODE_ENV === 'development') require('nexus').default.reset()\\n\\nconst app = require('nexus').default\\n\\n// Require your nexus modules here.\\n// Do not write them inline, since the Nexus API is typed `any` because of `require` import.\\n// require('...')\\n\\napp.assemble()\\n\\nexport default app.server.handlers.graphql\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"While developing, you should run Nexus reflection a separate terminal apart from your normal \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"next dev\"), \". This is in order to benefit from the type safety that Nexus can give you. One of its primary benefits. For example:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"nexus:reflection\\\": \\\"nexus dev --reflection --entrypoint pages/api/graphql.ts\\\",\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"With \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compilerOptions.noEmit\"), \" set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" in your tsconfig (forced by Next.js), treat \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus build\"), \" as a check step in your ci process.\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"notes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#notes\",\n    \"aria-label\": \"notes permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Notes\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Overall, here are the limitations with Next.js integration that you will not find in a \\\"normal\\\" Nexus project.\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You must use CommonJS \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"require\"), \" as opposed to ES module \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"import\"), \" syntax for your Nexus api module. This is to preserve import order.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You must run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"app.assemble()\"), \" before accessing the server handlers.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In development, you must run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"app.reset()\"), \" in your Nexus api module, before anything else.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make sure that you only have one Nexus api module, or else you may experience difficulties in development.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make sure that your Nexus modules (ones using the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nexus\"), \" package) are only part of the import graph of your Nexus api module.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If you would like to use GraphQL Playground, do not rely on the one packaged with Nexus. Instead you can use an external one like \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.electronjs.org/apps/graphql-playground\"\n  }), \"this standalone electron one\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You will not be able to use the Nexus testing component\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Integration with Next.js should improve \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/zeit/next.js/issues/9133\"\n  }), \"once it supports plugins\"), \". For example you will probably not need to think about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app.assemble()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app.reset()\"), \" anymore and be able to use ES module syntax in your Nexus api module.\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Recipes\",\n  \"metaTitle\": \"Recipes\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"use-prisma\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#use-prisma\",\n          \"aria-label\": \"use prisma permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Use Prisma`}</h2><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Install the prisma plugin`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-cli\"\n            }}>{`npm install nexus-plugin-prisma\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Enable the plugin`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`import { use } from 'nexus'\nimport { prisma } from 'nexus-plugin-prisma'\n\nuse(prisma())\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`schema.prisma`}</inlineCode>{` file. Add a datasource. Here we're working with SQLite. Add Prisma Client.`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-diff\"\n            }}>{`+++ prisma/schema.prisma\n+\n+  datasource db {\n+    provider = \"sqlite\"\n+    url      = \"file:dev.db\"\n+  }\n+\n+  generator prisma_client {\n+    provider = \"prisma-client-js\"\n+  }\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Initialize your database`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-cli\"\n            }}>{`yarn prisma migrate save --experimental && yarn prisma migrate up --experimental\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Now your app has the following`}</p>\n          <ol parentName=\"li\">\n            <li parentName=\"ol\">\n              <p parentName=\"li\"><inlineCode parentName=\"p\">{`nexus-prisma`}</inlineCode>{` Nexus plugin allowing e.g.:`}</p>\n              <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-diff\"\n                }}>{`+++ src/graphql.ts\n  objectType({\n    name: 'User',\n    definition(t) {\n-     t.id('id)\n-     t.string('name')\n+     t.model.id()\n+     t.model.name()\n    },\n  })\n`}</code></pre>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`An instance of the generated Prisma Client is a added to context under the `}<inlineCode parentName=\"p\">{`db`}</inlineCode>{` property, allowing e.g.:`}</p>\n              <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-diff\"\n                }}>{`+++ src/graphql.ts\n  queryType({\n    definition(t) {\n      t.list.field('users', {\n        type: 'User',\n-       resolve() {\n-         return [{ id: '1643', name: 'newton' }]\n+       resolve(_root, _args, ctx) {\n+         return ctx.db.users.findMany()\n        },\n      })\n    },\n  })\n`}</code></pre>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`The TypeScript types representing your Prisma models are registered as a Nexus data source. In short this enables proper typing of `}<inlineCode parentName=\"p\">{`parent`}</inlineCode>{` parameters in your resolves. They reflect the data of the correspondingly named Prisma model.`}</p>\n            </li>\n          </ol>\n        </li>\n      </ol></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"create-a-consumable-plugin\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#create-a-consumable-plugin\",\n          \"aria-label\": \"create a consumable plugin permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Create a Consumable Plugin`}</h2><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Scaffold Your plugin project`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-cli\"\n            }}>{`npx nexus create plugin\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Publish it`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-cli\"\n            }}>{`yarn publish\n`}</code></pre>\n        </li>\n      </ol></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"setting-up-postgresql\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#setting-up-postgresql\",\n          \"aria-label\": \"setting up postgresql permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Setting up PostgreSQL`}</h2><section parentName=\"section\"><h5 parentName=\"section\" {...{\n          \"id\": \"hosted\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h5\" {...{\n            \"href\": \"#hosted\",\n            \"aria-label\": \"hosted permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Hosted`}</h5><p parentName=\"section\">{`For trying things out in a deployed setting you can try Heroku's free postgres tier. Setting it up is simple:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`heroku create\nheroku addons:create heroku-postgresql\n\n# Now get the connection URL\nheroku pg:credentials:url\n`}</code></pre><p parentName=\"section\">{`For a more complete explanation of this approach see `}<a parentName=\"p\" {...{\n            \"href\": \"https://dev.to/prisma/how-to-setup-a-free-postgresql-database-on-heroku-1dc1\"\n          }}>{`this blog post by Nikolas Burk`}</a>{` using the the Heroku UI.`}</p></section><section parentName=\"section\"><h5 parentName=\"section\" {...{\n          \"id\": \"local\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h5\" {...{\n            \"href\": \"#local\",\n            \"aria-label\": \"local permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Local`}</h5><p parentName=\"section\">{`The reccommended way to run postgres locally is with docker, because it is easy flexible and reliable.`}</p><ol parentName=\"section\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Start a postgres server for your app:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-cli\"\n              }}>{`docker run --detach --publish 5432:5432 -e POSTGRES_PASSWORD=postgres --name 'postgres' postgres:10.12\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Now you can use a connection URL like:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`postgresql://postgres:postgres@localhost:5432/myapp\n`}</code></pre>\n          </li>\n        </ol><p parentName=\"section\">{`If you don't want to use a docker, here are some links to alternative approaches for macOS users:`}</p><ul parentName=\"section\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://wiki.postgresql.org/wiki/Homebrew\"\n            }}>{`With Homebrew`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://postgresapp.com\"\n            }}>{`With Postgres.app`}</a></li>\n        </ul></section></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"go-to-production\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#go-to-production\",\n          \"aria-label\": \"go to production permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Go to production`}</h2><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Add a build script`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-diff\"\n            }}>{`+++ package.json\n+ \"build\": \"nexus build\"\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Add a start script`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-diff\"\n            }}>{`+++ package.json\n+ \"start\": \"node .nexus/build/api\"\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`In many cases this will be enough. Many deployment platforms will call into these scripts by default. You can customize where `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` outputs to if your deployment platform requires it. There are built in guides for `}<inlineCode parentName=\"p\">{`vercel`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`heroku`}</inlineCode>{` which will check your project is prepared for deployment to those respective platforms. Take advantage of them if applicable:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-diff\"\n            }}>{`+++ package.json\n+ \"build\": \"nexus build --deployment vercel\"\n`}</code></pre>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-diff\"\n            }}>{`+++ package.json\n+ \"build\": \"nexus build --deployment heroku\"\n`}</code></pre>\n        </li>\n      </ol></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"prisma--heroku--postgresql\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#prisma--heroku--postgresql\",\n          \"aria-label\": \"prisma  heroku  postgresql permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Prisma + Heroku + PostgreSQL`}</h2><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Confirm the name of the environment variable that Heroku will inject into your app at runtime for the database connection URL. In a simple setup, with a single attached atabase, it is `}<inlineCode parentName=\"p\">{`DATABASE_URL`}</inlineCode>{`.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Update your Prisma Schema file to get the database connection URL from an environment variable of the same name as in step 1. Example:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-diff\"\n            }}>{`--- prisma/schema.prisma\n+++ prisma/schema.prisma\n  datasource postgresql {\n    provider = \"postgresql\"\n-   url      = \"postgresql://<user>:<pass>@localhost:5432/<db-name>\"\n+   url      = env(\"DATABASE_URL\")\n  }\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Update your local development environment to pass the local development database connection URL via an environment variable of the same name as in step 1. Example with `}<a parentName=\"p\" {...{\n              \"href\": \"https://direnv.net/\"\n            }}>{`direnv`}</a>{`:`}</p>\n          <ol parentName=\"li\">\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`Install `}<inlineCode parentName=\"p\">{`direnv`}</inlineCode></p>\n              <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-cli\"\n                }}>{`brew install direnv\n`}</code></pre>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`Hook `}<inlineCode parentName=\"p\">{`direnv`}</inlineCode>{` into your shell (`}<a parentName=\"p\" {...{\n                  \"href\": \"https://direnv.net/docs/hook.html\"\n                }}>{`instructions`}</a>{`)`}</p>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`Setup an `}<inlineCode parentName=\"p\">{`.envrc`}</inlineCode>{` file inside your project`}</p>\n              <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-diff\"\n                }}>{`+++ .envrc\n+ DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/myapp\"\n`}</code></pre>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`Approve the `}<inlineCode parentName=\"p\">{`.envrc`}</inlineCode>{` file (one time, every time the envrc file changes).`}</p>\n              <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                  \"className\": \"language-cli\"\n                }}>{`direnv allow .\n`}</code></pre>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`Done. Now when you work within your project with a shell, all your commands will be run with access to the environment variables defined in your `}<inlineCode parentName=\"p\">{`.envrc`}</inlineCode>{` file. The magic of `}<inlineCode parentName=\"p\">{`direnv`}</inlineCode>{` is that these environment variables are automatically exported to and removed from your environment based on you being within your prject directory or not.`}</p>\n            </li>\n          </ol>\n        </li>\n      </ol></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"integrate-createtestcontext-with-jest\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#integrate-createtestcontext-with-jest\",\n          \"aria-label\": \"integrate createtestcontext with jest permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Integrate `}<inlineCode parentName=\"h2\">{`createTestContext`}</inlineCode>{` with `}<inlineCode parentName=\"h2\">{`jest`}</inlineCode></h2><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Wrap `}<inlineCode parentName=\"p\">{`createTestContext`}</inlineCode>{` so that it is integrated with the `}<inlineCode parentName=\"p\">{`jest`}</inlineCode>{` test suite lifecycle hooks:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// tests/__helpers.ts\nimport { createTestContext, TestContext } from 'nexus/testing'\n\nexport function createTestContext(): TestContext {\n  let ctx: TestContext\n\n  beforeAll(async () => {\n    Object.assign(ctx, await createTestContext())\n    await ctx.app.start()\n  })\n\n  afterAll(async () => {\n    await ctx.app.stop()\n  })\n\n  return ctx\n}\n`}</code></pre>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Import your wrapped version into all test suites needing it:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// tests/foo.spec.ts\nimport { createTestContext } from './__helpers'\n\nconst ctx = createTestContext()\n\nit('foo', () => {\n  // use \\`ctx\\` in here\n})\n`}</code></pre>\n          <p parentName=\"li\">{`Note that `}<inlineCode parentName=\"p\">{`ctx`}</inlineCode>{` is not usable outside of `}<inlineCode parentName=\"p\">{`jest`}</inlineCode>{` blocks (`}<inlineCode parentName=\"p\">{`it`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`before`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`after`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`...`}</inlineCode>{`). If you try to you'll find it to be `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{`.`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`import { createTestContext } from './__helpers'\n\nconst { app } = createTestContext() // Error!\n`}</code></pre>\n        </li>\n      </ol></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"debugging\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#debugging\",\n          \"aria-label\": \"debugging permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Debugging`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"with-vs-code\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#with-vs-code\",\n            \"aria-label\": \"with vs code permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`With VS Code`}</h3><p parentName=\"section\">{`We made it very simple to debug your app with VS Code.`}</p><blockquote parentName=\"section\">\n          <p parentName=\"blockquote\">{`Note: If you used `}<inlineCode parentName=\"p\">{`npx nexus`}</inlineCode>{` to initialize your project, jump straight to step 2.`}</p>\n        </blockquote><ol parentName=\"section\">\n          <li parentName=\"ol\">{`Create a `}<inlineCode parentName=\"li\">{`.vscode/launch.json`}</inlineCode>{` file and paste the following content`}</li>\n        </ol><pre parentName=\"section\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"name\": \"Debug Nexus App\",\n      \"protocol\": \"inspector\",\n      \"runtimeExecutable\": \"\\${workspaceRoot}/node_modules/.bin/nexus\",\n      \"runtimeArgs\": [\"dev\"],\n      \"sourceMaps\": true,\n      \"console\": \"integratedTerminal\"\n    }\n  ]\n}\n`}</code></pre><ol parentName=\"section\" {...{\n          \"start\": 2\n        }}>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Click on the `}<inlineCode parentName=\"p\">{`Run`}</inlineCode>{` tab on the left side of VS Code`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Make sure `}<inlineCode parentName=\"p\">{`Debug Nexus App`}</inlineCode>{` is selected in the dropdown located at the top of the panel that the `}<inlineCode parentName=\"p\">{`Run`}</inlineCode>{` tab opened`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Set some breaking points where you want to inspect your code`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Click the green \"Start debugging\" button located next to the dropdown`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`That's it. VS Code should run your code and stop wherever your set some breakpoints`}</p>\n          </li>\n        </ol></section></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"use-with-nextjs\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#use-with-nextjs\",\n          \"aria-label\": \"use with nextjs permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Use with Next.js`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"steps\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#steps\",\n            \"aria-label\": \"steps permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Steps`}</h3><ol parentName=\"section\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Your Next.js project must be `}<a parentName=\"p\" {...{\n                \"href\": \"https://nextjs.org/docs/basic-features/typescript\"\n              }}>{`a TypeSript`}</a>{`, not JavaScript, one`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Install `}<inlineCode parentName=\"p\">{`nexus`}</inlineCode></p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Create `}<em parentName=\"p\">{`one`}</em>{` GraphQL endpoint, e.g. `}<inlineCode parentName=\"p\">{`<project root>/pages/api/graphql.ts`}</inlineCode></p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`The minimum boilerplate needed in your GraphQL endpoint is:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`// <project root>/pages/api/graphql.ts\n\nif (process.env.NODE_ENV === 'development') require('nexus').default.reset()\n\nconst app = require('nexus').default\n\n// Require your nexus modules here.\n// Do not write them inline, since the Nexus API is typed \\`any\\` because of \\`require\\` import.\n// require('...')\n\napp.assemble()\n\nexport default app.server.handlers.graphql\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`While developing, you should run Nexus reflection a separate terminal apart from your normal `}<inlineCode parentName=\"p\">{`next dev`}</inlineCode>{`. This is in order to benefit from the type safety that Nexus can give you. One of its primary benefits. For example:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-json\"\n              }}>{`\"nexus:reflection\": \"nexus dev --reflection --entrypoint pages/api/graphql.ts\",\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`With `}<inlineCode parentName=\"p\">{`compilerOptions.noEmit`}</inlineCode>{` set to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in your tsconfig (forced by Next.js), treat `}<inlineCode parentName=\"p\">{`nexus build`}</inlineCode>{` as a check step in your ci process.`}</p>\n          </li>\n        </ol></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"notes\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#notes\",\n            \"aria-label\": \"notes permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Notes`}</h3><ul parentName=\"section\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Overall, here are the limitations with Next.js integration that you will not find in a \"normal\" Nexus project.`}</p>\n            <ol parentName=\"li\">\n              <li parentName=\"ol\">{`You must use CommonJS `}<inlineCode parentName=\"li\">{`require`}</inlineCode>{` as opposed to ES module `}<inlineCode parentName=\"li\">{`import`}</inlineCode>{` syntax for your Nexus api module. This is to preserve import order.`}</li>\n              <li parentName=\"ol\">{`You must run `}<inlineCode parentName=\"li\">{`app.assemble()`}</inlineCode>{` before accessing the server handlers.`}</li>\n              <li parentName=\"ol\">{`In development, you must run `}<inlineCode parentName=\"li\">{`app.reset()`}</inlineCode>{` in your Nexus api module, before anything else.`}</li>\n              <li parentName=\"ol\">{`Make sure that you only have one Nexus api module, or else you may experience difficulties in development.`}</li>\n              <li parentName=\"ol\">{`Make sure that your Nexus modules (ones using the `}<inlineCode parentName=\"li\">{`nexus`}</inlineCode>{` package) are only part of the import graph of your Nexus api module.`}</li>\n              <li parentName=\"ol\">{`If you would like to use GraphQL Playground, do not rely on the one packaged with Nexus. Instead you can use an external one like `}<a parentName=\"li\" {...{\n                  \"href\": \"https://www.electronjs.org/apps/graphql-playground\"\n                }}>{`this standalone electron one`}</a>{`.`}</li>\n              <li parentName=\"ol\">{`You will not be able to use the Nexus testing component`}</li>\n            </ol>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Integration with Next.js should improve `}<a parentName=\"p\" {...{\n                \"href\": \"https://github.com/zeit/next.js/issues/9133\"\n              }}>{`once it supports plugins`}</a>{`. For example you will probably not need to think about `}<inlineCode parentName=\"p\">{`app.assemble()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`app.reset()`}</inlineCode>{` anymore and be able to use ES module syntax in your Nexus api module.`}</p>\n          </li>\n        </ul></section></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}