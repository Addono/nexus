{"expireTime":9007200846065467000,"key":"gatsby-plugin-mdx-entire-payload-74b9ea43b7c5fb74a73785c6f8e48b25-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Welcome to Nexus","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":20,"offset":20},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus is a Node.js code-first GraphQL framework. It has a clean simple intuitive declarative API built from the ground to support autocompletion, type-safety, great jsDoc, and more out of the box. It leverages the TypeScript compiler API and its own sophisticated development mode to give you next-geneation levels of type safety and productivity. Add a powerful plugin system into the mix and what you get is a tool with a very low floor yet practically limitless ceiling.","position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":474,"offset":495},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":474,"offset":495},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus is young, but its ready to grow with you. Dive in!","position":{"start":{"line":6,"column":1,"offset":497},"end":{"line":6,"column":57,"offset":553},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":497},"end":{"line":6,"column":57,"offset":553},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/discussions","children":[{"type":"text","value":"Discussions","position":{"start":{"line":8,"column":2,"offset":556},"end":{"line":8,"column":13,"offset":567},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":555},"end":{"line":8,"column":66,"offset":620},"indent":[]}},{"type":"text","value":" // ","position":{"start":{"line":8,"column":66,"offset":620},"end":{"line":8,"column":70,"offset":624},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues","children":[{"type":"text","value":"Issues","position":{"start":{"line":8,"column":71,"offset":625},"end":{"line":8,"column":77,"offset":631},"indent":[]}}],"position":{"start":{"line":8,"column":70,"offset":624},"end":{"line":8,"column":125,"offset":679},"indent":[]}},{"type":"text","value":" // ","position":{"start":{"line":8,"column":125,"offset":679},"end":{"line":8,"column":129,"offset":683},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/nexusgql","children":[{"type":"text","value":"Tweets","position":{"start":{"line":8,"column":130,"offset":684},"end":{"line":8,"column":136,"offset":690},"indent":[]}}],"position":{"start":{"line":8,"column":129,"offset":683},"end":{"line":8,"column":167,"offset":721},"indent":[]}},{"type":"text","value":" // ","position":{"start":{"line":8,"column":167,"offset":721},"end":{"line":8,"column":171,"offset":725},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/releases","children":[{"type":"text","value":"Changelog","position":{"start":{"line":8,"column":172,"offset":726},"end":{"line":8,"column":181,"offset":735},"indent":[]}}],"position":{"start":{"line":8,"column":171,"offset":725},"end":{"line":8,"column":231,"offset":785},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":8,"column":231,"offset":785},"end":{"line":8,"column":233,"offset":787},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/releases/tag/next","children":[{"type":"text","value":"canary","position":{"start":{"line":8,"column":234,"offset":788},"end":{"line":8,"column":240,"offset":794},"indent":[]}}],"position":{"start":{"line":8,"column":233,"offset":787},"end":{"line":8,"column":299,"offset":853},"indent":[]}},{"type":"text","value":") // ","position":{"start":{"line":8,"column":299,"offset":853},"end":{"line":8,"column":304,"offset":858},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus","children":[{"type":"text","value":"Repo","position":{"start":{"line":8,"column":305,"offset":859},"end":{"line":8,"column":309,"offset":863},"indent":[]}}],"position":{"start":{"line":8,"column":304,"offset":858},"end":{"line":8,"column":350,"offset":904},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":555},"end":{"line":8,"column":350,"offset":904},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Goals","position":{"start":{"line":10,"column":4,"offset":909},"end":{"line":10,"column":9,"offset":914},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":906},"end":{"line":10,"column":9,"offset":914},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It leverages TypeScript and its type system to unlock rich patterns that help you safely scale, maintain and test your GraphQL API.","position":{"start":{"line":12,"column":3,"offset":918},"end":{"line":12,"column":134,"offset":1049},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":918},"end":{"line":12,"column":134,"offset":1049},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":916},"end":{"line":12,"column":134,"offset":1049},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The development server that's running as you build your API ensures that you always get auto-completion and error checks for the schema changes you just introduced.","position":{"start":{"line":13,"column":3,"offset":1052},"end":{"line":13,"column":167,"offset":1216},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":1052},"end":{"line":13,"column":167,"offset":1216},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":1050},"end":{"line":13,"column":167,"offset":1216},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Its API is designed with care to be as declarative as possible so that your schema stays readable despite being implemented with code.","position":{"start":{"line":14,"column":3,"offset":1219},"end":{"line":14,"column":137,"offset":1353},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":1219},"end":{"line":14,"column":137,"offset":1353},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1217},"end":{"line":14,"column":137,"offset":1353},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Its unconventional plugin system also enables the creation of \"end-to-end plugins\" which enhance not only Nexus at runtime, but also the CLI and many framework workflows such as dev mode and testing.","position":{"start":{"line":15,"column":3,"offset":1356},"end":{"line":15,"column":202,"offset":1555},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1356},"end":{"line":15,"column":202,"offset":1555},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1354},"end":{"line":15,"column":202,"offset":1555},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"On that matter, ","position":{"start":{"line":16,"column":3,"offset":1558},"end":{"line":16,"column":19,"offset":1574},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Nexus has an official Prisma plugin","position":{"start":{"line":16,"column":21,"offset":1576},"end":{"line":16,"column":56,"offset":1611},"indent":[]}}],"position":{"start":{"line":16,"column":19,"offset":1574},"end":{"line":16,"column":58,"offset":1613},"indent":[]}},{"type":"text","value":" that will help you wire your GraphQL API to a database. Prisma is an ","position":{"start":{"line":16,"column":58,"offset":1613},"end":{"line":16,"column":128,"offset":1683},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/prisma/prisma","children":[{"type":"text","value":"open source","position":{"start":{"line":16,"column":129,"offset":1684},"end":{"line":16,"column":140,"offset":1695},"indent":[]}}],"position":{"start":{"line":16,"column":128,"offset":1683},"end":{"line":16,"column":175,"offset":1730},"indent":[]}},{"type":"text","value":" database toolkit that currently consists of an auto-generated type-safe query builder, declarative data model language, and experimental migration system.","position":{"start":{"line":16,"column":175,"offset":1730},"end":{"line":16,"column":330,"offset":1885},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":1558},"end":{"line":16,"column":330,"offset":1885},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1556},"end":{"line":16,"column":330,"offset":1885},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":916},"end":{"line":16,"column":330,"offset":1885},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Highlights","position":{"start":{"line":18,"column":4,"offset":1890},"end":{"line":18,"column":14,"offset":1900},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1887},"end":{"line":18,"column":14,"offset":1900},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Type-safety by default","position":{"start":{"line":20,"column":5,"offset":1906},"end":{"line":20,"column":27,"offset":1928},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1904},"end":{"line":20,"column":29,"offset":1930},"indent":[]}},{"type":"break","position":{"start":{"line":20,"column":29,"offset":1930},"end":{"line":21,"column":3,"offset":1935},"indent":[3]}},{"type":"text","value":"Take advantage of TypeScript without the hassle of type annotations everywhere","position":{"start":{"line":21,"column":3,"offset":1935},"end":{"line":21,"column":81,"offset":2013},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1904},"end":{"line":21,"column":81,"offset":2013},"indent":[3]}}],"position":{"start":{"line":20,"column":1,"offset":1902},"end":{"line":21,"column":81,"offset":2013},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"GraphQL Server included","position":{"start":{"line":22,"column":5,"offset":2018},"end":{"line":22,"column":28,"offset":2041},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":2016},"end":{"line":22,"column":30,"offset":2043},"indent":[]}},{"type":"break","position":{"start":{"line":22,"column":30,"offset":2043},"end":{"line":23,"column":3,"offset":2048},"indent":[3]}},{"type":"text","value":"We manage the GraphQL server for you while letting you control it","position":{"start":{"line":23,"column":3,"offset":2048},"end":{"line":23,"column":68,"offset":2113},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":2016},"end":{"line":23,"column":68,"offset":2113},"indent":[3]}}],"position":{"start":{"line":22,"column":1,"offset":2014},"end":{"line":23,"column":68,"offset":2113},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Bundled CLI for development workflows","position":{"start":{"line":24,"column":5,"offset":2118},"end":{"line":24,"column":42,"offset":2155},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":2116},"end":{"line":24,"column":44,"offset":2157},"indent":[]}},{"type":"break","position":{"start":{"line":24,"column":44,"offset":2157},"end":{"line":25,"column":3,"offset":2162},"indent":[3]}},{"type":"text","value":"Develop, test and build your app using our CLI","position":{"start":{"line":25,"column":3,"offset":2162},"end":{"line":25,"column":49,"offset":2208},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":2116},"end":{"line":25,"column":49,"offset":2208},"indent":[3]}}],"position":{"start":{"line":24,"column":1,"offset":2114},"end":{"line":25,"column":49,"offset":2208},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Reusable modules","position":{"start":{"line":26,"column":5,"offset":2213},"end":{"line":26,"column":21,"offset":2229},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":2211},"end":{"line":26,"column":23,"offset":2231},"indent":[]}},{"type":"break","position":{"start":{"line":26,"column":23,"offset":2231},"end":{"line":27,"column":3,"offset":2236},"indent":[3]}},{"type":"text","value":"Leverage your programming language to reuse parts of your GraphQL schema","position":{"start":{"line":27,"column":3,"offset":2236},"end":{"line":27,"column":75,"offset":2308},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":2211},"end":{"line":27,"column":75,"offset":2308},"indent":[3]}}],"position":{"start":{"line":26,"column":1,"offset":2209},"end":{"line":27,"column":75,"offset":2308},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Scalable","position":{"start":{"line":28,"column":5,"offset":2313},"end":{"line":28,"column":13,"offset":2321},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":2311},"end":{"line":28,"column":15,"offset":2323},"indent":[]}},{"type":"break","position":{"start":{"line":28,"column":15,"offset":2323},"end":{"line":29,"column":3,"offset":2328},"indent":[3]}},{"type":"text","value":"Split your GraphQL schema by features to horizontally scale as your project grows","position":{"start":{"line":29,"column":3,"offset":2328},"end":{"line":29,"column":84,"offset":2409},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":2311},"end":{"line":29,"column":84,"offset":2409},"indent":[3]}}],"position":{"start":{"line":28,"column":1,"offset":2309},"end":{"line":29,"column":84,"offset":2409},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Testable","position":{"start":{"line":30,"column":5,"offset":2414},"end":{"line":30,"column":13,"offset":2422},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":2412},"end":{"line":30,"column":15,"offset":2424},"indent":[]}},{"type":"break","position":{"start":{"line":30,"column":15,"offset":2424},"end":{"line":31,"column":3,"offset":2429},"indent":[3]}},{"type":"text","value":"Nexus includes tooling to run integration tests against your API","position":{"start":{"line":31,"column":3,"offset":2429},"end":{"line":31,"column":67,"offset":2493},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":2412},"end":{"line":31,"column":67,"offset":2493},"indent":[3]}}],"position":{"start":{"line":30,"column":1,"offset":2410},"end":{"line":31,"column":67,"offset":2493},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Zero config","position":{"start":{"line":32,"column":5,"offset":2498},"end":{"line":32,"column":16,"offset":2509},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":2496},"end":{"line":32,"column":18,"offset":2511},"indent":[]}},{"type":"break","position":{"start":{"line":32,"column":18,"offset":2511},"end":{"line":33,"column":3,"offset":2516},"indent":[3]}},{"type":"text","value":"Thanks to conventions over configuration, get up and running quickly without the hassle of configuring anything","position":{"start":{"line":33,"column":3,"offset":2516},"end":{"line":33,"column":114,"offset":2627},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":2496},"end":{"line":33,"column":114,"offset":2627},"indent":[3]}}],"position":{"start":{"line":32,"column":1,"offset":2494},"end":{"line":33,"column":114,"offset":2627},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Batteries included (DB, rate limiting, relay connections, custom scalars, ...)","position":{"start":{"line":34,"column":5,"offset":2632},"end":{"line":34,"column":83,"offset":2710},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":2630},"end":{"line":34,"column":85,"offset":2712},"indent":[]}},{"type":"break","position":{"start":{"line":34,"column":85,"offset":2712},"end":{"line":35,"column":3,"offset":2717},"indent":[3]}},{"type":"text","value":"We've got you covered beyond the to-do app","position":{"start":{"line":35,"column":3,"offset":2717},"end":{"line":35,"column":45,"offset":2759},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":2630},"end":{"line":35,"column":45,"offset":2759},"indent":[3]}}],"position":{"start":{"line":34,"column":1,"offset":2628},"end":{"line":35,"column":45,"offset":2759},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Readable","position":{"start":{"line":36,"column":5,"offset":2764},"end":{"line":36,"column":13,"offset":2772},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":2762},"end":{"line":36,"column":15,"offset":2774},"indent":[]}},{"type":"break","position":{"start":{"line":36,"column":15,"offset":2774},"end":{"line":37,"column":3,"offset":2779},"indent":[3]}},{"type":"text","value":"Implement your schema with code, read it with the autogenerated GraphQL SDL file","position":{"start":{"line":37,"column":3,"offset":2779},"end":{"line":37,"column":83,"offset":2859},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":2762},"end":{"line":37,"column":83,"offset":2859},"indent":[3]}}],"position":{"start":{"line":36,"column":1,"offset":2760},"end":{"line":37,"column":83,"offset":2859},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Pluggable","position":{"start":{"line":38,"column":5,"offset":2864},"end":{"line":38,"column":14,"offset":2873},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":2862},"end":{"line":38,"column":16,"offset":2875},"indent":[]}},{"type":"break","position":{"start":{"line":38,"column":16,"offset":2875},"end":{"line":39,"column":3,"offset":2880},"indent":[3]}},{"type":"text","value":"Enhance your experience with specialized plugins from the ecosystem or roll your own","position":{"start":{"line":39,"column":3,"offset":2880},"end":{"line":39,"column":87,"offset":2964},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":2862},"end":{"line":39,"column":87,"offset":2964},"indent":[3]}}],"position":{"start":{"line":38,"column":1,"offset":2860},"end":{"line":39,"column":87,"offset":2964},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"No lock-in","position":{"start":{"line":40,"column":5,"offset":2969},"end":{"line":40,"column":15,"offset":2979},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":2967},"end":{"line":40,"column":17,"offset":2981},"indent":[]}},{"type":"break","position":{"start":{"line":40,"column":17,"offset":2981},"end":{"line":41,"column":3,"offset":2986},"indent":[3]}},{"type":"text","value":"Buying into a framework can be scary. We make sure you've got the right escape hatches","position":{"start":{"line":41,"column":3,"offset":2986},"end":{"line":41,"column":89,"offset":3072},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":2967},"end":{"line":41,"column":89,"offset":3072},"indent":[3]}}],"position":{"start":{"line":40,"column":1,"offset":2965},"end":{"line":41,"column":89,"offset":3072},"indent":[1]}}],"position":{"start":{"line":20,"column":1,"offset":1902},"end":{"line":41,"column":89,"offset":3072},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Why","position":{"start":{"line":43,"column":4,"offset":3077},"end":{"line":43,"column":7,"offset":3080},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":3074},"end":{"line":43,"column":7,"offset":3080},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus, the framework, is built on top of a great library called Nexus ","position":{"start":{"line":45,"column":1,"offset":3082},"end":{"line":45,"column":71,"offset":3152},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Schema","position":{"start":{"line":45,"column":72,"offset":3153},"end":{"line":45,"column":78,"offset":3159},"indent":[]}}],"position":{"start":{"line":45,"column":71,"offset":3152},"end":{"line":45,"column":79,"offset":3160},"indent":[]}},{"type":"text","value":", built by ","position":{"start":{"line":45,"column":79,"offset":3160},"end":{"line":45,"column":90,"offset":3171},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/tgriesser","children":[{"type":"text","value":"Tim Griesser","position":{"start":{"line":45,"column":91,"offset":3172},"end":{"line":45,"column":103,"offset":3184},"indent":[]}}],"position":{"start":{"line":45,"column":90,"offset":3171},"end":{"line":45,"column":134,"offset":3215},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":45,"column":134,"offset":3215},"end":{"line":45,"column":135,"offset":3216},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":3082},"end":{"line":45,"column":135,"offset":3216},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"« Nexus Schema was born out of my experience building several production GraphQL APIs, in different languages and frameworks. The first with vanilla ","position":{"start":{"line":47,"column":1,"offset":3218},"end":{"line":47,"column":150,"offset":3367},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql/graphql-js","children":[{"type":"text","value":"graphql-js","position":{"start":{"line":47,"column":151,"offset":3368},"end":{"line":47,"column":161,"offset":3378},"indent":[]}}],"position":{"start":{"line":47,"column":150,"offset":3367},"end":{"line":47,"column":201,"offset":3418},"indent":[]}},{"type":"text","value":", another schema-first with ","position":{"start":{"line":47,"column":201,"offset":3418},"end":{"line":47,"column":229,"offset":3446},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/matthewmueller/graph.ql","children":[{"type":"text","value":"graph.ql","position":{"start":{"line":47,"column":230,"offset":3447},"end":{"line":47,"column":238,"offset":3455},"indent":[]}}],"position":{"start":{"line":47,"column":229,"offset":3446},"end":{"line":47,"column":283,"offset":3500},"indent":[]}},{"type":"text","value":" and later ","position":{"start":{"line":47,"column":283,"offset":3500},"end":{"line":47,"column":294,"offset":3511},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/apollographql/graphql-tools","children":[{"type":"text","value":"graphql-tools","position":{"start":{"line":47,"column":295,"offset":3512},"end":{"line":47,"column":308,"offset":3525},"indent":[]}}],"position":{"start":{"line":47,"column":294,"offset":3511},"end":{"line":47,"column":357,"offset":3574},"indent":[]}},{"type":"text","value":". Following that with ","position":{"start":{"line":47,"column":357,"offset":3574},"end":{"line":47,"column":379,"offset":3596},"indent":[]}},{"type":"link","title":null,"url":"https://docs.graphene-python.org/en/latest/","children":[{"type":"text","value":"graphene-python","position":{"start":{"line":47,"column":380,"offset":3597},"end":{"line":47,"column":395,"offset":3612},"indent":[]}}],"position":{"start":{"line":47,"column":379,"offset":3596},"end":{"line":47,"column":441,"offset":3658},"indent":[]}},{"type":"text","value":" and most recently with a bit of ","position":{"start":{"line":47,"column":441,"offset":3658},"end":{"line":47,"column":474,"offset":3691},"indent":[]}},{"type":"link","title":null,"url":"http://graphql-ruby.org/","children":[{"type":"text","value":"graphql-ruby","position":{"start":{"line":47,"column":475,"offset":3692},"end":{"line":47,"column":487,"offset":3704},"indent":[]}}],"position":{"start":{"line":47,"column":474,"offset":3691},"end":{"line":47,"column":514,"offset":3731},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":47,"column":514,"offset":3731},"end":{"line":47,"column":515,"offset":3732},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":3218},"end":{"line":47,"column":515,"offset":3732},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After working with the toolkits in other scripting languages, it felt like there was a gap in the JavaScript approaches. Schema-first development starts out great, by simply expressing your schema in the GraphQL Schema Definition Language (SDL) and providing resolvers matching to the types as needed you are up and running fast! No need for tons of requires or \"overhead\" to get a GraphQL server running.","position":{"start":{"line":49,"column":1,"offset":3734},"end":{"line":49,"column":406,"offset":4139},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":3734},"end":{"line":49,"column":406,"offset":4139},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As your schema then grows to hundreds or thousands of types, manually curating these SDL fragments becomes tedious. Documentation changes can be tough. Modifying fields on interfaces can require manual changes to many implementing types, a process that can be quite error prone.","position":{"start":{"line":51,"column":1,"offset":4141},"end":{"line":51,"column":279,"offset":4419},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":4141},"end":{"line":51,"column":279,"offset":4419},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"If only there were a way to combine the simplicity of schema-first development, with the long-term maintainability of a definition-first approach.","position":{"start":{"line":53,"column":2,"offset":4422},"end":{"line":53,"column":148,"offset":4568},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":4421},"end":{"line":53,"column":149,"offset":4569},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":4421},"end":{"line":53,"column":149,"offset":4569},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus Schema aims to fill that void, making the process as simple as possible while also making good use of the runtime to introduce powerful ways of composing types, introducing type or schema wide changes, and much more.","position":{"start":{"line":55,"column":1,"offset":4571},"end":{"line":55,"column":223,"offset":4793},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":4571},"end":{"line":55,"column":223,"offset":4793},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The core idea of Nexus Schema draws from basing the schema off the SDL - keeping things declarative and simple to understand. For example it allows you to reference the type names as string literals rather than always need to import to reference types (but, you can do that too if you prefer).","position":{"start":{"line":57,"column":1,"offset":4795},"end":{"line":57,"column":294,"offset":5088},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":4795},"end":{"line":57,"column":294,"offset":5088},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By combining automatic type generation with some of the more powerful features of TypeScript - type merging, conditional types, and type inference, we can know exactly which type names we are referring to and able to use throughout our code. We can know both the parameters and the return type of resolvers without providing any type annotation. It takes a little getting used to, but it ends up leading to a great feedback loop of the types annotating themselves. » — ","position":{"start":{"line":59,"column":1,"offset":5090},"end":{"line":59,"column":470,"offset":5559},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Tim Griesser","position":{"start":{"line":59,"column":471,"offset":5560},"end":{"line":59,"column":483,"offset":5572},"indent":[]}}],"position":{"start":{"line":59,"column":470,"offset":5559},"end":{"line":59,"column":484,"offset":5573},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":5090},"end":{"line":59,"column":484,"offset":5573},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The complex mechanisms on which Nexus Schema relies turned out to produce a lot of friction to the daily workflows that people have to deal with when working with it.","position":{"start":{"line":61,"column":1,"offset":5575},"end":{"line":61,"column":167,"offset":5741},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":5575},"end":{"line":61,"column":167,"offset":5741},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nexus, the framework, is a natural continuation of that vision built by Tim Griesser which aims to make Nexus Schema more accessible to everyone by hiding some of the underlying complexity of the system and by trying to push users into the pit of success.","position":{"start":{"line":63,"column":1,"offset":5743},"end":{"line":63,"column":256,"offset":5998},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":5743},"end":{"line":63,"column":256,"offset":5998},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Pre-requisites","position":{"start":{"line":65,"column":4,"offset":6003},"end":{"line":65,"column":18,"offset":6017},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":6000},"end":{"line":65,"column":18,"offset":6017},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having a decent understanding of GraphQL and a bit of familiarity with TypeScript may help you adopt Nexus. If you like to dive in and learn on the fly feel free to do so, but if you do want to build up some pre-requisite knowledge upfront then the following resources may be of interest.","position":{"start":{"line":67,"column":1,"offset":6019},"end":{"line":67,"column":289,"offset":6307},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":6019},"end":{"line":67,"column":289,"offset":6307},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"GraphQL","position":{"start":{"line":69,"column":2,"offset":6310},"end":{"line":69,"column":9,"offset":6317},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":6309},"end":{"line":69,"column":10,"offset":6318},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":6309},"end":{"line":69,"column":10,"offset":6318},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.howtographql.com","children":[{"type":"text","value":"How to GraphQL","position":{"start":{"line":71,"column":4,"offset":6323},"end":{"line":71,"column":18,"offset":6337},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":6322},"end":{"line":71,"column":49,"offset":6368},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":6322},"end":{"line":71,"column":49,"offset":6368},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":6320},"end":{"line":71,"column":49,"offset":6368},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://book.productionreadygraphql.com/","children":[{"type":"text","value":"Production Ready GraphQL","position":{"start":{"line":72,"column":4,"offset":6372},"end":{"line":72,"column":28,"offset":6396},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":6371},"end":{"line":72,"column":71,"offset":6439},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":6371},"end":{"line":72,"column":71,"offset":6439},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":6369},"end":{"line":72,"column":71,"offset":6439},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://graphql.org","children":[{"type":"text","value":"Official GraphQL website","position":{"start":{"line":73,"column":4,"offset":6443},"end":{"line":73,"column":28,"offset":6467},"indent":[]}}],"position":{"start":{"line":73,"column":3,"offset":6442},"end":{"line":73,"column":50,"offset":6489},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":73,"column":50,"offset":6489},"end":{"line":73,"column":52,"offset":6491},"indent":[]}},{"type":"link","title":null,"url":"https://graphql.org/community/","children":[{"type":"text","value":"community resources","position":{"start":{"line":73,"column":53,"offset":6492},"end":{"line":73,"column":72,"offset":6511},"indent":[]}}],"position":{"start":{"line":73,"column":52,"offset":6491},"end":{"line":73,"column":105,"offset":6544},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":73,"column":105,"offset":6544},"end":{"line":73,"column":106,"offset":6545},"indent":[]}}],"position":{"start":{"line":73,"column":3,"offset":6442},"end":{"line":73,"column":106,"offset":6545},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":6440},"end":{"line":73,"column":106,"offset":6545},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":6320},"end":{"line":73,"column":106,"offset":6545},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"TypeScript","position":{"start":{"line":75,"column":2,"offset":6548},"end":{"line":75,"column":12,"offset":6558},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":6547},"end":{"line":75,"column":13,"offset":6559},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":6547},"end":{"line":75,"column":13,"offset":6559},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://microsoft.github.io/TypeScript-New-Handbook/everything/","children":[{"type":"text","value":"The New Handbook","position":{"start":{"line":77,"column":4,"offset":6564},"end":{"line":77,"column":20,"offset":6580},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":6563},"end":{"line":77,"column":86,"offset":6646},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":6563},"end":{"line":77,"column":86,"offset":6646},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":6561},"end":{"line":77,"column":86,"offset":6646},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://www.typescriptlang.org/play","children":[{"type":"text","value":"The Interactive Playground","position":{"start":{"line":78,"column":4,"offset":6650},"end":{"line":78,"column":30,"offset":6676},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":6649},"end":{"line":78,"column":67,"offset":6713},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":6649},"end":{"line":78,"column":67,"offset":6713},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":6647},"end":{"line":78,"column":67,"offset":6713},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://mariusschulz.com/blog","children":[{"type":"text","value":"Dozens of articles","position":{"start":{"line":79,"column":4,"offset":6717},"end":{"line":79,"column":22,"offset":6735},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":6716},"end":{"line":79,"column":54,"offset":6767},"indent":[]}},{"type":"text","value":" by ","position":{"start":{"line":79,"column":54,"offset":6767},"end":{"line":79,"column":58,"offset":6771},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/mariusschulz","children":[{"type":"text","value":"Marius Schulz","position":{"start":{"line":79,"column":59,"offset":6772},"end":{"line":79,"column":72,"offset":6785},"indent":[]}}],"position":{"start":{"line":79,"column":58,"offset":6771},"end":{"line":79,"column":106,"offset":6819},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":6716},"end":{"line":79,"column":106,"offset":6819},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":6714},"end":{"line":79,"column":106,"offset":6819},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://2ality.com/index.html","children":[{"type":"text","value":"Dozens of articles","position":{"start":{"line":80,"column":4,"offset":6823},"end":{"line":80,"column":22,"offset":6841},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":6822},"end":{"line":80,"column":54,"offset":6873},"indent":[]}},{"type":"text","value":" by ","position":{"start":{"line":80,"column":54,"offset":6873},"end":{"line":80,"column":58,"offset":6877},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/rauschma","children":[{"type":"text","value":"Dr. Axel Rauschmayer","position":{"start":{"line":80,"column":59,"offset":6878},"end":{"line":80,"column":79,"offset":6898},"indent":[]}}],"position":{"start":{"line":80,"column":58,"offset":6877},"end":{"line":80,"column":109,"offset":6928},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":6822},"end":{"line":80,"column":109,"offset":6928},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":6820},"end":{"line":80,"column":109,"offset":6928},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":6561},"end":{"line":80,"column":109,"offset":6928},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Diving In","position":{"start":{"line":82,"column":4,"offset":6933},"end":{"line":82,"column":13,"offset":6942},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":6930},"end":{"line":82,"column":13,"offset":6942},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Go through the ","position":{"start":{"line":84,"column":3,"offset":6946},"end":{"line":84,"column":18,"offset":6961},"indent":[]}},{"type":"link","title":null,"url":"/tutorial/introduction","children":[{"type":"text","value":"tutorial","position":{"start":{"line":84,"column":19,"offset":6962},"end":{"line":84,"column":27,"offset":6970},"indent":[]}}],"position":{"start":{"line":84,"column":18,"offset":6961},"end":{"line":84,"column":52,"offset":6995},"indent":[]}}],"position":{"start":{"line":84,"column":3,"offset":6946},"end":{"line":84,"column":52,"offset":6995},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":6944},"end":{"line":84,"column":52,"offset":6995},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Explore the ","position":{"start":{"line":85,"column":3,"offset":6998},"end":{"line":85,"column":15,"offset":7010},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/examples","children":[{"type":"text","value":"examples repo","position":{"start":{"line":85,"column":16,"offset":7011},"end":{"line":85,"column":29,"offset":7024},"indent":[]}}],"position":{"start":{"line":85,"column":15,"offset":7010},"end":{"line":85,"column":73,"offset":7068},"indent":[]}}],"position":{"start":{"line":85,"column":3,"offset":6998},"end":{"line":85,"column":73,"offset":7068},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":6996},"end":{"line":85,"column":73,"offset":7068},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Explore your own first app by running ","position":{"start":{"line":86,"column":3,"offset":7071},"end":{"line":86,"column":41,"offset":7109},"indent":[]}},{"type":"inlineCode","value":"npx nexus","position":{"start":{"line":86,"column":41,"offset":7109},"end":{"line":86,"column":52,"offset":7120},"indent":[]}}],"position":{"start":{"line":86,"column":3,"offset":7071},"end":{"line":86,"column":52,"offset":7120},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":7069},"end":{"line":86,"column":52,"offset":7120},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":6944},"end":{"line":86,"column":52,"offset":7120},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Welcome to Nexus\",\"metaTitle\":\"Welcome to Nexus\"}","position":{"start":{"line":89,"column":1,"offset":7123},"end":{"line":89,"column":88,"offset":7210},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":89,"column":88,"offset":7210}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Welcome to Nexus\",\n  \"metaTitle\": \"Welcome to Nexus\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"welcome-to-nexus\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#welcome-to-nexus\",\n    \"aria-label\": \"welcome to nexus permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Welcome to Nexus\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus is a Node.js code-first GraphQL framework. It has a clean simple intuitive declarative API built from the ground to support autocompletion, type-safety, great jsDoc, and more out of the box. It leverages the TypeScript compiler API and its own sophisticated development mode to give you next-geneation levels of type safety and productivity. Add a powerful plugin system into the mix and what you get is a tool with a very low floor yet practically limitless ceiling.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus is young, but its ready to grow with you. Dive in!\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/discussions\"\n  }), \"Discussions\"), \" // \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues\"\n  }), \"Issues\"), \" // \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/nexusgql\"\n  }), \"Tweets\"), \" // \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/releases\"\n  }), \"Changelog\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/releases/tag/next\"\n  }), \"canary\"), \") // \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus\"\n  }), \"Repo\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"goals\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#goals\",\n    \"aria-label\": \"goals permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Goals\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It leverages TypeScript and its type system to unlock rich patterns that help you safely scale, maintain and test your GraphQL API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The development server that's running as you build your API ensures that you always get auto-completion and error checks for the schema changes you just introduced.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Its API is designed with care to be as declarative as possible so that your schema stays readable despite being implemented with code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Its unconventional plugin system also enables the creation of \\\"end-to-end plugins\\\" which enhance not only Nexus at runtime, but also the CLI and many framework workflows such as dev mode and testing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On that matter, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Nexus has an official Prisma plugin\"), \" that will help you wire your GraphQL API to a database. Prisma is an\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/prisma/prisma\"\n  }), \"open source\"), \"\\xA0database toolkit that currently consists of an auto-generated type-safe query builder, declarative data model language, and experimental migration system.\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"highlights\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#highlights\",\n    \"aria-label\": \"highlights permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Highlights\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Type-safety by default\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Take advantage of TypeScript without the hassle of type annotations everywhere\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"GraphQL Server included\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"We manage the GraphQL server for you while letting you control it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Bundled CLI for development workflows\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Develop, test and build your app using our CLI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Reusable modules\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Leverage your programming language to reuse parts of your GraphQL schema\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Scalable\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Split your GraphQL schema by features to horizontally scale as your project grows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Testable\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Nexus includes tooling to run integration tests against your API\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Zero config\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Thanks to conventions over configuration, get up and running quickly without the hassle of configuring anything\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Batteries included (DB, rate limiting, relay connections, custom scalars, ...)\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"We've got you covered beyond the to-do app\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Readable\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Implement your schema with code, read it with the autogenerated GraphQL SDL file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Pluggable\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Enhance your experience with specialized plugins from the ecosystem or roll your own\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"No lock-in\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Buying into a framework can be scary. We make sure you've got the right escape hatches\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"why\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#why\",\n    \"aria-label\": \"why permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Why\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus, the framework, is built on top of a great library called Nexus \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Schema\"), \", built by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/tgriesser\"\n  }), \"Tim Griesser\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\xAB Nexus Schema was born out of my experience building several production GraphQL APIs, in different languages and frameworks. The first with vanilla\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql/graphql-js\"\n  }), \"graphql-js\"), \", another schema-first with\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/matthewmueller/graph.ql\"\n  }), \"graph.ql\"), \"\\xA0and later\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/apollographql/graphql-tools\"\n  }), \"graphql-tools\"), \". Following that with\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.graphene-python.org/en/latest/\"\n  }), \"graphene-python\"), \"\\xA0and most recently with a bit of\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://graphql-ruby.org/\"\n  }), \"graphql-ruby\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"After working with the toolkits in other scripting languages, it felt like there was a gap in the JavaScript approaches. Schema-first development starts out great, by simply expressing your schema in the GraphQL Schema Definition Language (SDL) and providing resolvers matching to the types as needed you are up and running fast! No need for tons of requires or \\\"overhead\\\" to get a GraphQL server running.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"As your schema then grows to hundreds or thousands of types, manually curating these SDL fragments becomes tedious. Documentation changes can be tough. Modifying fields on interfaces can require manual changes to many implementing types, a process that can be quite error prone.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If only there were a way to combine the simplicity of schema-first development, with the long-term maintainability of a definition-first approach.\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus Schema aims to fill that void, making the process as simple as possible while also making good use of the runtime to introduce powerful ways of composing types, introducing type or schema wide changes, and much more.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The core idea of Nexus Schema draws from basing the schema off the SDL - keeping things declarative and simple to understand. For example it allows you to reference the type names as string literals rather than always need to import to reference types (but, you can do that too if you prefer).\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"By combining automatic type generation with some of the more powerful features of TypeScript - type merging, conditional types, and type inference, we can know exactly which type names we are referring to and able to use throughout our code. We can know both the parameters and the return type of resolvers without providing any type annotation. It takes a little getting used to, but it ends up leading to a great feedback loop of the types annotating themselves. \\xBB \\u2014 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Tim Griesser\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The complex mechanisms on which Nexus Schema relies turned out to produce a lot of friction to the daily workflows that people have to deal with when working with it.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Nexus, the framework, is a natural continuation of that vision built by Tim Griesser which aims to make Nexus Schema more accessible to everyone by hiding some of the underlying complexity of the system and by trying to push users into the pit of success.\")), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"pre-requisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#pre-requisites\",\n    \"aria-label\": \"pre requisites permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Pre-requisites\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Having a decent understanding of GraphQL and a bit of familiarity with TypeScript may help you adopt Nexus. If you like to dive in and learn on the fly feel free to do so, but if you do want to build up some pre-requisite knowledge upfront then the following resources may be of interest.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GraphQL\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.howtographql.com\"\n  }), \"How to GraphQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://book.productionreadygraphql.com/\"\n  }), \"Production Ready GraphQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://graphql.org\"\n  }), \"Official GraphQL website\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://graphql.org/community/\"\n  }), \"community resources\"), \")\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"TypeScript\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://microsoft.github.io/TypeScript-New-Handbook/everything/\"\n  }), \"The New Handbook\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.typescriptlang.org/play\"\n  }), \"The Interactive Playground\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://mariusschulz.com/blog\"\n  }), \"Dozens of articles\"), \" by \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/mariusschulz\"\n  }), \"Marius Schulz\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://2ality.com/index.html\"\n  }), \"Dozens of articles\"), \" by \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/rauschma\"\n  }), \"Dr. Axel Rauschmayer\")))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"diving-in\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#diving-in\",\n    \"aria-label\": \"diving in permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Diving In\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go through the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/tutorial/introduction\"\n  }), \"tutorial\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explore the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/examples\"\n  }), \"examples repo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explore your own first app by running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npx nexus\")))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Welcome to Nexus\",\n  \"metaTitle\": \"Welcome to Nexus\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"welcome-to-nexus\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#welcome-to-nexus\",\n          \"aria-label\": \"welcome to nexus permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Welcome to Nexus`}</h2><p parentName=\"section\">{`Nexus is a Node.js code-first GraphQL framework. It has a clean simple intuitive declarative API built from the ground to support autocompletion, type-safety, great jsDoc, and more out of the box. It leverages the TypeScript compiler API and its own sophisticated development mode to give you next-geneation levels of type safety and productivity. Add a powerful plugin system into the mix and what you get is a tool with a very low floor yet practically limitless ceiling.`}</p><p parentName=\"section\">{`Nexus is young, but its ready to grow with you. Dive in!`}</p><p parentName=\"section\"><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus/discussions\"\n        }}>{`Discussions`}</a>{` // `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus/issues\"\n        }}>{`Issues`}</a>{` // `}<a parentName=\"p\" {...{\n          \"href\": \"https://twitter.com/nexusgql\"\n        }}>{`Tweets`}</a>{` // `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus/releases\"\n        }}>{`Changelog`}</a>{` (`}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus/releases/tag/next\"\n        }}>{`canary`}</a>{`) // `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql-nexus/nexus\"\n        }}>{`Repo`}</a></p></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"goals\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#goals\",\n          \"aria-label\": \"goals permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Goals`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`It leverages TypeScript and its type system to unlock rich patterns that help you safely scale, maintain and test your GraphQL API.`}</li>\n        <li parentName=\"ul\">{`The development server that's running as you build your API ensures that you always get auto-completion and error checks for the schema changes you just introduced.`}</li>\n        <li parentName=\"ul\">{`Its API is designed with care to be as declarative as possible so that your schema stays readable despite being implemented with code.`}</li>\n        <li parentName=\"ul\">{`Its unconventional plugin system also enables the creation of \"end-to-end plugins\" which enhance not only Nexus at runtime, but also the CLI and many framework workflows such as dev mode and testing.`}</li>\n        <li parentName=\"ul\">{`On that matter, `}<strong parentName=\"li\">{`Nexus has an official Prisma plugin`}</strong>{` that will help you wire your GraphQL API to a database. Prisma is an `}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/prisma/prisma\"\n          }}>{`open source`}</a>{` database toolkit that currently consists of an auto-generated type-safe query builder, declarative data model language, and experimental migration system.`}</li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"highlights\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#highlights\",\n          \"aria-label\": \"highlights permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Highlights`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Type-safety by default`}</strong><br parentName=\"li\"></br>\n          {`Take advantage of TypeScript without the hassle of type annotations everywhere`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`GraphQL Server included`}</strong><br parentName=\"li\"></br>\n          {`We manage the GraphQL server for you while letting you control it`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Bundled CLI for development workflows`}</strong><br parentName=\"li\"></br>\n          {`Develop, test and build your app using our CLI`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Reusable modules`}</strong><br parentName=\"li\"></br>\n          {`Leverage your programming language to reuse parts of your GraphQL schema`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Scalable`}</strong><br parentName=\"li\"></br>\n          {`Split your GraphQL schema by features to horizontally scale as your project grows`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Testable`}</strong><br parentName=\"li\"></br>\n          {`Nexus includes tooling to run integration tests against your API`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Zero config`}</strong><br parentName=\"li\"></br>\n          {`Thanks to conventions over configuration, get up and running quickly without the hassle of configuring anything`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Batteries included (DB, rate limiting, relay connections, custom scalars, ...)`}</strong><br parentName=\"li\"></br>\n          {`We've got you covered beyond the to-do app`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Readable`}</strong><br parentName=\"li\"></br>\n          {`Implement your schema with code, read it with the autogenerated GraphQL SDL file`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Pluggable`}</strong><br parentName=\"li\"></br>\n          {`Enhance your experience with specialized plugins from the ecosystem or roll your own`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`No lock-in`}</strong><br parentName=\"li\"></br>\n          {`Buying into a framework can be scary. We make sure you've got the right escape hatches`}</li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"why\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#why\",\n          \"aria-label\": \"why permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Why`}</h2><p parentName=\"section\">{`Nexus, the framework, is built on top of a great library called Nexus `}<em parentName=\"p\">{`Schema`}</em>{`, built by `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/tgriesser\"\n        }}>{`Tim Griesser`}</a>{`.`}</p><p parentName=\"section\">{`« Nexus Schema was born out of my experience building several production GraphQL APIs, in different languages and frameworks. The first with vanilla `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/graphql/graphql-js\"\n        }}>{`graphql-js`}</a>{`, another schema-first with `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/matthewmueller/graph.ql\"\n        }}>{`graph.ql`}</a>{` and later `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/apollographql/graphql-tools\"\n        }}>{`graphql-tools`}</a>{`. Following that with `}<a parentName=\"p\" {...{\n          \"href\": \"https://docs.graphene-python.org/en/latest/\"\n        }}>{`graphene-python`}</a>{` and most recently with a bit of `}<a parentName=\"p\" {...{\n          \"href\": \"http://graphql-ruby.org/\"\n        }}>{`graphql-ruby`}</a>{`.`}</p><p parentName=\"section\">{`After working with the toolkits in other scripting languages, it felt like there was a gap in the JavaScript approaches. Schema-first development starts out great, by simply expressing your schema in the GraphQL Schema Definition Language (SDL) and providing resolvers matching to the types as needed you are up and running fast! No need for tons of requires or \"overhead\" to get a GraphQL server running.`}</p><p parentName=\"section\">{`As your schema then grows to hundreds or thousands of types, manually curating these SDL fragments becomes tedious. Documentation changes can be tough. Modifying fields on interfaces can require manual changes to many implementing types, a process that can be quite error prone.`}</p><p parentName=\"section\"><em parentName=\"p\">{`If only there were a way to combine the simplicity of schema-first development, with the long-term maintainability of a definition-first approach.`}</em></p><p parentName=\"section\">{`Nexus Schema aims to fill that void, making the process as simple as possible while also making good use of the runtime to introduce powerful ways of composing types, introducing type or schema wide changes, and much more.`}</p><p parentName=\"section\">{`The core idea of Nexus Schema draws from basing the schema off the SDL - keeping things declarative and simple to understand. For example it allows you to reference the type names as string literals rather than always need to import to reference types (but, you can do that too if you prefer).`}</p><p parentName=\"section\">{`By combining automatic type generation with some of the more powerful features of TypeScript - type merging, conditional types, and type inference, we can know exactly which type names we are referring to and able to use throughout our code. We can know both the parameters and the return type of resolvers without providing any type annotation. It takes a little getting used to, but it ends up leading to a great feedback loop of the types annotating themselves. » — `}<em parentName=\"p\">{`Tim Griesser`}</em></p><p parentName=\"section\">{`The complex mechanisms on which Nexus Schema relies turned out to produce a lot of friction to the daily workflows that people have to deal with when working with it.`}</p><p parentName=\"section\">{`Nexus, the framework, is a natural continuation of that vision built by Tim Griesser which aims to make Nexus Schema more accessible to everyone by hiding some of the underlying complexity of the system and by trying to push users into the pit of success.`}</p></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"pre-requisites\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#pre-requisites\",\n          \"aria-label\": \"pre requisites permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Pre-requisites`}</h2><p parentName=\"section\">{`Having a decent understanding of GraphQL and a bit of familiarity with TypeScript may help you adopt Nexus. If you like to dive in and learn on the fly feel free to do so, but if you do want to build up some pre-requisite knowledge upfront then the following resources may be of interest.`}</p><p parentName=\"section\"><em parentName=\"p\">{`GraphQL`}</em></p><ul parentName=\"section\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://www.howtographql.com\"\n          }}>{`How to GraphQL`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://book.productionreadygraphql.com/\"\n          }}>{`Production Ready GraphQL`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://graphql.org\"\n          }}>{`Official GraphQL website`}</a>{` (`}<a parentName=\"li\" {...{\n            \"href\": \"https://graphql.org/community/\"\n          }}>{`community resources`}</a>{`)`}</li>\n      </ul><p parentName=\"section\"><em parentName=\"p\">{`TypeScript`}</em></p><ul parentName=\"section\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://microsoft.github.io/TypeScript-New-Handbook/everything/\"\n          }}>{`The New Handbook`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"http://www.typescriptlang.org/play\"\n          }}>{`The Interactive Playground`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://mariusschulz.com/blog\"\n          }}>{`Dozens of articles`}</a>{` by `}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/mariusschulz\"\n          }}>{`Marius Schulz`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://2ality.com/index.html\"\n          }}>{`Dozens of articles`}</a>{` by `}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/rauschma\"\n          }}>{`Dr. Axel Rauschmayer`}</a></li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"diving-in\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#diving-in\",\n          \"aria-label\": \"diving in permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Diving In`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`Go through the `}<a parentName=\"li\" {...{\n            \"href\": \"/tutorial/introduction\"\n          }}>{`tutorial`}</a></li>\n        <li parentName=\"ul\">{`Explore the `}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/graphql-nexus/examples\"\n          }}>{`examples repo`}</a></li>\n        <li parentName=\"ul\">{`Explore your own first app by running `}<inlineCode parentName=\"li\">{`npx nexus`}</inlineCode></li>\n      </ul></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}