{"expireTime":9007200846028969000,"key":"gatsby-plugin-mdx-entire-payload-b7b363e42b8efb9443af803d10750937-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/labels/scope%2Fplugins","children":[{"type":"text","value":"issues","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":8,"offset":8},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":72,"offset":72},"indent":[]}},{"type":"text","value":" – ","position":{"start":{"line":2,"column":72,"offset":72},"end":{"line":2,"column":75,"offset":75},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues?q=is%3Aopen+label%3Ascope%2Fplugins+label%3Atype%2Ffeat","children":[{"type":"text","value":"features","position":{"start":{"line":2,"column":76,"offset":76},"end":{"line":2,"column":84,"offset":84},"indent":[]}}],"position":{"start":{"line":2,"column":75,"offset":75},"end":{"line":2,"column":188,"offset":188},"indent":[]}},{"type":"text","value":" ⬝ ","position":{"start":{"line":2,"column":188,"offset":188},"end":{"line":2,"column":191,"offset":191},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Ascope%2Fplugins+label%3Atype%2Fbug+","children":[{"type":"text","value":"bugs","position":{"start":{"line":2,"column":192,"offset":192},"end":{"line":2,"column":196,"offset":196},"indent":[]}}],"position":{"start":{"line":2,"column":191,"offset":191},"end":{"line":2,"column":315,"offset":315},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":315,"offset":315},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Here Be Dragons","position":{"start":{"line":4,"column":4,"offset":320},"end":{"line":4,"column":19,"offset":335},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":317},"end":{"line":4,"column":19,"offset":335},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Writing plugins is an expressive and exciting part of Nexus","position":{"start":{"line":6,"column":3,"offset":339},"end":{"line":6,"column":62,"offset":398},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":339},"end":{"line":6,"column":62,"offset":398},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":337},"end":{"line":6,"column":62,"offset":398},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"But please note that it is one of the least stable components","position":{"start":{"line":7,"column":3,"offset":401},"end":{"line":7,"column":64,"offset":462},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":401},"end":{"line":7,"column":64,"offset":462},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":399},"end":{"line":7,"column":64,"offset":462},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Not just in terms of lack of polish or unstable APIs but entire concepts and architecture","position":{"start":{"line":8,"column":3,"offset":465},"end":{"line":8,"column":92,"offset":554},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":465},"end":{"line":8,"column":92,"offset":554},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":463},"end":{"line":8,"column":92,"offset":554},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The bar to a finished stable plugin system is high not just because plugin systems are in general challenging, but also because the thing which it permits extending is itself not stable either: the framework components exposed at the application layer","position":{"start":{"line":9,"column":3,"offset":557},"end":{"line":9,"column":254,"offset":808},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":557},"end":{"line":9,"column":254,"offset":808},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":555},"end":{"line":9,"column":254,"offset":808},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you are embarking on creating a plugin, please be aware you are in uncharted territory with no guarantees about API stability or even entire concepts/ways of extending Nexus","position":{"start":{"line":10,"column":3,"offset":811},"end":{"line":10,"column":179,"offset":987},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":811},"end":{"line":10,"column":179,"offset":987},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":809},"end":{"line":10,"column":179,"offset":987},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you are ok with that, we welcome you aboard this journey and hope you share your feedback with the team on GitHub and creations with the community on slack!","position":{"start":{"line":11,"column":3,"offset":990},"end":{"line":11,"column":162,"offset":1149},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":990},"end":{"line":11,"column":162,"offset":1149},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":988},"end":{"line":11,"column":162,"offset":1149},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":337},"end":{"line":11,"column":162,"offset":1149},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How it Looks","position":{"start":{"line":13,"column":4,"offset":1154},"end":{"line":13,"column":16,"offset":1166},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":1151},"end":{"line":13,"column":16,"offset":1166},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Nexus CLI has a command to create new Nexus-plugin projects","position":{"start":{"line":15,"column":3,"offset":1170},"end":{"line":15,"column":62,"offset":1229},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1170},"end":{"line":15,"column":62,"offset":1229},"indent":[]}},{"type":"code","lang":"cli","meta":null,"value":"nexus create plugin","position":{"start":{"line":16,"column":3,"offset":1232},"end":{"line":18,"column":6,"offset":1266},"indent":[3,3]}}],"position":{"start":{"line":15,"column":1,"offset":1168},"end":{"line":18,"column":6,"offset":1266},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"To write a plugin you create any of ","position":{"start":{"line":19,"column":3,"offset":1269},"end":{"line":19,"column":39,"offset":1305},"indent":[]}},{"type":"inlineCode","value":"testtime","position":{"start":{"line":19,"column":39,"offset":1305},"end":{"line":19,"column":49,"offset":1315},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":19,"column":49,"offset":1315},"end":{"line":19,"column":50,"offset":1316},"indent":[]}},{"type":"inlineCode","value":"runtime","position":{"start":{"line":19,"column":50,"offset":1316},"end":{"line":19,"column":59,"offset":1325},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":19,"column":59,"offset":1325},"end":{"line":19,"column":64,"offset":1330},"indent":[]}},{"type":"inlineCode","value":"worktime","position":{"start":{"line":19,"column":64,"offset":1330},"end":{"line":19,"column":74,"offset":1340},"indent":[]}},{"type":"text","value":" modules and import the respective plugin types to type your function. In each module export your plugin as ","position":{"start":{"line":19,"column":74,"offset":1340},"end":{"line":19,"column":182,"offset":1448},"indent":[]}},{"type":"inlineCode","value":"plugin","position":{"start":{"line":19,"column":182,"offset":1448},"end":{"line":19,"column":190,"offset":1456},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":19,"column":190,"offset":1456},"end":{"line":19,"column":191,"offset":1457},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":1269},"end":{"line":19,"column":191,"offset":1457},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"// runtime.ts\nimport { RuntimePlugin } from 'nexus/plugin'\n\nexport const plugin: RuntimePlugin = () => (project) => {\n  /* ... */\n}","position":{"start":{"line":21,"column":3,"offset":1461},"end":{"line":28,"column":6,"offset":1614},"indent":[3,3,1,3,3,3,3]}},{"type":"code","lang":"ts","meta":null,"value":"// testtime.ts\nimport { TesttimePlugin } from 'nexus/plugin'\n\nexport const plugin: TesttimePlugin = () => (project) => {\n  /* ... */\n}","position":{"start":{"line":30,"column":3,"offset":1618},"end":{"line":37,"column":6,"offset":1774},"indent":[3,3,1,3,3,3,3]}},{"type":"code","lang":"ts","meta":null,"value":"// worktime.ts\nimport { WorktimePlugin } from 'nexus/plugin'\n\nexport const plugin: WorktimePlugin = () => (project) => {\n  /* ... */\n}","position":{"start":{"line":39,"column":3,"offset":1778},"end":{"line":46,"column":6,"offset":1934},"indent":[3,3,1,3,3,3,3]}}],"position":{"start":{"line":19,"column":1,"offset":1267},"end":{"line":47,"column":1,"offset":1935},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":48,"column":3,"offset":1938},"end":{"line":48,"column":7,"offset":1942},"indent":[]}},{"type":"inlineCode","value":"project","position":{"start":{"line":48,"column":7,"offset":1942},"end":{"line":48,"column":16,"offset":1951},"indent":[]}},{"type":"text","value":" parameter gives you access to utils and core components","position":{"start":{"line":48,"column":16,"offset":1951},"end":{"line":48,"column":72,"offset":2007},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1938},"end":{"line":48,"column":72,"offset":2007},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"export const plugin: TesttimePlugin = () => (project) => {\n  project.utils.log.trace('hello')\n}","position":{"start":{"line":50,"column":3,"offset":2011},"end":{"line":54,"column":6,"offset":2124},"indent":[3,3,3,3]}}],"position":{"start":{"line":48,"column":1,"offset":1936},"end":{"line":55,"column":1,"offset":2125},"indent":[1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With runtime plugins you can pass configuration to Nexus and contribute toward the graphql resolver context:","position":{"start":{"line":56,"column":3,"offset":2128},"end":{"line":56,"column":111,"offset":2236},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":2128},"end":{"line":56,"column":111,"offset":2236},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"export const plugin: RuntimePlugin = () => project => {\n  return {\n    context: {\n      create: req => {\n        return {\n          token: req.headers.authorization.match(/^Bearer (.+)$/)?[1] ?? null\n          }\n        },\n        typeGen: {\n          fields: {\n            token: 'null | string'\n          }\n        }\n      },\n      schema: {\n        // ...\n      }\n    }\n  }\n}","position":{"start":{"line":58,"column":3,"offset":2240},"end":{"line":79,"column":6,"offset":2670},"indent":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":56,"column":1,"offset":2126},"end":{"line":80,"column":1,"offset":2671},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With worktime plugins you can hook onto various events grouped by subsystem:","position":{"start":{"line":81,"column":3,"offset":2674},"end":{"line":81,"column":79,"offset":2750},"indent":[]}}],"position":{"start":{"line":81,"column":3,"offset":2674},"end":{"line":81,"column":79,"offset":2750},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"export const plugin: WorktimePlugin = () => project => {\n  // Not all hooks shown here\n  project.hooks.build.onStart = async () => { ... }\n  project.hooks.create.onAfterBaseSetup = async () => { ... }\n  project.hooks.generate.onStart = async () => { ... }\n  project.hooks.dev.onStart = async () => { ... }\n  project.hooks.dev.onFileWatcherEvent = async () => { ... }\n  project.hooks.dev.addToSettings = { ... }\n  project.hooks.db.init.onStart = async () => { ... }\n  project.hooks.db.migrate.apply = async () => { ... }\n  project.hooks.db.plan.onStart = async () => { ... }\n  project.hooks.db.rollback.onStart = async () => { ... }\n  project.hooks.db.ui.onStart = async () => { ... }\n}","position":{"start":{"line":83,"column":3,"offset":2754},"end":{"line":98,"column":6,"offset":3479},"indent":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":81,"column":1,"offset":2672},"end":{"line":99,"column":1,"offset":3480},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Some worktime hooks give you contextual information to reflect upon:","position":{"start":{"line":100,"column":3,"offset":3483},"end":{"line":100,"column":71,"offset":3551},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":3483},"end":{"line":100,"column":71,"offset":3551},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"export const plugin: WorktimePlugin = () => project => {\n  project.hooks.db.plan.onStart = async ctx => {\n    project.log.info(ctx.migrationName)\n  }\n})","position":{"start":{"line":102,"column":3,"offset":3555},"end":{"line":108,"column":6,"offset":3729},"indent":[3,3,3,3,3,3]}}],"position":{"start":{"line":100,"column":1,"offset":3481},"end":{"line":109,"column":1,"offset":3730},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Finally, for your plugin to be consumed by Nexus, you need to export an entrypoint which references your runtime or worktime or testtime plugin.","position":{"start":{"line":110,"column":3,"offset":3733},"end":{"line":110,"column":147,"offset":3877},"indent":[]}}],"position":{"start":{"line":110,"column":3,"offset":3733},"end":{"line":110,"column":147,"offset":3877},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"This entrypoint is what needs to be imported by users.","position":{"start":{"line":112,"column":5,"offset":3883},"end":{"line":112,"column":59,"offset":3937},"indent":[]}}],"position":{"start":{"line":112,"column":3,"offset":3881},"end":{"line":112,"column":61,"offset":3939},"indent":[]}}],"position":{"start":{"line":112,"column":3,"offset":3881},"end":{"line":112,"column":61,"offset":3939},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We recommend you named export the entrypoint after the suffix ","position":{"start":{"line":114,"column":3,"offset":3943},"end":{"line":114,"column":65,"offset":4005},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-(*)","position":{"start":{"line":114,"column":65,"offset":4005},"end":{"line":114,"column":83,"offset":4023},"indent":[]}},{"type":"text","value":" of your npm package name.","position":{"start":{"line":114,"column":83,"offset":4023},"end":{"line":114,"column":109,"offset":4049},"indent":[]}}],"position":{"start":{"line":114,"column":3,"offset":3943},"end":{"line":114,"column":109,"offset":4049},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For instance, if your plugin is named ","position":{"start":{"line":116,"column":3,"offset":4053},"end":{"line":116,"column":41,"offset":4091},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-fancy-plugin","position":{"start":{"line":116,"column":41,"offset":4091},"end":{"line":116,"column":68,"offset":4118},"indent":[]}},{"type":"text","value":", your entrypoint should be named export ","position":{"start":{"line":116,"column":68,"offset":4118},"end":{"line":116,"column":109,"offset":4159},"indent":[]}},{"type":"inlineCode","value":"fancyPlugin","position":{"start":{"line":116,"column":109,"offset":4159},"end":{"line":116,"column":122,"offset":4172},"indent":[]}}],"position":{"start":{"line":116,"column":3,"offset":4053},"end":{"line":116,"column":122,"offset":4172},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { PluginEntrypoint } from 'nexus/plugin'\n\nexport const fancyPlugin: PluginEntrypoint = () => ({\n  packageJsonPath: require.resolve('../package.json'),\n  runtime: {\n    module: require.resolve('./runtime'),\n    export: 'plugin',\n  },\n  worktime: {\n    module: require.resolve('./worktime'),\n    export: 'plugin',\n  },\n  testtime: {\n    module: require.resolve('./testtime'),\n    export: 'plugin',\n  },\n})","position":{"start":{"line":118,"column":3,"offset":4176},"end":{"line":136,"column":6,"offset":4630},"indent":[3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":110,"column":1,"offset":3731},"end":{"line":136,"column":6,"offset":4630},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":15,"column":1,"offset":1168},"end":{"line":136,"column":6,"offset":4630},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding settings to your plugin","position":{"start":{"line":138,"column":4,"offset":4635},"end":{"line":138,"column":34,"offset":4665},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4632},"end":{"line":138,"column":34,"offset":4665},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a ","position":{"start":{"line":140,"column":3,"offset":4669},"end":{"line":140,"column":12,"offset":4678},"indent":[]}},{"type":"inlineCode","value":"settings.ts","position":{"start":{"line":140,"column":12,"offset":4678},"end":{"line":140,"column":25,"offset":4691},"indent":[]}},{"type":"text","value":" file and export a type ","position":{"start":{"line":140,"column":25,"offset":4691},"end":{"line":140,"column":49,"offset":4715},"indent":[]}},{"type":"inlineCode","value":"Settings","position":{"start":{"line":140,"column":49,"offset":4715},"end":{"line":140,"column":59,"offset":4725},"indent":[]}},{"type":"text","value":" containing your settings","position":{"start":{"line":140,"column":59,"offset":4725},"end":{"line":140,"column":84,"offset":4750},"indent":[]}}],"position":{"start":{"line":140,"column":3,"offset":4669},"end":{"line":140,"column":84,"offset":4750},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"// settings.ts\nexport type Settings = {\n  myCustomOption?: boolean\n}","position":{"start":{"line":142,"column":3,"offset":4754},"end":{"line":147,"column":6,"offset":4842},"indent":[3,3,3,3,3]}}],"position":{"start":{"line":140,"column":1,"offset":4667},"end":{"line":148,"column":1,"offset":4843},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Import the ","position":{"start":{"line":149,"column":3,"offset":4846},"end":{"line":149,"column":14,"offset":4857},"indent":[]}},{"type":"inlineCode","value":"Settings","position":{"start":{"line":149,"column":14,"offset":4857},"end":{"line":149,"column":24,"offset":4867},"indent":[]}},{"type":"text","value":" type in your entrypoint, and pass it as generic to ","position":{"start":{"line":149,"column":24,"offset":4867},"end":{"line":149,"column":76,"offset":4919},"indent":[]}},{"type":"inlineCode","value":"PluginEntrypoint","position":{"start":{"line":149,"column":76,"offset":4919},"end":{"line":149,"column":94,"offset":4937},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":149,"column":94,"offset":4937},"end":{"line":149,"column":95,"offset":4938},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":4846},"end":{"line":149,"column":95,"offset":4938},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note: You must return the settings untouched in your entrypoint.\nThe framework is then responsible for passing the settings to your runtime/worktime/testtime plugins .","position":{"start":{"line":151,"column":5,"offset":4944},"end":{"line":152,"column":107,"offset":5115},"indent":[5]}}],"position":{"start":{"line":151,"column":5,"offset":4944},"end":{"line":152,"column":107,"offset":5115},"indent":[5]}}],"position":{"start":{"line":151,"column":3,"offset":4942},"end":{"line":152,"column":107,"offset":5115},"indent":[3]}},{"type":"code","lang":"ts","meta":null,"value":"//entrypoint.ts\nimport { PluginEntrypoint } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const fancyPlugin: PluginEntrypoint<Settings> = settings => ({\n  settings,\n  ...\n})","position":{"start":{"line":154,"column":3,"offset":5119},"end":{"line":163,"column":6,"offset":5338},"indent":[3,3,3,1,3,3,3,3,3]}}],"position":{"start":{"line":149,"column":1,"offset":4844},"end":{"line":164,"column":1,"offset":5339},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Repeat the operation for your runtime/worktime/testtime plugins.","position":{"start":{"line":165,"column":3,"offset":5342},"end":{"line":165,"column":67,"offset":5406},"indent":[]}}],"position":{"start":{"line":165,"column":3,"offset":5342},"end":{"line":165,"column":67,"offset":5406},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"// runtime.ts\nimport { RuntimePlugin } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const plugin: RuntimePlugin<Settings> = (settings) => (project) => {\n  // ...\n}","position":{"start":{"line":167,"column":3,"offset":5410},"end":{"line":175,"column":6,"offset":5618},"indent":[3,3,3,1,3,3,3,3]}}],"position":{"start":{"line":165,"column":1,"offset":5340},"end":{"line":176,"column":1,"offset":5619},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"By default, settings will always be optional.","position":{"start":{"line":177,"column":3,"offset":5622},"end":{"line":177,"column":48,"offset":5667},"indent":[]}}],"position":{"start":{"line":177,"column":3,"offset":5622},"end":{"line":177,"column":48,"offset":5667},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"We strongly recommend you keep it that way and find defaults for each of your settings.","position":{"start":{"line":179,"column":5,"offset":5673},"end":{"line":179,"column":92,"offset":5760},"indent":[]}}],"position":{"start":{"line":179,"column":3,"offset":5671},"end":{"line":179,"column":94,"offset":5762},"indent":[]}},{"type":"text","value":" This is in order to keep the framework zero-config as much as possible. If you really need required settings though, you can enable them in the following way:","position":{"start":{"line":179,"column":94,"offset":5762},"end":{"line":179,"column":253,"offset":5921},"indent":[]}}],"position":{"start":{"line":179,"column":3,"offset":5671},"end":{"line":179,"column":253,"offset":5921},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"// entrypoint.ts\nimport { PluginEntrypoint } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const fancyPlugin: PluginEntrypoint<Settings, 'required'> = (settings) => ({\n  settings,\n  // ...\n})\n\n// runtime.ts\nimport { RuntimePlugin } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const plugin: RuntimePlugin<Settings, 'required'> = (settings) => (project) => {\n  // ...\n}","position":{"start":{"line":181,"column":3,"offset":5925},"end":{"line":198,"column":6,"offset":6372},"indent":[3,3,3,1,3,3,3,3,1,3,3,3,1,3,3,3,3]}}],"position":{"start":{"line":177,"column":1,"offset":5620},"end":{"line":198,"column":6,"offset":6372},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":140,"column":1,"offset":4667},"end":{"line":198,"column":6,"offset":6372},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Wholistic","position":{"start":{"line":200,"column":4,"offset":6377},"end":{"line":200,"column":13,"offset":6386},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":6374},"end":{"line":200,"column":13,"offset":6386},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The breadth of Nexus' plugin system is uncommon","position":{"start":{"line":202,"column":3,"offset":6390},"end":{"line":202,"column":50,"offset":6437},"indent":[]}}],"position":{"start":{"line":202,"column":3,"offset":6390},"end":{"line":202,"column":50,"offset":6437},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":6388},"end":{"line":202,"column":50,"offset":6437},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Most tools are either rutime (Express) or workflow (ESLint) oriented and thus naturally scope their plugins to their focus","position":{"start":{"line":203,"column":3,"offset":6440},"end":{"line":203,"column":125,"offset":6562},"indent":[]}}],"position":{"start":{"line":203,"column":3,"offset":6440},"end":{"line":203,"column":125,"offset":6562},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":6438},"end":{"line":203,"column":125,"offset":6562},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the advantage of Nexus' approach where plugins can hook into both workflow and runtime is that they allow plugin authors to deliver rich wholistic experiences for their users","position":{"start":{"line":204,"column":3,"offset":6565},"end":{"line":204,"column":177,"offset":6739},"indent":[]}}],"position":{"start":{"line":204,"column":3,"offset":6565},"end":{"line":204,"column":177,"offset":6739},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":6563},"end":{"line":204,"column":177,"offset":6739},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"For example a plugin author might reinforce their plugin's runtime feature with additions to doctor which lint for idiomatic usage","position":{"start":{"line":205,"column":3,"offset":6742},"end":{"line":205,"column":133,"offset":6872},"indent":[]}}],"position":{"start":{"line":205,"column":3,"offset":6742},"end":{"line":205,"column":133,"offset":6872},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":6740},"end":{"line":205,"column":133,"offset":6872},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No longer does a plugin need rely on a lengthy readme that probably isn't complete and probably isn't read by most users to guide users through correct configuration, etc. usage of their plugin","position":{"start":{"line":206,"column":3,"offset":6875},"end":{"line":206,"column":196,"offset":7068},"indent":[]}}],"position":{"start":{"line":206,"column":3,"offset":6875},"end":{"line":206,"column":196,"offset":7068},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":6873},"end":{"line":206,"column":196,"offset":7068},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Nexus is fanatic about giving as much latitude as possible to plugin authors to craft plugins that forward the principal of the pit of success to Nexus app developers","position":{"start":{"line":207,"column":3,"offset":7071},"end":{"line":207,"column":169,"offset":7237},"indent":[]}}],"position":{"start":{"line":207,"column":3,"offset":7071},"end":{"line":207,"column":169,"offset":7237},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":7069},"end":{"line":207,"column":169,"offset":7237},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":6388},"end":{"line":207,"column":169,"offset":7237},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Runtime vs Worktime","position":{"start":{"line":209,"column":4,"offset":7242},"end":{"line":209,"column":23,"offset":7261},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":7239},"end":{"line":209,"column":23,"offset":7261},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"runtime is for hooking into when your app is actually running","position":{"start":{"line":211,"column":3,"offset":7265},"end":{"line":211,"column":64,"offset":7326},"indent":[]}}],"position":{"start":{"line":211,"column":3,"offset":7265},"end":{"line":211,"column":64,"offset":7326},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":7263},"end":{"line":211,"column":64,"offset":7326},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so logic here can directly impact your production systems's reliability and performance characteristics","position":{"start":{"line":212,"column":3,"offset":7329},"end":{"line":212,"column":106,"offset":7432},"indent":[]}}],"position":{"start":{"line":212,"column":3,"offset":7329},"end":{"line":212,"column":106,"offset":7432},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":7327},"end":{"line":212,"column":106,"offset":7432},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"worktime is for hooking into things like dev testing and building","position":{"start":{"line":213,"column":3,"offset":7435},"end":{"line":213,"column":68,"offset":7500},"indent":[]}}],"position":{"start":{"line":213,"column":3,"offset":7435},"end":{"line":213,"column":68,"offset":7500},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":7433},"end":{"line":213,"column":68,"offset":7500},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"logic here is relatively free from concern over runtime impact, e.g. some slow running build-time extensions cannot impact latency experienced by end-users of the app in production.","position":{"start":{"line":214,"column":3,"offset":7503},"end":{"line":214,"column":184,"offset":7684},"indent":[]}}],"position":{"start":{"line":214,"column":3,"offset":7503},"end":{"line":214,"column":184,"offset":7684},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":7501},"end":{"line":214,"column":184,"offset":7684},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":7263},"end":{"line":214,"column":184,"offset":7684},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Publishing for Consumption","position":{"start":{"line":216,"column":4,"offset":7689},"end":{"line":216,"column":30,"offset":7715},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":7686},"end":{"line":216,"column":30,"offset":7715},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You must name your plugin package ","position":{"start":{"line":218,"column":3,"offset":7719},"end":{"line":218,"column":37,"offset":7753},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-<your-plugin-name>","position":{"start":{"line":218,"column":37,"offset":7753},"end":{"line":218,"column":70,"offset":7786},"indent":[]}}],"position":{"start":{"line":218,"column":3,"offset":7719},"end":{"line":218,"column":70,"offset":7786},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7717},"end":{"line":218,"column":70,"offset":7786},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Nexus plugin cli will rely on this convention to search install etc. plugins (","position":{"start":{"line":219,"column":3,"offset":7789},"end":{"line":219,"column":81,"offset":7867},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues/155","children":[{"type":"text","value":"todo","position":{"start":{"line":219,"column":82,"offset":7868},"end":{"line":219,"column":86,"offset":7872},"indent":[]}}],"position":{"start":{"line":219,"column":81,"offset":7867},"end":{"line":219,"column":138,"offset":7924},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":219,"column":138,"offset":7924},"end":{"line":219,"column":139,"offset":7925},"indent":[]}}],"position":{"start":{"line":219,"column":3,"offset":7789},"end":{"line":219,"column":139,"offset":7925},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":7787},"end":{"line":219,"column":139,"offset":7925},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Nexus relies on this pattern to auto-use plugins in a user's project","position":{"start":{"line":220,"column":3,"offset":7928},"end":{"line":220,"column":71,"offset":7996},"indent":[]}}],"position":{"start":{"line":220,"column":3,"offset":7928},"end":{"line":220,"column":71,"offset":7996},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":7926},"end":{"line":220,"column":71,"offset":7996},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7717},"end":{"line":220,"column":71,"offset":7996},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"A Code Reference","position":{"start":{"line":222,"column":4,"offset":8001},"end":{"line":222,"column":20,"offset":8017},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7998},"end":{"line":222,"column":20,"offset":8017},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The most sophisticated real-world Nexus plugin is ","position":{"start":{"line":224,"column":3,"offset":8021},"end":{"line":224,"column":53,"offset":8071},"indent":[]}},{"type":"inlineCode","value":"nexus-plugin-prisma","position":{"start":{"line":224,"column":53,"offset":8071},"end":{"line":224,"column":74,"offset":8092},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":224,"column":74,"offset":8092},"end":{"line":224,"column":75,"offset":8093},"indent":[]}}],"position":{"start":{"line":224,"column":3,"offset":8021},"end":{"line":224,"column":75,"offset":8093},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":8019},"end":{"line":224,"column":75,"offset":8093},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It currently drives many of the requirements of the plugin system where we want nexus-prisma users to feel prisma is as seamless a component as any core one.","position":{"start":{"line":225,"column":3,"offset":8096},"end":{"line":225,"column":160,"offset":8253},"indent":[]}}],"position":{"start":{"line":225,"column":3,"offset":8096},"end":{"line":225,"column":160,"offset":8253},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":8094},"end":{"line":225,"column":160,"offset":8253},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you like learning by reading code, check it out here: ","position":{"start":{"line":226,"column":3,"offset":8256},"end":{"line":226,"column":60,"offset":8313},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/plugin-prisma","children":[{"type":"text","value":"graphql-nexus/plugin-prisma","position":{"start":{"line":226,"column":61,"offset":8314},"end":{"line":226,"column":88,"offset":8341},"indent":[]}}],"position":{"start":{"line":226,"column":60,"offset":8313},"end":{"line":226,"column":137,"offset":8390},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":226,"column":137,"offset":8390},"end":{"line":226,"column":138,"offset":8391},"indent":[]}}],"position":{"start":{"line":226,"column":3,"offset":8256},"end":{"line":226,"column":138,"offset":8391},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":8254},"end":{"line":226,"column":138,"offset":8391},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":8019},"end":{"line":226,"column":138,"offset":8391},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Writing Plugins\",\"metaTitle\":\"Writing Plugins\",\"metaDescription\":\"TODO\"}","position":{"start":{"line":229,"column":1,"offset":8394},"end":{"line":229,"column":111,"offset":8504},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":229,"column":111,"offset":8504}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Writing Plugins\",\n  \"metaTitle\": \"Writing Plugins\",\n  \"metaDescription\": \"TODO\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/labels/scope%2Fplugins\"\n  }), \"issues\"), \" \\u2013 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aopen+label%3Ascope%2Fplugins+label%3Atype%2Ffeat\"\n  }), \"features\"), \" \\u2B1D \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Ascope%2Fplugins+label%3Atype%2Fbug+\"\n  }), \"bugs\")), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"here-be-dragons\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#here-be-dragons\",\n    \"aria-label\": \"here be dragons permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Here Be Dragons\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Writing plugins is an expressive and exciting part of Nexus\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But please note that it is one of the least stable components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not just in terms of lack of polish or unstable APIs but entire concepts and architecture\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The bar to a finished stable plugin system is high not just because plugin systems are in general challenging, but also because the thing which it permits extending is itself not stable either: the framework components exposed at the application layer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are embarking on creating a plugin, please be aware you are in uncharted territory with no guarantees about API stability or even entire concepts/ways of extending Nexus\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are ok with that, we welcome you aboard this journey and hope you share your feedback with the team on GitHub and creations with the community on slack!\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"how-it-looks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-it-looks\",\n    \"aria-label\": \"how it looks permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"How it Looks\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Nexus CLI has a command to create new Nexus-plugin projects\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"nexus create plugin\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"To write a plugin you create any of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"testtime\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"worktime\"), \" modules and import the respective plugin types to type your function. In each module export your plugin as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"plugin\"), \".\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// runtime.ts\\nimport { RuntimePlugin } from 'nexus/plugin'\\n\\nexport const plugin: RuntimePlugin = () => (project) => {\\n  /* ... */\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// testtime.ts\\nimport { TesttimePlugin } from 'nexus/plugin'\\n\\nexport const plugin: TesttimePlugin = () => (project) => {\\n  /* ... */\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// worktime.ts\\nimport { WorktimePlugin } from 'nexus/plugin'\\n\\nexport const plugin: WorktimePlugin = () => (project) => {\\n  /* ... */\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"project\"), \" parameter gives you access to utils and core components\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export const plugin: TesttimePlugin = () => (project) => {\\n  project.utils.log.trace('hello')\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"With runtime plugins you can pass configuration to Nexus and contribute toward the graphql resolver context:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export const plugin: RuntimePlugin = () => project => {\\n  return {\\n    context: {\\n      create: req => {\\n        return {\\n          token: req.headers.authorization.match(/^Bearer (.+)$/)?[1] ?? null\\n          }\\n        },\\n        typeGen: {\\n          fields: {\\n            token: 'null | string'\\n          }\\n        }\\n      },\\n      schema: {\\n        // ...\\n      }\\n    }\\n  }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"With worktime plugins you can hook onto various events grouped by subsystem:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export const plugin: WorktimePlugin = () => project => {\\n  // Not all hooks shown here\\n  project.hooks.build.onStart = async () => { ... }\\n  project.hooks.create.onAfterBaseSetup = async () => { ... }\\n  project.hooks.generate.onStart = async () => { ... }\\n  project.hooks.dev.onStart = async () => { ... }\\n  project.hooks.dev.onFileWatcherEvent = async () => { ... }\\n  project.hooks.dev.addToSettings = { ... }\\n  project.hooks.db.init.onStart = async () => { ... }\\n  project.hooks.db.migrate.apply = async () => { ... }\\n  project.hooks.db.plan.onStart = async () => { ... }\\n  project.hooks.db.rollback.onStart = async () => { ... }\\n  project.hooks.db.ui.onStart = async () => { ... }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Some worktime hooks give you contextual information to reflect upon:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export const plugin: WorktimePlugin = () => project => {\\n  project.hooks.db.plan.onStart = async ctx => {\\n    project.log.info(ctx.migrationName)\\n  }\\n})\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Finally, for your plugin to be consumed by Nexus, you need to export an entrypoint which references your runtime or worktime or testtime plugin.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This entrypoint is what needs to be imported by users.\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We recommend you named export the entrypoint after the suffix \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-plugin-(*)\"), \" of your npm package name.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For instance, if your plugin is named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-plugin-fancy-plugin\"), \", your entrypoint should be named export \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fancyPlugin\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { PluginEntrypoint } from 'nexus/plugin'\\n\\nexport const fancyPlugin: PluginEntrypoint = () => ({\\n  packageJsonPath: require.resolve('../package.json'),\\n  runtime: {\\n    module: require.resolve('./runtime'),\\n    export: 'plugin',\\n  },\\n  worktime: {\\n    module: require.resolve('./worktime'),\\n    export: 'plugin',\\n  },\\n  testtime: {\\n    module: require.resolve('./testtime'),\\n    export: 'plugin',\\n  },\\n})\\n\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"adding-settings-to-your-plugin\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#adding-settings-to-your-plugin\",\n    \"aria-label\": \"adding settings to your plugin permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Adding settings to your plugin\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings.ts\"), \" file and export a type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Settings\"), \" containing your settings\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// settings.ts\\nexport type Settings = {\\n  myCustomOption?: boolean\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Import the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Settings\"), \" type in your entrypoint, and pass it as generic to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PluginEntrypoint\"), \".\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: You must return the settings untouched in your entrypoint.\\nThe framework is then responsible for passing the settings to your runtime/worktime/testtime plugins .\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"//entrypoint.ts\\nimport { PluginEntrypoint } from 'nexus/plugin'\\nimport { Settings } from './settings'\\n\\nexport const fancyPlugin: PluginEntrypoint<Settings> = settings => ({\\n  settings,\\n  ...\\n})\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Repeat the operation for your runtime/worktime/testtime plugins.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// runtime.ts\\nimport { RuntimePlugin } from 'nexus/plugin'\\nimport { Settings } from './settings'\\n\\nexport const plugin: RuntimePlugin<Settings> = (settings) => (project) => {\\n  // ...\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"By default, settings will always be optional.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"We strongly recommend you keep it that way and find defaults for each of your settings.\"), \" This is in order to keep the framework zero-config as much as possible. If you really need required settings though, you can enable them in the following way:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// entrypoint.ts\\nimport { PluginEntrypoint } from 'nexus/plugin'\\nimport { Settings } from './settings'\\n\\nexport const fancyPlugin: PluginEntrypoint<Settings, 'required'> = (settings) => ({\\n  settings,\\n  // ...\\n})\\n\\n// runtime.ts\\nimport { RuntimePlugin } from 'nexus/plugin'\\nimport { Settings } from './settings'\\n\\nexport const plugin: RuntimePlugin<Settings, 'required'> = (settings) => (project) => {\\n  // ...\\n}\\n\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"wholistic\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#wholistic\",\n    \"aria-label\": \"wholistic permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Wholistic\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The breadth of Nexus' plugin system is uncommon\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Most tools are either rutime (Express) or workflow (ESLint) oriented and thus naturally scope their plugins to their focus\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the advantage of Nexus' approach where plugins can hook into both workflow and runtime is that they allow plugin authors to deliver rich wholistic experiences for their users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For example a plugin author might reinforce their plugin's runtime feature with additions to doctor which lint for idiomatic usage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No longer does a plugin need rely on a lengthy readme that probably isn't complete and probably isn't read by most users to guide users through correct configuration, etc. usage of their plugin\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nexus is fanatic about giving as much latitude as possible to plugin authors to craft plugins that forward the principal of the pit of success to Nexus app developers\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"runtime-vs-worktime\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#runtime-vs-worktime\",\n    \"aria-label\": \"runtime vs worktime permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Runtime vs Worktime\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"runtime is for hooking into when your app is actually running\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"so logic here can directly impact your production systems's reliability and performance characteristics\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"worktime is for hooking into things like dev testing and building\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"logic here is relatively free from concern over runtime impact, e.g. some slow running build-time extensions cannot impact latency experienced by end-users of the app in production.\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"publishing-for-consumption\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#publishing-for-consumption\",\n    \"aria-label\": \"publishing for consumption permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Publishing for Consumption\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You must name your plugin package \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nexus-plugin-<your-plugin-name>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nexus plugin cli will rely on this convention to search install etc. plugins (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues/155\"\n  }), \"todo\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nexus relies on this pattern to auto-use plugins in a user's project\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"a-code-reference\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#a-code-reference\",\n    \"aria-label\": \"a code reference permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"A Code Reference\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The most sophisticated real-world Nexus plugin is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nexus-plugin-prisma\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It currently drives many of the requirements of the plugin system where we want nexus-prisma users to feel prisma is as seamless a component as any core one.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you like learning by reading code, check it out here: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/plugin-prisma\"\n  }), \"graphql-nexus/plugin-prisma\"), \".\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Writing Plugins\",\n  \"metaTitle\": \"Writing Plugins\",\n  \"metaDescription\": \"TODO\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/graphql-nexus/nexus/labels/scope%2Fplugins\"\n      }}>{`issues`}</a>{` – `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/graphql-nexus/nexus/issues?q=is%3Aopen+label%3Ascope%2Fplugins+label%3Atype%2Ffeat\"\n      }}>{`features`}</a>{` ⬝ `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/graphql-nexus/nexus/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Ascope%2Fplugins+label%3Atype%2Fbug+\"\n      }}>{`bugs`}</a></p>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"here-be-dragons\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#here-be-dragons\",\n          \"aria-label\": \"here be dragons permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Here Be Dragons`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`Writing plugins is an expressive and exciting part of Nexus`}</li>\n        <li parentName=\"ul\">{`But please note that it is one of the least stable components`}</li>\n        <li parentName=\"ul\">{`Not just in terms of lack of polish or unstable APIs but entire concepts and architecture`}</li>\n        <li parentName=\"ul\">{`The bar to a finished stable plugin system is high not just because plugin systems are in general challenging, but also because the thing which it permits extending is itself not stable either: the framework components exposed at the application layer`}</li>\n        <li parentName=\"ul\">{`If you are embarking on creating a plugin, please be aware you are in uncharted territory with no guarantees about API stability or even entire concepts/ways of extending Nexus`}</li>\n        <li parentName=\"ul\">{`If you are ok with that, we welcome you aboard this journey and hope you share your feedback with the team on GitHub and creations with the community on slack!`}</li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"how-it-looks\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#how-it-looks\",\n          \"aria-label\": \"how it looks permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`How it Looks`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Nexus CLI has a command to create new Nexus-plugin projects`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-cli\"\n            }}>{`nexus create plugin\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`To write a plugin you create any of `}<inlineCode parentName=\"p\">{`testtime`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`runtime`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`worktime`}</inlineCode>{` modules and import the respective plugin types to type your function. In each module export your plugin as `}<inlineCode parentName=\"p\">{`plugin`}</inlineCode>{`.`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// runtime.ts\nimport { RuntimePlugin } from 'nexus/plugin'\n\nexport const plugin: RuntimePlugin = () => (project) => {\n  /* ... */\n}\n`}</code></pre>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// testtime.ts\nimport { TesttimePlugin } from 'nexus/plugin'\n\nexport const plugin: TesttimePlugin = () => (project) => {\n  /* ... */\n}\n`}</code></pre>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// worktime.ts\nimport { WorktimePlugin } from 'nexus/plugin'\n\nexport const plugin: WorktimePlugin = () => (project) => {\n  /* ... */\n}\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`project`}</inlineCode>{` parameter gives you access to utils and core components`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`export const plugin: TesttimePlugin = () => (project) => {\n  project.utils.log.trace('hello')\n}\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`With runtime plugins you can pass configuration to Nexus and contribute toward the graphql resolver context:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`export const plugin: RuntimePlugin = () => project => {\n  return {\n    context: {\n      create: req => {\n        return {\n          token: req.headers.authorization.match(/^Bearer (.+)$/)?[1] ?? null\n          }\n        },\n        typeGen: {\n          fields: {\n            token: 'null | string'\n          }\n        }\n      },\n      schema: {\n        // ...\n      }\n    }\n  }\n}\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`With worktime plugins you can hook onto various events grouped by subsystem:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`export const plugin: WorktimePlugin = () => project => {\n  // Not all hooks shown here\n  project.hooks.build.onStart = async () => { ... }\n  project.hooks.create.onAfterBaseSetup = async () => { ... }\n  project.hooks.generate.onStart = async () => { ... }\n  project.hooks.dev.onStart = async () => { ... }\n  project.hooks.dev.onFileWatcherEvent = async () => { ... }\n  project.hooks.dev.addToSettings = { ... }\n  project.hooks.db.init.onStart = async () => { ... }\n  project.hooks.db.migrate.apply = async () => { ... }\n  project.hooks.db.plan.onStart = async () => { ... }\n  project.hooks.db.rollback.onStart = async () => { ... }\n  project.hooks.db.ui.onStart = async () => { ... }\n}\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Some worktime hooks give you contextual information to reflect upon:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`export const plugin: WorktimePlugin = () => project => {\n  project.hooks.db.plan.onStart = async ctx => {\n    project.log.info(ctx.migrationName)\n  }\n})\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Finally, for your plugin to be consumed by Nexus, you need to export an entrypoint which references your runtime or worktime or testtime plugin.`}</p>\n          <p parentName=\"li\"><strong parentName=\"p\">{`This entrypoint is what needs to be imported by users.`}</strong></p>\n          <p parentName=\"li\">{`We recommend you named export the entrypoint after the suffix `}<inlineCode parentName=\"p\">{`nexus-plugin-(*)`}</inlineCode>{` of your npm package name.`}</p>\n          <p parentName=\"li\">{`For instance, if your plugin is named `}<inlineCode parentName=\"p\">{`nexus-plugin-fancy-plugin`}</inlineCode>{`, your entrypoint should be named export `}<inlineCode parentName=\"p\">{`fancyPlugin`}</inlineCode></p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`import { PluginEntrypoint } from 'nexus/plugin'\n\nexport const fancyPlugin: PluginEntrypoint = () => ({\n  packageJsonPath: require.resolve('../package.json'),\n  runtime: {\n    module: require.resolve('./runtime'),\n    export: 'plugin',\n  },\n  worktime: {\n    module: require.resolve('./worktime'),\n    export: 'plugin',\n  },\n  testtime: {\n    module: require.resolve('./testtime'),\n    export: 'plugin',\n  },\n})\n`}</code></pre>\n        </li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"adding-settings-to-your-plugin\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#adding-settings-to-your-plugin\",\n          \"aria-label\": \"adding settings to your plugin permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Adding settings to your plugin`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Create a `}<inlineCode parentName=\"p\">{`settings.ts`}</inlineCode>{` file and export a type `}<inlineCode parentName=\"p\">{`Settings`}</inlineCode>{` containing your settings`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// settings.ts\nexport type Settings = {\n  myCustomOption?: boolean\n}\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Import the `}<inlineCode parentName=\"p\">{`Settings`}</inlineCode>{` type in your entrypoint, and pass it as generic to `}<inlineCode parentName=\"p\">{`PluginEntrypoint`}</inlineCode>{`.`}</p>\n          <blockquote parentName=\"li\">\n            <p parentName=\"blockquote\">{`Note: You must return the settings untouched in your entrypoint.\nThe framework is then responsible for passing the settings to your runtime/worktime/testtime plugins .`}</p>\n          </blockquote>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`//entrypoint.ts\nimport { PluginEntrypoint } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const fancyPlugin: PluginEntrypoint<Settings> = settings => ({\n  settings,\n  ...\n})\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Repeat the operation for your runtime/worktime/testtime plugins.`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// runtime.ts\nimport { RuntimePlugin } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const plugin: RuntimePlugin<Settings> = (settings) => (project) => {\n  // ...\n}\n`}</code></pre>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`By default, settings will always be optional.`}</p>\n          <p parentName=\"li\"><strong parentName=\"p\">{`We strongly recommend you keep it that way and find defaults for each of your settings.`}</strong>{` This is in order to keep the framework zero-config as much as possible. If you really need required settings though, you can enable them in the following way:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`// entrypoint.ts\nimport { PluginEntrypoint } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const fancyPlugin: PluginEntrypoint<Settings, 'required'> = (settings) => ({\n  settings,\n  // ...\n})\n\n// runtime.ts\nimport { RuntimePlugin } from 'nexus/plugin'\nimport { Settings } from './settings'\n\nexport const plugin: RuntimePlugin<Settings, 'required'> = (settings) => (project) => {\n  // ...\n}\n`}</code></pre>\n        </li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"wholistic\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#wholistic\",\n          \"aria-label\": \"wholistic permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Wholistic`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`The breadth of Nexus' plugin system is uncommon`}</li>\n        <li parentName=\"ul\">{`Most tools are either rutime (Express) or workflow (ESLint) oriented and thus naturally scope their plugins to their focus`}</li>\n        <li parentName=\"ul\">{`the advantage of Nexus' approach where plugins can hook into both workflow and runtime is that they allow plugin authors to deliver rich wholistic experiences for their users`}</li>\n        <li parentName=\"ul\">{`For example a plugin author might reinforce their plugin's runtime feature with additions to doctor which lint for idiomatic usage`}</li>\n        <li parentName=\"ul\">{`No longer does a plugin need rely on a lengthy readme that probably isn't complete and probably isn't read by most users to guide users through correct configuration, etc. usage of their plugin`}</li>\n        <li parentName=\"ul\">{`Nexus is fanatic about giving as much latitude as possible to plugin authors to craft plugins that forward the principal of the pit of success to Nexus app developers`}</li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"runtime-vs-worktime\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#runtime-vs-worktime\",\n          \"aria-label\": \"runtime vs worktime permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Runtime vs Worktime`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`runtime is for hooking into when your app is actually running`}</li>\n        <li parentName=\"ul\">{`so logic here can directly impact your production systems's reliability and performance characteristics`}</li>\n        <li parentName=\"ul\">{`worktime is for hooking into things like dev testing and building`}</li>\n        <li parentName=\"ul\">{`logic here is relatively free from concern over runtime impact, e.g. some slow running build-time extensions cannot impact latency experienced by end-users of the app in production.`}</li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"publishing-for-consumption\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#publishing-for-consumption\",\n          \"aria-label\": \"publishing for consumption permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Publishing for Consumption`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`You must name your plugin package `}<inlineCode parentName=\"li\">{`nexus-plugin-<your-plugin-name>`}</inlineCode></li>\n        <li parentName=\"ul\">{`Nexus plugin cli will rely on this convention to search install etc. plugins (`}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/graphql-nexus/nexus/issues/155\"\n          }}>{`todo`}</a>{`)`}</li>\n        <li parentName=\"ul\">{`Nexus relies on this pattern to auto-use plugins in a user's project`}</li>\n      </ul></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"a-code-reference\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#a-code-reference\",\n          \"aria-label\": \"a code reference permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`A Code Reference`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`The most sophisticated real-world Nexus plugin is `}<inlineCode parentName=\"li\">{`nexus-plugin-prisma`}</inlineCode>{`.`}</li>\n        <li parentName=\"ul\">{`It currently drives many of the requirements of the plugin system where we want nexus-prisma users to feel prisma is as seamless a component as any core one.`}</li>\n        <li parentName=\"ul\">{`If you like learning by reading code, check it out here: `}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/graphql-nexus/plugin-prisma\"\n          }}>{`graphql-nexus/plugin-prisma`}</a>{`.`}</li>\n      </ul></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}