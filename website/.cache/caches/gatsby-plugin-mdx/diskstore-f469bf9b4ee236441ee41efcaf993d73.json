{"expireTime":9007200846064530000,"key":"gatsby-plugin-mdx-entire-payload-238f39bd4845fa0cfd20e778619e8c4c-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Reflection","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":14,"offset":13},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":14,"offset":13},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"todo","position":{"start":{"line":3,"column":1,"offset":15},"end":{"line":3,"column":5,"offset":19},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":15},"end":{"line":3,"column":5,"offset":19},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Assembly","position":{"start":{"line":5,"column":4,"offset":24},"end":{"line":5,"column":12,"offset":32},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":21},"end":{"line":5,"column":12,"offset":32},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"todo","position":{"start":{"line":7,"column":1,"offset":34},"end":{"line":7,"column":5,"offset":38},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":34},"end":{"line":7,"column":5,"offset":38},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Plugins","position":{"start":{"line":9,"column":4,"offset":43},"end":{"line":9,"column":11,"offset":50},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":40},"end":{"line":9,"column":11,"offset":50},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Diagrams","position":{"start":{"line":11,"column":5,"offset":56},"end":{"line":11,"column":13,"offset":64},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":52},"end":{"line":11,"column":13,"offset":64},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Plugin Tree Shaking","position":{"start":{"line":13,"column":6,"offset":71},"end":{"line":13,"column":25,"offset":90},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":66},"end":{"line":13,"column":25,"offset":90},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://dsc.cloud/661643/plugin-tree-shaking.png","alt":"plugin-tree-shaking","position":{"start":{"line":15,"column":1,"offset":92},"end":{"line":15,"column":73,"offset":164},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":92},"end":{"line":15,"column":73,"offset":164},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Glossary","position":{"start":{"line":17,"column":5,"offset":170},"end":{"line":17,"column":13,"offset":178},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":166},"end":{"line":17,"column":13,"offset":178},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Entrypoint","position":{"start":{"line":19,"column":6,"offset":185},"end":{"line":19,"column":16,"offset":195},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":180},"end":{"line":19,"column":16,"offset":195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A plugin entrypoint is responsible for returning the plugin's manifest input. This is what users actually deal with at the app layer.","position":{"start":{"line":21,"column":1,"offset":197},"end":{"line":21,"column":134,"offset":330},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":197},"end":{"line":21,"column":134,"offset":330},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { prisma } from 'nexus-plugin-prisma'\n//       ~~~~~~ <------------- The entrypoint, returns a manifest input\nimport { use } from 'nexus'\n\nuse(prisma())","position":{"start":{"line":23,"column":1,"offset":332},"end":{"line":29,"column":4,"offset":501},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Manifest","position":{"start":{"line":31,"column":6,"offset":508},"end":{"line":31,"column":14,"offset":516},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":503},"end":{"line":31,"column":14,"offset":516},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A plugin manifest describes logistical information about a plugin like where its package file is located on disk, what versions of Nexus it is compatible with, and more.","position":{"start":{"line":33,"column":1,"offset":518},"end":{"line":33,"column":170,"offset":687},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":518},"end":{"line":33,"column":170,"offset":687},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Plugin manifests are created by Nexus by processing the manifest inputs returned by plugin entrypoints.","position":{"start":{"line":35,"column":1,"offset":689},"end":{"line":35,"column":104,"offset":792},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":689},"end":{"line":35,"column":104,"offset":792},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { prisma } from 'nexus-plugin-prisma'\n\nconst prismaPluginManifestInput = prisma()","position":{"start":{"line":37,"column":1,"offset":794},"end":{"line":41,"column":4,"offset":892},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This lazy approach allows Nexus the flexibility it needs to provide features like automatic environment variable plugin settings injection and tree-shaking.","position":{"start":{"line":43,"column":1,"offset":894},"end":{"line":43,"column":157,"offset":1050},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":894},"end":{"line":43,"column":157,"offset":1050},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Manifest Input","position":{"start":{"line":45,"column":6,"offset":1057},"end":{"line":45,"column":20,"offset":1071},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1052},"end":{"line":45,"column":20,"offset":1071},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A manifest input is the view of manifests that plugin authors work with. It models the minimum information that Nexus needs to build the plugin manifest. It is also more human friendly, for example minimizing the number of required fields. Developer experience is not the primary motivation here however. We want Nexus to control as much as possible, so the less the human has to specify the more we achieve this goal. For example we ask for a path to package json rather than the contents of it. We want Nexus to be the one that reads it, when and how it wants.","position":{"start":{"line":47,"column":1,"offset":1073},"end":{"line":47,"column":563,"offset":1635},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1073},"end":{"line":47,"column":563,"offset":1635},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Dimension","position":{"start":{"line":49,"column":6,"offset":1642},"end":{"line":49,"column":15,"offset":1651},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1637},"end":{"line":49,"column":15,"offset":1651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A plugin dimension represents a high-level area of plugin concern that are separated by module from other dimensions. In other words, each dimension has its own entrypoint. Nexus will directly import it. A dimension is found by Nexus from Nexus reading the Plugin manifest.","position":{"start":{"line":51,"column":1,"offset":1653},"end":{"line":51,"column":274,"offset":1926},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1653},"end":{"line":51,"column":274,"offset":1926},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three dimensions: worktime, testtime, and runtime. Worktime allows plugins to tap into the CLI, the builder, dev mode, and more. Testtime allows plugins to tap into features of the Nexus testing component. Runtime allows plugins to tap into the API.","position":{"start":{"line":53,"column":1,"offset":1928},"end":{"line":53,"column":260,"offset":2187},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1928},"end":{"line":53,"column":260,"offset":2187},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Directionally Nexus is on a good track, but there is work still left to do. The names are a bit confusing when you dig into the details, and the supposed separation between worktime/runtime has undesirable \"loopholes\" because of reflection. Details;","position":{"start":{"line":55,"column":1,"offset":2189},"end":{"line":55,"column":250,"offset":2438},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2189},"end":{"line":55,"column":250,"offset":2438},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Runtime dimension does not mean plugging exclusively into what is run in your production code. There are actually reasons to plug into the runtime for ostensibly worktime beneit... This is due to Nexus' so-called reflection system, wherein the app is run in the background during development for development purposes.","position":{"start":{"line":57,"column":5,"offset":2444},"end":{"line":57,"column":322,"offset":2761},"indent":[]}}],"position":{"start":{"line":57,"column":5,"offset":2444},"end":{"line":57,"column":322,"offset":2761},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2440},"end":{"line":58,"column":1,"offset":2762},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The rationale for splitting worktime from runtime is clear, tree-shaking alone makes the case for it. However the separation between worktime and testing is less clear, perhaps nonsense, and so may be revisited in the future.","position":{"start":{"line":59,"column":5,"offset":2767},"end":{"line":59,"column":230,"offset":2992},"indent":[]}}],"position":{"start":{"line":59,"column":5,"offset":2767},"end":{"line":59,"column":230,"offset":2992},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2763},"end":{"line":60,"column":1,"offset":2993},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We've talked about motivation for separating worktime from runtime, yet there are runtime parts for worktime (reflection). What this means is that expensive dependencies can make there way into the runtime dimension that a user should actually ","position":{"start":{"line":61,"column":5,"offset":2998},"end":{"line":61,"column":249,"offset":3242},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":61,"column":250,"offset":3243},"end":{"line":61,"column":253,"offset":3246},"indent":[]}}],"position":{"start":{"line":61,"column":249,"offset":3242},"end":{"line":61,"column":254,"offset":3247},"indent":[]}},{"type":"text","value":" be paying for in production runtime.","position":{"start":{"line":61,"column":254,"offset":3247},"end":{"line":61,"column":291,"offset":3284},"indent":[]}}],"position":{"start":{"line":61,"column":5,"offset":2998},"end":{"line":61,"column":291,"offset":3284},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2994},"end":{"line":61,"column":291,"offset":3284},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2440},"end":{"line":61,"column":291,"offset":3284},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Lens","position":{"start":{"line":63,"column":6,"offset":3291},"end":{"line":63,"column":10,"offset":3295},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3286},"end":{"line":63,"column":10,"offset":3295},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A plugin lens is just a specialized api into a subset of Nexus to hook into, extend, manipulate, and react to it during execution. The name \"lens\" is arbitrary. The choice comes from it being \"view\" into Nexus. Each dimension has its own specialized lens.","position":{"start":{"line":65,"column":1,"offset":3297},"end":{"line":65,"column":256,"offset":3552},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":3297},"end":{"line":65,"column":256,"offset":3552},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Dimension Entrypoint","position":{"start":{"line":67,"column":6,"offset":3559},"end":{"line":67,"column":26,"offset":3579},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3554},"end":{"line":67,"column":26,"offset":3579},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just like the plugin has a top level entrypoint so to does each dimension within the plugin have its own entrypoint. These sub-entrypoints can be thought as sub-plugins, with the top-level plugin just being a grouping mechanism.","position":{"start":{"line":69,"column":1,"offset":3581},"end":{"line":69,"column":229,"offset":3809},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":3581},"end":{"line":69,"column":229,"offset":3809},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Comparisons to Other Systems","position":{"start":{"line":71,"column":5,"offset":3815},"end":{"line":71,"column":33,"offset":3843},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":3811},"end":{"line":71,"column":33,"offset":3843},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Rollup","position":{"start":{"line":73,"column":6,"offset":3850},"end":{"line":73,"column":12,"offset":3856},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3845},"end":{"line":73,"column":12,"offset":3856},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Like Rollup plugins are prefixed with ","position":{"start":{"line":75,"column":3,"offset":3860},"end":{"line":75,"column":41,"offset":3898},"indent":[]}},{"type":"inlineCode","value":"<tool-name>-plugin-<plugin-name>","position":{"start":{"line":75,"column":41,"offset":3898},"end":{"line":75,"column":75,"offset":3932},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":3860},"end":{"line":75,"column":75,"offset":3932},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3858},"end":{"line":75,"column":75,"offset":3932},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We have considered but so far not put first-party Nexus plugins under the pattern ","position":{"start":{"line":76,"column":3,"offset":3935},"end":{"line":76,"column":85,"offset":4017},"indent":[]}},{"type":"inlineCode","value":"@nexus/plugin-<plugin-name>","position":{"start":{"line":76,"column":85,"offset":4017},"end":{"line":76,"column":114,"offset":4046},"indent":[]}},{"type":"text","value":". Rollup made this transition retroactively.","position":{"start":{"line":76,"column":114,"offset":4046},"end":{"line":76,"column":158,"offset":4090},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":3935},"end":{"line":76,"column":158,"offset":4090},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3933},"end":{"line":76,"column":158,"offset":4090},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Rollup suggests plugins have a default export so that are much easier to use on the command line. Nexus suggests plugins also have default exports for similar system-usability reasons (not cli in Nexus' case, but other future features maybe like auto-use).","position":{"start":{"line":77,"column":3,"offset":4093},"end":{"line":77,"column":259,"offset":4349},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":4093},"end":{"line":77,"column":259,"offset":4349},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":4091},"end":{"line":77,"column":259,"offset":4349},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3858},"end":{"line":77,"column":259,"offset":4349},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Loading Flow","position":{"start":{"line":79,"column":5,"offset":4355},"end":{"line":79,"column":17,"offset":4367},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":4351},"end":{"line":79,"column":17,"offset":4367},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"todo","position":{"start":{"line":81,"column":1,"offset":4369},"end":{"line":81,"column":5,"offset":4373},"indent":[]}},{"type":"break","position":{"start":{"line":81,"column":5,"offset":4373},"end":{"line":82,"column":1,"offset":4376},"indent":[1]}},{"type":"text","value":"what follows is a stub","position":{"start":{"line":82,"column":1,"offset":4376},"end":{"line":82,"column":23,"offset":4398},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":4369},"end":{"line":82,"column":23,"offset":4398},"indent":[1]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"capture the used plugins in the app","position":{"start":{"line":84,"column":4,"offset":4403},"end":{"line":84,"column":39,"offset":4438},"indent":[]}}],"position":{"start":{"line":84,"column":4,"offset":4403},"end":{"line":84,"column":39,"offset":4438},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":4400},"end":{"line":84,"column":39,"offset":4438},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"validate entrypoints","position":{"start":{"line":85,"column":4,"offset":4442},"end":{"line":85,"column":24,"offset":4462},"indent":[]}}],"position":{"start":{"line":85,"column":4,"offset":4442},"end":{"line":85,"column":24,"offset":4462},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":4439},"end":{"line":85,"column":24,"offset":4462},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"transform entrypoints into manifests","position":{"start":{"line":86,"column":4,"offset":4466},"end":{"line":86,"column":40,"offset":4502},"indent":[]}}],"position":{"start":{"line":86,"column":4,"offset":4466},"end":{"line":86,"column":40,"offset":4502},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":4463},"end":{"line":86,"column":40,"offset":4502},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"for each dimension (work, test, run) in the manifest","position":{"start":{"line":87,"column":4,"offset":4506},"end":{"line":87,"column":56,"offset":4558},"indent":[]}}],"position":{"start":{"line":87,"column":4,"offset":4506},"end":{"line":87,"column":56,"offset":4558},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"import i\nt","position":{"start":{"line":88,"column":7,"offset":4565},"end":{"line":89,"column":8,"offset":4581},"indent":[7]}}],"position":{"start":{"line":88,"column":7,"offset":4565},"end":{"line":89,"column":8,"offset":4581},"indent":[7]}}],"position":{"start":{"line":88,"column":4,"offset":4562},"end":{"line":89,"column":8,"offset":4581},"indent":[4]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"catch any import errors","position":{"start":{"line":90,"column":7,"offset":4588},"end":{"line":90,"column":30,"offset":4611},"indent":[]}}],"position":{"start":{"line":90,"column":7,"offset":4588},"end":{"line":90,"column":30,"offset":4611},"indent":[]}}],"position":{"start":{"line":90,"column":4,"offset":4585},"end":{"line":90,"column":30,"offset":4611},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"validate imported value","position":{"start":{"line":91,"column":7,"offset":4618},"end":{"line":91,"column":30,"offset":4641},"indent":[]}}],"position":{"start":{"line":91,"column":7,"offset":4618},"end":{"line":91,"column":30,"offset":4641},"indent":[]}}],"position":{"start":{"line":91,"column":4,"offset":4615},"end":{"line":91,"column":30,"offset":4641},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"load plugin","position":{"start":{"line":92,"column":7,"offset":4648},"end":{"line":92,"column":18,"offset":4659},"indent":[]}}],"position":{"start":{"line":92,"column":7,"offset":4648},"end":{"line":92,"column":18,"offset":4659},"indent":[]}}],"position":{"start":{"line":92,"column":4,"offset":4645},"end":{"line":92,"column":18,"offset":4659},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"catch any load errors","position":{"start":{"line":93,"column":7,"offset":4666},"end":{"line":93,"column":28,"offset":4687},"indent":[]}}],"position":{"start":{"line":93,"column":7,"offset":4666},"end":{"line":93,"column":28,"offset":4687},"indent":[]}}],"position":{"start":{"line":93,"column":4,"offset":4663},"end":{"line":93,"column":28,"offset":4687},"indent":[]}}],"position":{"start":{"line":88,"column":4,"offset":4562},"end":{"line":93,"column":28,"offset":4687},"indent":[4,4,4,4,4]}}],"position":{"start":{"line":87,"column":1,"offset":4503},"end":{"line":93,"column":28,"offset":4687},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":84,"column":1,"offset":4400},"end":{"line":93,"column":28,"offset":4687},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Build Flow","position":{"start":{"line":95,"column":4,"offset":4692},"end":{"line":95,"column":14,"offset":4702},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":4689},"end":{"line":95,"column":14,"offset":4702},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The app layout is calculated","position":{"start":{"line":97,"column":4,"offset":4707},"end":{"line":97,"column":32,"offset":4735},"indent":[]}},{"type":"break","position":{"start":{"line":97,"column":32,"offset":4735},"end":{"line":98,"column":4,"offset":4741},"indent":[4]}},{"type":"text","value":"We discover things like where the entrypoint is, if any, and where ","position":{"start":{"line":98,"column":4,"offset":4741},"end":{"line":98,"column":71,"offset":4808},"indent":[]}},{"type":"link","title":null,"url":"/guides/project-layout?id=nexus-modules","children":[{"type":"text","value":"Nexus modules","position":{"start":{"line":98,"column":72,"offset":4809},"end":{"line":98,"column":85,"offset":4822},"indent":[]}}],"position":{"start":{"line":98,"column":71,"offset":4808},"end":{"line":98,"column":127,"offset":4864},"indent":[]}},{"type":"text","value":" are, if any.","position":{"start":{"line":98,"column":127,"offset":4864},"end":{"line":98,"column":140,"offset":4877},"indent":[]}}],"position":{"start":{"line":97,"column":4,"offset":4707},"end":{"line":98,"column":140,"offset":4877},"indent":[4]}}],"position":{"start":{"line":97,"column":1,"offset":4704},"end":{"line":98,"column":140,"offset":4877},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Worktime plugins are loaded (see ","position":{"start":{"line":99,"column":4,"offset":4881},"end":{"line":99,"column":37,"offset":4914},"indent":[]}},{"type":"link","title":null,"url":"#plugin-loading-flow","children":[{"type":"text","value":"Plugin Loading Flow","position":{"start":{"line":99,"column":38,"offset":4915},"end":{"line":99,"column":57,"offset":4934},"indent":[]}}],"position":{"start":{"line":99,"column":37,"offset":4914},"end":{"line":99,"column":80,"offset":4957},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":99,"column":80,"offset":4957},"end":{"line":99,"column":81,"offset":4958},"indent":[]}}],"position":{"start":{"line":99,"column":4,"offset":4881},"end":{"line":99,"column":81,"offset":4958},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":4878},"end":{"line":99,"column":81,"offset":4958},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Typegen is acquired","position":{"start":{"line":100,"column":4,"offset":4962},"end":{"line":100,"column":23,"offset":4981},"indent":[]}},{"type":"break","position":{"start":{"line":100,"column":23,"offset":4981},"end":{"line":101,"column":4,"offset":4987},"indent":[4]}},{"type":"text","value":"This step is about processes that reflect upon the app's source code to extract type information that will be automatically used in other parts of the app. This approach is relatively novel among Node tools. There are dynamic and static processes. The static ones use the TypeScript compiler API while the dynamic ones literally run the app with node in a special reflective mode.","position":{"start":{"line":101,"column":4,"offset":4987},"end":{"line":101,"column":384,"offset":5367},"indent":[]}}],"position":{"start":{"line":100,"column":4,"offset":4962},"end":{"line":101,"column":384,"offset":5367},"indent":[4]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic has the benefit of being able to produce types that IDE's can pick up for use in not just TypeScript but also JavaScript. It works for the schema typegen because the GraphQL Schema builders permit generating accurate derived TypeScript. Dynamic works regardless of the abstractions users through over them. On the downside, dynamic is riskier because runtime errors in the app can halt its completion. When the types to be generated are based upon arbitrary code, the task becomes one of effectively re-writing TypeScript and thus impractical.","position":{"start":{"line":103,"column":4,"offset":5372},"end":{"line":103,"column":555,"offset":5923},"indent":[]}}],"position":{"start":{"line":103,"column":4,"offset":5372},"end":{"line":103,"column":555,"offset":5923},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Static doesn't have to deal with the unpredictabilities of running an app and so has the benefit of being easier to reason about in a sense. It also has the benefit of extracting accurate type information using the native TS system whereas dynamic relies on building TS types from scratch. This makes static a fit for arbitrary code. On the downside, robust AST processing is hard work, and so, so far, static restricts how certain expressions can be written, otherwise AST traversal fails.","position":{"start":{"line":105,"column":4,"offset":5928},"end":{"line":105,"column":494,"offset":6418},"indent":[]}}],"position":{"start":{"line":105,"column":4,"offset":5928},"end":{"line":105,"column":494,"offset":6418},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A start module is created in memory. It imports the entrypoint and all ","position":{"start":{"line":107,"column":7,"offset":6426},"end":{"line":107,"column":78,"offset":6497},"indent":[]}},{"type":"link","title":null,"url":"/guides/project-layout?id=nexus-modules","children":[{"type":"text","value":"Nexus modules","position":{"start":{"line":107,"column":79,"offset":6498},"end":{"line":107,"column":92,"offset":6511},"indent":[]}}],"position":{"start":{"line":107,"column":78,"offset":6497},"end":{"line":107,"column":134,"offset":6553},"indent":[]}},{"type":"text","value":". It registers an extension hook to transpile the TypeScript app on the fly as it is run. The transpilation uses the project's tsconfig but overrides target and module so that it is runnable by Node (10 and up). Specificaly es2015 target and commonjs module. For example if user had module of ","position":{"start":{"line":107,"column":134,"offset":6553},"end":{"line":107,"column":427,"offset":6846},"indent":[]}},{"type":"inlineCode","value":"esnext","position":{"start":{"line":107,"column":427,"offset":6846},"end":{"line":107,"column":435,"offset":6854},"indent":[]}},{"type":"text","value":" the transpilation result would not be runnable by Node.","position":{"start":{"line":107,"column":435,"offset":6854},"end":{"line":107,"column":491,"offset":6910},"indent":[]}}],"position":{"start":{"line":107,"column":7,"offset":6426},"end":{"line":107,"column":491,"offset":6910},"indent":[]}}],"position":{"start":{"line":107,"column":4,"offset":6423},"end":{"line":107,"column":491,"offset":6910},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The start module is run in a sub-process for maximum isolation. (we're looking at running within workers ","position":{"start":{"line":108,"column":7,"offset":6917},"end":{"line":108,"column":112,"offset":7022},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/graphql-nexus/nexus/issues/752","children":[{"type":"text","value":"#752","position":{"start":{"line":108,"column":113,"offset":7023},"end":{"line":108,"column":117,"offset":7027},"indent":[]}}],"position":{"start":{"line":108,"column":112,"offset":7022},"end":{"line":108,"column":169,"offset":7079},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":108,"column":169,"offset":7079},"end":{"line":108,"column":170,"offset":7080},"indent":[]}}],"position":{"start":{"line":108,"column":7,"offset":6917},"end":{"line":108,"column":170,"offset":7080},"indent":[]}}],"position":{"start":{"line":108,"column":4,"offset":6914},"end":{"line":108,"column":170,"offset":7080},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In parallel, a TypeScript instance is created and the app source is statically analyzed to extract context types. This does not require running the app at all. TypeScript cache called tsbuildinfo is stored under ","position":{"start":{"line":109,"column":7,"offset":7087},"end":{"line":109,"column":219,"offset":7299},"indent":[]}},{"type":"inlineCode","value":"node_modules/.nexus","position":{"start":{"line":109,"column":219,"offset":7299},"end":{"line":109,"column":240,"offset":7320},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":109,"column":240,"offset":7320},"end":{"line":109,"column":241,"offset":7321},"indent":[]}}],"position":{"start":{"line":109,"column":7,"offset":7087},"end":{"line":109,"column":241,"offset":7321},"indent":[]}}],"position":{"start":{"line":109,"column":4,"offset":7084},"end":{"line":109,"column":241,"offset":7321},"indent":[]}}],"position":{"start":{"line":107,"column":4,"offset":6423},"end":{"line":109,"column":241,"offset":7321},"indent":[4,4]}}],"position":{"start":{"line":100,"column":1,"offset":4959},"end":{"line":110,"column":1,"offset":7322},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A new TypeScript instance is created so that the types generated in the previous step are picked up by the checker. This should be faster because it reuses the TypeScript cache created in the previous step.","position":{"start":{"line":111,"column":4,"offset":7326},"end":{"line":111,"column":210,"offset":7532},"indent":[]}}],"position":{"start":{"line":111,"column":4,"offset":7326},"end":{"line":111,"column":210,"offset":7532},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":7323},"end":{"line":111,"column":210,"offset":7532},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The app is type checked","position":{"start":{"line":112,"column":4,"offset":7536},"end":{"line":112,"column":27,"offset":7559},"indent":[]}}],"position":{"start":{"line":112,"column":4,"offset":7536},"end":{"line":112,"column":27,"offset":7559},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":7533},"end":{"line":112,"column":27,"offset":7559},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The app is transpiled","position":{"start":{"line":113,"column":4,"offset":7563},"end":{"line":113,"column":25,"offset":7584},"indent":[]}}],"position":{"start":{"line":113,"column":4,"offset":7563},"end":{"line":113,"column":25,"offset":7584},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":7560},"end":{"line":113,"column":25,"offset":7584},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The app is emitted into ","position":{"start":{"line":114,"column":4,"offset":7588},"end":{"line":114,"column":28,"offset":7612},"indent":[]}},{"type":"inlineCode","value":".nexus/build","position":{"start":{"line":114,"column":28,"offset":7612},"end":{"line":114,"column":42,"offset":7626},"indent":[]}},{"type":"text","value":". This convention keeps derived files in a well known generally ignored location.","position":{"start":{"line":114,"column":42,"offset":7626},"end":{"line":114,"column":123,"offset":7707},"indent":[]}}],"position":{"start":{"line":114,"column":4,"offset":7588},"end":{"line":114,"column":123,"offset":7707},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":7585},"end":{"line":114,"column":123,"offset":7707},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A production-oriented start module is generated differing in the following ways:","position":{"start":{"line":115,"column":4,"offset":7711},"end":{"line":115,"column":84,"offset":7791},"indent":[]}}],"position":{"start":{"line":115,"column":4,"offset":7711},"end":{"line":115,"column":84,"offset":7791},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"paths are relative","position":{"start":{"line":116,"column":6,"offset":7797},"end":{"line":116,"column":24,"offset":7815},"indent":[]}}],"position":{"start":{"line":116,"column":6,"offset":7797},"end":{"line":116,"column":24,"offset":7815},"indent":[]}}],"position":{"start":{"line":116,"column":4,"offset":7795},"end":{"line":116,"column":24,"offset":7815},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"typescript not hooked into module extensions","position":{"start":{"line":117,"column":6,"offset":7821},"end":{"line":117,"column":50,"offset":7865},"indent":[]}}],"position":{"start":{"line":117,"column":6,"offset":7821},"end":{"line":117,"column":50,"offset":7865},"indent":[]}}],"position":{"start":{"line":117,"column":4,"offset":7819},"end":{"line":117,"column":50,"offset":7865},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"plugins are imported for tree-shaking","position":{"start":{"line":118,"column":6,"offset":7871},"end":{"line":118,"column":43,"offset":7908},"indent":[]}}],"position":{"start":{"line":118,"column":6,"offset":7871},"end":{"line":118,"column":43,"offset":7908},"indent":[]}}],"position":{"start":{"line":118,"column":4,"offset":7869},"end":{"line":118,"column":43,"offset":7908},"indent":[]}}],"position":{"start":{"line":116,"column":4,"offset":7795},"end":{"line":118,"column":43,"offset":7908},"indent":[4,4]}}],"position":{"start":{"line":115,"column":1,"offset":7708},"end":{"line":118,"column":43,"offset":7908},"indent":[1,1,1]}}],"position":{"start":{"line":97,"column":1,"offset":4704},"end":{"line":118,"column":43,"offset":7908},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Glossary","position":{"start":{"line":120,"column":4,"offset":7913},"end":{"line":120,"column":12,"offset":7921},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":7910},"end":{"line":120,"column":12,"offset":7921},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Assembly","position":{"start":{"line":122,"column":5,"offset":7927},"end":{"line":122,"column":13,"offset":7935},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":7923},"end":{"line":122,"column":13,"offset":7935},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process in which the app configuration (settings, schema type defs, used plugins, etc.) is processed into a runnable state. Nexus apps are only ever assembled once in their lifecycle.","position":{"start":{"line":124,"column":1,"offset":7937},"end":{"line":124,"column":188,"offset":8124},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":7937},"end":{"line":124,"column":188,"offset":8124},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Dynamic Reflection","position":{"start":{"line":126,"column":5,"offset":8130},"end":{"line":126,"column":23,"offset":8148},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":8126},"end":{"line":126,"column":23,"offset":8148},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process in which the app is run in order to extract data out of it. The data in turn can be used for anything. For example typegen to provide better TypeScript types or GraphQL SDL generation.","position":{"start":{"line":128,"column":1,"offset":8150},"end":{"line":128,"column":197,"offset":8346},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":8150},"end":{"line":128,"column":197,"offset":8346},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Static Reflection","position":{"start":{"line":130,"column":5,"offset":8352},"end":{"line":130,"column":22,"offset":8369},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":8348},"end":{"line":130,"column":22,"offset":8369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process in which the app is analyzed with the TS API to extract data out of it. The data in turn can be used for anything. For example typegen to provide better TypeScript types.","position":{"start":{"line":132,"column":1,"offset":8371},"end":{"line":132,"column":183,"offset":8553},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":8371},"end":{"line":132,"column":183,"offset":8553},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Reflection","position":{"start":{"line":134,"column":5,"offset":8559},"end":{"line":134,"column":15,"offset":8569},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":8555},"end":{"line":134,"column":15,"offset":8569},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The general idea of the app source code or its state at runtime being analyzed to extract data.","position":{"start":{"line":136,"column":1,"offset":8571},"end":{"line":136,"column":96,"offset":8666},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":8571},"end":{"line":136,"column":96,"offset":8666},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Architecture\",\"metaTitle\":\"Architecture\"}","position":{"start":{"line":139,"column":1,"offset":8669},"end":{"line":139,"column":80,"offset":8748},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":139,"column":80,"offset":8748}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Architecture\",\n  \"metaTitle\": \"Architecture\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"reflection\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#reflection\",\n    \"aria-label\": \"reflection permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Reflection\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"todo\")), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"assembly\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#assembly\",\n    \"aria-label\": \"assembly permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Assembly\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"todo\")), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"plugins\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#plugins\",\n    \"aria-label\": \"plugins permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Plugins\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"diagrams\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#diagrams\",\n    \"aria-label\": \"diagrams permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Diagrams\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"plugin-tree-shaking\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#plugin-tree-shaking\",\n    \"aria-label\": \"plugin tree shaking permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Plugin Tree Shaking\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://dsc.cloud/661643/plugin-tree-shaking.png\",\n    \"alt\": \"plugin-tree-shaking\"\n  }))))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"glossary\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#glossary\",\n    \"aria-label\": \"glossary permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Glossary\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"entrypoint\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#entrypoint\",\n    \"aria-label\": \"entrypoint permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Entrypoint\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A plugin entrypoint is responsible for returning the plugin's manifest input. This is what users actually deal with at the app layer.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { prisma } from 'nexus-plugin-prisma'\\n//       ~~~~~~ <------------- The entrypoint, returns a manifest input\\nimport { use } from 'nexus'\\n\\nuse(prisma())\\n\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"manifest\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#manifest\",\n    \"aria-label\": \"manifest permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Manifest\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A plugin manifest describes logistical information about a plugin like where its package file is located on disk, what versions of Nexus it is compatible with, and more.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Plugin manifests are created by Nexus by processing the manifest inputs returned by plugin entrypoints.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { prisma } from 'nexus-plugin-prisma'\\n\\nconst prismaPluginManifestInput = prisma()\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This lazy approach allows Nexus the flexibility it needs to provide features like automatic environment variable plugin settings injection and tree-shaking.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"manifest-input\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#manifest-input\",\n    \"aria-label\": \"manifest input permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Manifest Input\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A manifest input is the view of manifests that plugin authors work with. It models the minimum information that Nexus needs to build the plugin manifest. It is also more human friendly, for example minimizing the number of required fields. Developer experience is not the primary motivation here however. We want Nexus to control as much as possible, so the less the human has to specify the more we achieve this goal. For example we ask for a path to package json rather than the contents of it. We want Nexus to be the one that reads it, when and how it wants.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"dimension\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#dimension\",\n    \"aria-label\": \"dimension permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Dimension\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A plugin dimension represents a high-level area of plugin concern that are separated by module from other dimensions. In other words, each dimension has its own entrypoint. Nexus will directly import it. A dimension is found by Nexus from Nexus reading the Plugin manifest.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There are three dimensions: worktime, testtime, and runtime. Worktime allows plugins to tap into the CLI, the builder, dev mode, and more. Testtime allows plugins to tap into features of the Nexus testing component. Runtime allows plugins to tap into the API.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Directionally Nexus is on a good track, but there is work still left to do. The names are a bit confusing when you dig into the details, and the supposed separation between worktime/runtime has undesirable \\\"loopholes\\\" because of reflection. Details;\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Runtime dimension does not mean plugging exclusively into what is run in your production code. There are actually reasons to plug into the runtime for ostensibly worktime beneit... This is due to Nexus' so-called reflection system, wherein the app is run in the background during development for development purposes.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The rationale for splitting worktime from runtime is clear, tree-shaking alone makes the case for it. However the separation between worktime and testing is less clear, perhaps nonsense, and so may be revisited in the future.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We've talked about motivation for separating worktime from runtime, yet there are runtime parts for worktime (reflection). What this means is that expensive dependencies can make there way into the runtime dimension that a user should actually \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not\"), \" be paying for in production runtime.\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"lens\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#lens\",\n    \"aria-label\": \"lens permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Lens\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A plugin lens is just a specialized api into a subset of Nexus to hook into, extend, manipulate, and react to it during execution. The name \\\"lens\\\" is arbitrary. The choice comes from it being \\\"view\\\" into Nexus. Each dimension has its own specialized lens.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"dimension-entrypoint\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#dimension-entrypoint\",\n    \"aria-label\": \"dimension entrypoint permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Dimension Entrypoint\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Just like the plugin has a top level entrypoint so to does each dimension within the plugin have its own entrypoint. These sub-entrypoints can be thought as sub-plugins, with the top-level plugin just being a grouping mechanism.\"))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"comparisons-to-other-systems\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#comparisons-to-other-systems\",\n    \"aria-label\": \"comparisons to other systems permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Comparisons to Other Systems\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h4\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"rollup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#rollup\",\n    \"aria-label\": \"rollup permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Rollup\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Like Rollup plugins are prefixed with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<tool-name>-plugin-<plugin-name>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We have considered but so far not put first-party Nexus plugins under the pattern \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@nexus/plugin-<plugin-name>\"), \". Rollup made this transition retroactively.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rollup suggests plugins have a default export so that are much easier to use on the command line. Nexus suggests plugins also have default exports for similar system-usability reasons (not cli in Nexus' case, but other future features maybe like auto-use).\")))), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"loading-flow\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#loading-flow\",\n    \"aria-label\": \"loading flow permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Loading Flow\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"todo\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"what follows is a stub\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"capture the used plugins in the app\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"validate entrypoints\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"transform entrypoints into manifests\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"for each dimension (work, test, run) in the manifest\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"import i\\nt\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"catch any import errors\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"validate imported value\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"load plugin\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"catch any load errors\")))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"build-flow\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#build-flow\",\n    \"aria-label\": \"build flow permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Build Flow\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The app layout is calculated\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"We discover things like where the entrypoint is, if any, and where \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/guides/project-layout?id=nexus-modules\"\n  }), \"Nexus modules\"), \" are, if any.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Worktime plugins are loaded (see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#plugin-loading-flow\"\n  }), \"Plugin Loading Flow\"), \")\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Typegen is acquired\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"This step is about processes that reflect upon the app's source code to extract type information that will be automatically used in other parts of the app. This approach is relatively novel among Node tools. There are dynamic and static processes. The static ones use the TypeScript compiler API while the dynamic ones literally run the app with node in a special reflective mode.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Dynamic has the benefit of being able to produce types that IDE's can pick up for use in not just TypeScript but also JavaScript. It works for the schema typegen because the GraphQL Schema builders permit generating accurate derived TypeScript. Dynamic works regardless of the abstractions users through over them. On the downside, dynamic is riskier because runtime errors in the app can halt its completion. When the types to be generated are based upon arbitrary code, the task becomes one of effectively re-writing TypeScript and thus impractical.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Static doesn't have to deal with the unpredictabilities of running an app and so has the benefit of being easier to reason about in a sense. It also has the benefit of extracting accurate type information using the native TS system whereas dynamic relies on building TS types from scratch. This makes static a fit for arbitrary code. On the downside, robust AST processing is hard work, and so, so far, static restricts how certain expressions can be written, otherwise AST traversal fails.\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A start module is created in memory. It imports the entrypoint and all \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/guides/project-layout?id=nexus-modules\"\n  }), \"Nexus modules\"), \". It registers an extension hook to transpile the TypeScript app on the fly as it is run. The transpilation uses the project's tsconfig but overrides target and module so that it is runnable by Node (10 and up). Specificaly es2015 target and commonjs module. For example if user had module of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"esnext\"), \" the transpilation result would not be runnable by Node.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The start module is run in a sub-process for maximum isolation. (we're looking at running within workers \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus/issues/752\"\n  }), \"#752\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In parallel, a TypeScript instance is created and the app source is statically analyzed to extract context types. This does not require running the app at all. TypeScript cache called tsbuildinfo is stored under \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node_modules/.nexus\"), \".\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A new TypeScript instance is created so that the types generated in the previous step are picked up by the checker. This should be faster because it reuses the TypeScript cache created in the previous step.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The app is type checked\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The app is transpiled\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The app is emitted into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".nexus/build\"), \". This convention keeps derived files in a well known generally ignored location.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A production-oriented start module is generated differing in the following ways:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"paths are relative\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"typescript not hooked into module extensions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"plugins are imported for tree-shaking\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"glossary-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#glossary-1\",\n    \"aria-label\": \"glossary 1 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Glossary\"), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"assembly-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#assembly-1\",\n    \"aria-label\": \"assembly 1 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Assembly\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The process in which the app configuration (settings, schema type defs, used plugins, etc.) is processed into a runnable state. Nexus apps are only ever assembled once in their lifecycle.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"dynamic-reflection\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#dynamic-reflection\",\n    \"aria-label\": \"dynamic reflection permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Dynamic Reflection\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The process in which the app is run in order to extract data out of it. The data in turn can be used for anything. For example typegen to provide better TypeScript types or GraphQL SDL generation.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"static-reflection\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#static-reflection\",\n    \"aria-label\": \"static reflection permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Static Reflection\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The process in which the app is analyzed with the TS API to extract data out of it. The data in turn can be used for anything. For example typegen to provide better TypeScript types.\")), mdx(\"section\", {\n    parentName: \"section\"\n  }, mdx(\"h3\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"reflection-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#reflection-1\",\n    \"aria-label\": \"reflection 1 permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Reflection\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The general idea of the app source code or its state at runtime being analyzed to extract data.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Architecture\",\n  \"metaTitle\": \"Architecture\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"reflection\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#reflection\",\n          \"aria-label\": \"reflection permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Reflection`}</h2><p parentName=\"section\">{`todo`}</p></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"assembly\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#assembly\",\n          \"aria-label\": \"assembly permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Assembly`}</h2><p parentName=\"section\">{`todo`}</p></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"plugins\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#plugins\",\n          \"aria-label\": \"plugins permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Plugins`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"diagrams\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#diagrams\",\n            \"aria-label\": \"diagrams permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Diagrams`}</h3><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"plugin-tree-shaking\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#plugin-tree-shaking\",\n              \"aria-label\": \"plugin tree shaking permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Plugin Tree Shaking`}</h4><p parentName=\"section\"><img parentName=\"p\" {...{\n              \"src\": \"https://dsc.cloud/661643/plugin-tree-shaking.png\",\n              \"alt\": \"plugin-tree-shaking\"\n            }}></img></p></section></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"glossary\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#glossary\",\n            \"aria-label\": \"glossary permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Glossary`}</h3><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"entrypoint\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#entrypoint\",\n              \"aria-label\": \"entrypoint permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Entrypoint`}</h4><p parentName=\"section\">{`A plugin entrypoint is responsible for returning the plugin's manifest input. This is what users actually deal with at the app layer.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`import { prisma } from 'nexus-plugin-prisma'\n//       ~~~~~~ <------------- The entrypoint, returns a manifest input\nimport { use } from 'nexus'\n\nuse(prisma())\n`}</code></pre></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"manifest\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#manifest\",\n              \"aria-label\": \"manifest permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Manifest`}</h4><p parentName=\"section\">{`A plugin manifest describes logistical information about a plugin like where its package file is located on disk, what versions of Nexus it is compatible with, and more.`}</p><p parentName=\"section\">{`Plugin manifests are created by Nexus by processing the manifest inputs returned by plugin entrypoints.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n              \"className\": \"language-ts\"\n            }}>{`import { prisma } from 'nexus-plugin-prisma'\n\nconst prismaPluginManifestInput = prisma()\n`}</code></pre><p parentName=\"section\">{`This lazy approach allows Nexus the flexibility it needs to provide features like automatic environment variable plugin settings injection and tree-shaking.`}</p></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"manifest-input\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#manifest-input\",\n              \"aria-label\": \"manifest input permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Manifest Input`}</h4><p parentName=\"section\">{`A manifest input is the view of manifests that plugin authors work with. It models the minimum information that Nexus needs to build the plugin manifest. It is also more human friendly, for example minimizing the number of required fields. Developer experience is not the primary motivation here however. We want Nexus to control as much as possible, so the less the human has to specify the more we achieve this goal. For example we ask for a path to package json rather than the contents of it. We want Nexus to be the one that reads it, when and how it wants.`}</p></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"dimension\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#dimension\",\n              \"aria-label\": \"dimension permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Dimension`}</h4><p parentName=\"section\">{`A plugin dimension represents a high-level area of plugin concern that are separated by module from other dimensions. In other words, each dimension has its own entrypoint. Nexus will directly import it. A dimension is found by Nexus from Nexus reading the Plugin manifest.`}</p><p parentName=\"section\">{`There are three dimensions: worktime, testtime, and runtime. Worktime allows plugins to tap into the CLI, the builder, dev mode, and more. Testtime allows plugins to tap into features of the Nexus testing component. Runtime allows plugins to tap into the API.`}</p><p parentName=\"section\">{`Directionally Nexus is on a good track, but there is work still left to do. The names are a bit confusing when you dig into the details, and the supposed separation between worktime/runtime has undesirable \"loopholes\" because of reflection. Details;`}</p><ol parentName=\"section\">\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`Runtime dimension does not mean plugging exclusively into what is run in your production code. There are actually reasons to plug into the runtime for ostensibly worktime beneit... This is due to Nexus' so-called reflection system, wherein the app is run in the background during development for development purposes.`}</p>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`The rationale for splitting worktime from runtime is clear, tree-shaking alone makes the case for it. However the separation between worktime and testing is less clear, perhaps nonsense, and so may be revisited in the future.`}</p>\n            </li>\n            <li parentName=\"ol\">\n              <p parentName=\"li\">{`We've talked about motivation for separating worktime from runtime, yet there are runtime parts for worktime (reflection). What this means is that expensive dependencies can make there way into the runtime dimension that a user should actually `}<em parentName=\"p\">{`not`}</em>{` be paying for in production runtime.`}</p>\n            </li>\n          </ol></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"lens\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#lens\",\n              \"aria-label\": \"lens permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Lens`}</h4><p parentName=\"section\">{`A plugin lens is just a specialized api into a subset of Nexus to hook into, extend, manipulate, and react to it during execution. The name \"lens\" is arbitrary. The choice comes from it being \"view\" into Nexus. Each dimension has its own specialized lens.`}</p></section><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"dimension-entrypoint\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#dimension-entrypoint\",\n              \"aria-label\": \"dimension entrypoint permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Dimension Entrypoint`}</h4><p parentName=\"section\">{`Just like the plugin has a top level entrypoint so to does each dimension within the plugin have its own entrypoint. These sub-entrypoints can be thought as sub-plugins, with the top-level plugin just being a grouping mechanism.`}</p></section></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"comparisons-to-other-systems\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#comparisons-to-other-systems\",\n            \"aria-label\": \"comparisons to other systems permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Comparisons to Other Systems`}</h3><section parentName=\"section\"><h4 parentName=\"section\" {...{\n            \"id\": \"rollup\",\n            \"style\": {\n              \"position\": \"relative\"\n            }\n          }}><a parentName=\"h4\" {...{\n              \"href\": \"#rollup\",\n              \"aria-label\": \"rollup permalink\",\n              \"className\": \"title-link before\"\n            }}><svg parentName=\"a\" {...{\n                \"width\": \"17\",\n                \"height\": \"18\",\n                \"viewBox\": \"0 0 17 18\",\n                \"fill\": \"none\",\n                \"xmlns\": \"http://www.w3.org/2000/svg\"\n              }}>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 6.33337H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M1.5 11.6666H15.5\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M6.75 1L5 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                  \"d\": \"M12 1L10.25 17\",\n                  \"stroke\": \"#CBD5E0\",\n                  \"strokeWidth\": \"2\",\n                  \"strokeLineCap\": \"round\",\n                  \"strokeLineJoin\": \"round\"\n                }}></path>{`\n      `}</svg></a>{`Rollup`}</h4><ul parentName=\"section\">\n            <li parentName=\"ul\">{`Like Rollup plugins are prefixed with `}<inlineCode parentName=\"li\">{`<tool-name>-plugin-<plugin-name>`}</inlineCode></li>\n            <li parentName=\"ul\">{`We have considered but so far not put first-party Nexus plugins under the pattern `}<inlineCode parentName=\"li\">{`@nexus/plugin-<plugin-name>`}</inlineCode>{`. Rollup made this transition retroactively.`}</li>\n            <li parentName=\"ul\">{`Rollup suggests plugins have a default export so that are much easier to use on the command line. Nexus suggests plugins also have default exports for similar system-usability reasons (not cli in Nexus' case, but other future features maybe like auto-use).`}</li>\n          </ul></section></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"loading-flow\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#loading-flow\",\n            \"aria-label\": \"loading flow permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Loading Flow`}</h3><p parentName=\"section\">{`todo`}<br parentName=\"p\"></br>{`\n`}{`what follows is a stub`}</p><ol parentName=\"section\">\n          <li parentName=\"ol\">{`capture the used plugins in the app`}</li>\n          <li parentName=\"ol\">{`validate entrypoints`}</li>\n          <li parentName=\"ol\">{`transform entrypoints into manifests`}</li>\n          <li parentName=\"ol\">{`for each dimension (work, test, run) in the manifest`}<ol parentName=\"li\">\n              <li parentName=\"ol\">{`import i\nt`}</li>\n              <li parentName=\"ol\">{`catch any import errors`}</li>\n              <li parentName=\"ol\">{`validate imported value`}</li>\n              <li parentName=\"ol\">{`load plugin`}</li>\n              <li parentName=\"ol\">{`catch any load errors`}</li>\n            </ol></li>\n        </ol></section></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"build-flow\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#build-flow\",\n          \"aria-label\": \"build flow permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Build Flow`}</h2><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`The app layout is calculated`}<br parentName=\"p\"></br>{`\n`}{`We discover things like where the entrypoint is, if any, and where `}<a parentName=\"p\" {...{\n              \"href\": \"/guides/project-layout?id=nexus-modules\"\n            }}>{`Nexus modules`}</a>{` are, if any.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Worktime plugins are loaded (see `}<a parentName=\"p\" {...{\n              \"href\": \"#plugin-loading-flow\"\n            }}>{`Plugin Loading Flow`}</a>{`)`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Typegen is acquired`}<br parentName=\"p\"></br>{`\n`}{`This step is about processes that reflect upon the app's source code to extract type information that will be automatically used in other parts of the app. This approach is relatively novel among Node tools. There are dynamic and static processes. The static ones use the TypeScript compiler API while the dynamic ones literally run the app with node in a special reflective mode.`}</p>\n          <p parentName=\"li\">{`Dynamic has the benefit of being able to produce types that IDE's can pick up for use in not just TypeScript but also JavaScript. It works for the schema typegen because the GraphQL Schema builders permit generating accurate derived TypeScript. Dynamic works regardless of the abstractions users through over them. On the downside, dynamic is riskier because runtime errors in the app can halt its completion. When the types to be generated are based upon arbitrary code, the task becomes one of effectively re-writing TypeScript and thus impractical.`}</p>\n          <p parentName=\"li\">{`Static doesn't have to deal with the unpredictabilities of running an app and so has the benefit of being easier to reason about in a sense. It also has the benefit of extracting accurate type information using the native TS system whereas dynamic relies on building TS types from scratch. This makes static a fit for arbitrary code. On the downside, robust AST processing is hard work, and so, so far, static restricts how certain expressions can be written, otherwise AST traversal fails.`}</p>\n          <ol parentName=\"li\">\n            <li parentName=\"ol\">{`A start module is created in memory. It imports the entrypoint and all `}<a parentName=\"li\" {...{\n                \"href\": \"/guides/project-layout?id=nexus-modules\"\n              }}>{`Nexus modules`}</a>{`. It registers an extension hook to transpile the TypeScript app on the fly as it is run. The transpilation uses the project's tsconfig but overrides target and module so that it is runnable by Node (10 and up). Specificaly es2015 target and commonjs module. For example if user had module of `}<inlineCode parentName=\"li\">{`esnext`}</inlineCode>{` the transpilation result would not be runnable by Node.`}</li>\n            <li parentName=\"ol\">{`The start module is run in a sub-process for maximum isolation. (we're looking at running within workers `}<a parentName=\"li\" {...{\n                \"href\": \"https://github.com/graphql-nexus/nexus/issues/752\"\n              }}>{`#752`}</a>{`)`}</li>\n            <li parentName=\"ol\">{`In parallel, a TypeScript instance is created and the app source is statically analyzed to extract context types. This does not require running the app at all. TypeScript cache called tsbuildinfo is stored under `}<inlineCode parentName=\"li\">{`node_modules/.nexus`}</inlineCode>{`.`}</li>\n          </ol>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`A new TypeScript instance is created so that the types generated in the previous step are picked up by the checker. This should be faster because it reuses the TypeScript cache created in the previous step.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`The app is type checked`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`The app is transpiled`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`The app is emitted into `}<inlineCode parentName=\"p\">{`.nexus/build`}</inlineCode>{`. This convention keeps derived files in a well known generally ignored location.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`A production-oriented start module is generated differing in the following ways:`}</p>\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`paths are relative`}</li>\n            <li parentName=\"ul\">{`typescript not hooked into module extensions`}</li>\n            <li parentName=\"ul\">{`plugins are imported for tree-shaking`}</li>\n          </ul>\n        </li>\n      </ol></section>\n    <section><h2 parentName=\"section\" {...{\n        \"id\": \"glossary-1\",\n        \"style\": {\n          \"position\": \"relative\"\n        }\n      }}><a parentName=\"h2\" {...{\n          \"href\": \"#glossary-1\",\n          \"aria-label\": \"glossary 1 permalink\",\n          \"className\": \"title-link before\"\n        }}><svg parentName=\"a\" {...{\n            \"width\": \"17\",\n            \"height\": \"18\",\n            \"viewBox\": \"0 0 17 18\",\n            \"fill\": \"none\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\"\n          }}>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 6.33337H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M1.5 11.6666H15.5\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M6.75 1L5 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}<path parentName=\"svg\" {...{\n              \"d\": \"M12 1L10.25 17\",\n              \"stroke\": \"#CBD5E0\",\n              \"strokeWidth\": \"2\",\n              \"strokeLineCap\": \"round\",\n              \"strokeLineJoin\": \"round\"\n            }}></path>{`\n      `}</svg></a>{`Glossary`}</h2><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"assembly-1\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#assembly-1\",\n            \"aria-label\": \"assembly 1 permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Assembly`}</h3><p parentName=\"section\">{`The process in which the app configuration (settings, schema type defs, used plugins, etc.) is processed into a runnable state. Nexus apps are only ever assembled once in their lifecycle.`}</p></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"dynamic-reflection\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#dynamic-reflection\",\n            \"aria-label\": \"dynamic reflection permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Dynamic Reflection`}</h3><p parentName=\"section\">{`The process in which the app is run in order to extract data out of it. The data in turn can be used for anything. For example typegen to provide better TypeScript types or GraphQL SDL generation.`}</p></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"static-reflection\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#static-reflection\",\n            \"aria-label\": \"static reflection permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Static Reflection`}</h3><p parentName=\"section\">{`The process in which the app is analyzed with the TS API to extract data out of it. The data in turn can be used for anything. For example typegen to provide better TypeScript types.`}</p></section><section parentName=\"section\"><h3 parentName=\"section\" {...{\n          \"id\": \"reflection-1\",\n          \"style\": {\n            \"position\": \"relative\"\n          }\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#reflection-1\",\n            \"aria-label\": \"reflection 1 permalink\",\n            \"className\": \"title-link before\"\n          }}><svg parentName=\"a\" {...{\n              \"width\": \"17\",\n              \"height\": \"18\",\n              \"viewBox\": \"0 0 17 18\",\n              \"fill\": \"none\",\n              \"xmlns\": \"http://www.w3.org/2000/svg\"\n            }}>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 6.33337H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M1.5 11.6666H15.5\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M6.75 1L5 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}<path parentName=\"svg\" {...{\n                \"d\": \"M12 1L10.25 17\",\n                \"stroke\": \"#CBD5E0\",\n                \"strokeWidth\": \"2\",\n                \"strokeLineCap\": \"round\",\n                \"strokeLineJoin\": \"round\"\n              }}></path>{`\n      `}</svg></a>{`Reflection`}</h3><p parentName=\"section\">{`The general idea of the app source code or its state at runtime being analyzed to extract data.`}</p></section></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}