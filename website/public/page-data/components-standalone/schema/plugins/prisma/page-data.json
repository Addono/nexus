{"componentChunkName":"component---src-layouts-article-layout-tsx","path":"/components-standalone/schema/plugins/prisma","result":{"data":{"site":{"siteMetadata":{"docsLocation":"https://github.com/graphql-nexus/docs/tree/master/content"}},"mdx":{"fields":{"slug":"/06-components-standalone/01-schema/03-plugins/05-prisma"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Prisma\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"prisma\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#prisma\",\n    \"aria-label\": \"prisma permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Prisma\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Refer to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/plugins/prisma#runtime-integration\"\n  }), \"framework Prisma plugin docs\"), \" for API reference and concepts. What follows here are aspects that are particular to the schema plugin only.\")), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"installation-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#installation-docsify-ignore\",\n    \"aria-label\": \"installation docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Installation {docsify-ignore}\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cli\"\n  }), \"npm install nexus-prisma\\n\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"usage-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#usage-docsify-ignore\",\n    \"aria-label\": \"usage docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Usage {docsify-ignore}\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Import \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nexusPrismaPlugin\"), \" from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nexus-prisma\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create and configure it if needed (shouldn't be)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Pass into \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Nexus.makeSchema\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"plugins\"), \" array\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { nexusPrismaPlugin } from 'nexus-prisma'\\nimport { makeSchema } from '@nexus/schema'\\nimport * as types from './types'\\n\\nconst schema = makeSchema({\\n  types,\\n  plugins: [nexusPrismaPlugin()],\\n})\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can find runnable examples in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus-schema-plugin-prisma/tree/master/examples\"\n  }), \"repo examples folder\"), \".\")), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"configuration-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#configuration-docsify-ignore\",\n    \"aria-label\": \"configuration docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Configuration {docsify-ignore}\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Note that, In most cases, you should not need to configure anything.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type Options = {\\n  /**\\n   * nexus-prisma will call this to get a reference to an instance of the Prisma Client.\\n   * The function is passed the context object. Typically a Prisma Client instance will\\n   * be available on the context to support your custom resolvers. Therefore the\\n   * default getter returns `ctx.prisma`.\\n   */\\n  prismaClient?: PrismaClientFetcher\\n  /**\\n   * Same purpose as for that used in `NexusSchema.makeSchema`. Follows the same rules\\n   * and permits the same environment variables.\\n   */\\n  shouldGenerateArtifacts?: boolean\\n\\n  inputs?: {\\n    /**\\n     * What is the path to the Prisma Client package? By default looks in\\n     * `node_modules/@prisma/client`. This is needed in order to read your Prisma\\n     * schema AST and Prisma Client CRUD info from the generated Prisma Client package.\\n     */\\n    prismaClient?: string\\n  }\\n  outputs?: {\\n    /**\\n     * Where should typegen be put on disk? By default emits into `node_modules/@types`.\\n     */\\n    typegen?: string\\n  }\\n  computedInputs?: GlobalComputedInputs\\n}\\n\"))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"project-setup-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#project-setup-docsify-ignore\",\n    \"aria-label\": \"project setup docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Project Setup {docsify-ignore}\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"These are tips to help you with a successful project workflow\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Keep app schema somewhere apart from server so that you can do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ts-node --transpile-only path/to/schema/module\"), \" to generate typegen. This will come in handy in certain deployment contexts.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Consider using something like the following set of npm scripts. The\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postinstall\"), \" step is helpful for guarding against pruning since the\\ngenerated \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@types\"), \" packages will be seen as extraneous. We have an idea to\\nsolve this with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prisma-labs/nexus/issues/253\"\n  }), \"package\\nfacades\"), \". For yarn users\\nthough this would still be helpful since yarn rebuilds all packages whenever\\nthe dependency tree changes in any way\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/yarnpkg/yarn/issues/4703\"\n  }), \"issue\"), \"). The\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NODE_ENV=development\"), \" is needed to ensure typegen is run even in a context where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NODE_ENV\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"production\"), \" (like a heroku deploy pipeline, see next point). Also, consider using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kentcdodds/cross-env\"\n  }), \"cross-env\"), \" for better compatibility with different environments, e.g. on Windows.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"scripts\\\": {\\n    \\\"generate:prisma\\\": \\\"prisma generate\\\",\\n    \\\"generate:nexus\\\": \\\"cross-env NODE_ENV=development ts-node --transpile-only path/to/schema/module\\\",\\n    \\\"generate\\\": \\\"npm -s run generate:prisma && npm -s run generate:nexus\\\",\\n    \\\"postinstall\\\": \\\"npm -s run generate\\\"\\n  }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In your deployment pipeline you may wish to run a build step. Heroku buildpacks for example call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run build\"), \" if that script is defined in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \". If this is your case and you are a TypeScript user consider a build setup as follows. Prior to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tsc\"), \" we run artifact generation so that TypeScript will have types for the all the resolver signatures etc. of your app.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"scripts\\\": {\\n    \\\"build\\\": \\\"npm -s run generate && tsc\\\"\\n  }\\n}\\n\"))))), mdx(\"section\", null, mdx(\"h2\", _extends({\n    parentName: \"section\"\n  }, {\n    \"id\": \"legacy-note-docsify-ignore\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#legacy-note-docsify-ignore\",\n    \"aria-label\": \"legacy note docsify ignore permalink\",\n    \"className\": \"title-link before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"width\": \"17\",\n    \"height\": \"18\",\n    \"viewBox\": \"0 0 17 18\",\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  }), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 6.33337H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M1.5 11.6666H15.5\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M6.75 1L5 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \", mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M12 1L10.25 17\",\n    \"stroke\": \"#CBD5E0\",\n    \"strokeWidth\": \"2\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\"\n  })), \"\\n      \")), \"Legacy Note {docsify-ignore}\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you are still using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-prisma@0.3\"), \" / Prisma 1 you can find the old docs \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/schema/blob/8cf2d6b3e22a9dec1f7c23f384bf33b7be5a25cc/docs/database-access-with-prisma.md\"\n  }), \"here\"), \". Please note that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-prisma@0.3\"), \" is only compatible with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus\"), \" up to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.12.0-beta.14\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-nexus/nexus-prisma/issues/520\"\n  }), \"issue\"), \"). We do not currently have plans to update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus-prisma@0.3\"), \" to become compatible with versions of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nexus\"), \" newer than that.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","relativePath":"06-components-standalone/01-schema/03-plugins/05-prisma.mdx"},"tableOfContents":{"items":[{"url":"#prisma","title":"Prisma"},{"url":"#installation-docsify-ignore","title":"Installation {docsify-ignore}"},{"url":"#usage-docsify-ignore","title":"Usage {docsify-ignore}"},{"url":"#configuration-docsify-ignore","title":"Configuration {docsify-ignore}"},{"url":"#project-setup-docsify-ignore","title":"Project Setup {docsify-ignore}"},{"url":"#legacy-note-docsify-ignore","title":"Legacy Note {docsify-ignore}"}]},"frontmatter":{"title":"Prisma","metaTitle":null,"metaDescription":null}}},"pageContext":{"id":"302d36be-67ea-51d7-8f92-d1fee7b2df8c","seoTitle":"Prisma","seoDescription":"Prisma"}}}